{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vueLottieWeb.js","webpack:///webpack/bootstrap 19c8ec35f51e2eccbc3e","webpack:///src/VueLottieWeb/VueLottieWeb.vue","webpack:///./src/VueLottieWeb/index.js","webpack:///./src/VueLottieWeb/VueLottieWeb.vue","webpack:///./src/VueLottieWeb/VueLottieWeb.vue?5f92","webpack:///./src/VueLottieWeb/VueLottieWeb.vue?32d9","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/lottie-web/build/player/lottie.js","webpack:///./src/VueLottieWeb/VueLottieWeb.vue?42c6"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_lottie_web__","__WEBPACK_IMPORTED_MODULE_0_lottie_web___default","data","instance","props","className","type","String","default","renderer","loop","Boolean","autoplay","animationData","path","methods","extendMethods","customReplay","stop","setTimeout","play","transEvents","_this","forEach","keyName","e","$emit","mounted","paramsInfo","container","$refs","lottie","Error","a","loadAnimation","value","__WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__","Lottie","install","Vue","component","window","use","injectStyle","ssrContext","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueLottieWeb_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_681021d8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueLottieWeb_vue__","normalizeComponent","__vue_styles__","Component","content","locals","push","cssWithMappingToString","item","useSourceMap","cssMapping","btoa","sourceMapping","toComment","concat","sources","map","source","sourceRoot","join","sourceMap","unescape","encodeURIComponent","JSON","stringify","list","toString","mediaQuery","alreadyImportedModules","length","id","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","createStyleElement","styleElement","document","createElement","head","appendChild","obj","update","remove","querySelector","ssrIdKey","isProduction","noop","parentNode","removeChild","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","css","media","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","options","ssrId","firstChild","hasDocument","DEBUG","listToStyles","getElementsByTagName","navigator","test","userAgent","toLowerCase","parentId","_isProduction","_options","newList","mayRemove","textStore","replacement","filter","newStyles","part","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","render","staticRenderFns","_compiled","functional","_scopeId","hook","context","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","existing","beforeCreate","_injectStyles","h","__WEBPACK_AMD_DEFINE_RESULT__","undefined","ProjectInterface","roundValues","flag","bm_rnd","Math","round","val","styleDiv","element","style","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","t","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","HSVtoRGB","v","r","g","b","q","floor","RGBtoHSV","max","min","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","BaseEvent","createSizedArray","len","Array","apply","createNS","createElementNS","svgNS","createTag","DynamicPropertyContainer","extendPrototype","destination","sourcePrototype","attr","getDescriptor","prop","getOwnPropertyDescriptor","createProxyFunction","ProxyFunction","bezFunction","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","diffDist","dist1","sqrt","pow","dist2","dist3","getSegmentsLength","shapeData","segmentsLength","segments_length_pool","newElement","closed","pathV","pathO","pathI","_length","lengths","totalLength","getBezierLength","addedLength","BezierData","segmentLength","points","PointData","partial","point","partialLength","getDistancePerc","perc","bezierData","percents","initPos","bm_floor","lengthPos","lPerc","dir","getPointInSegment","pt1","pt2","pt3","pt4","percent","t1","u1","getNewSegment","startPerc","endPerc","t0","u0","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","bezier_segment_points","k","ptCoord","ptDistance","curveSegments","defaultCurveSegments","lastPoint","lengthData","bezier_length_pool","bm_pow","bm_sqrt","buildBezierData","storedData","bezierName","replace","createTypedArray","dataFunctionManager","completeLayers","layers","comps","fontManager","layerData","jLen","kLen","completed","tt","td","hasMask","maskProps","masksProperties","pt","convertPathsToAbsoluteValues","ty","findCompLayers","refId","completeShapes","shapes","completeText","__used","parse","arr","ks","it","checkVersion","minimum","animVersionString","animVersion","split","completeData","__complete","checkColors","checkText","checkChars","checkShapes","assets","singleShape","updateTextLayer","textLayer","documentData","iterateLayers","minimumVersion","chars","pathData","paths","__converted","iterateShapes","cl","moduleOb","ShapePath","_maxLength","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","DashProperty","elem","frameId","dataProps","dashStr","dashArray","dashoffset","initDynamicPropertyContainer","PropertyFactory","getProp","getValue","_isAnimated","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","TextAnimatorProperty","textData","renderType","_isFirstFrame","_hasMaskedPath","_frameId","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","defaultData","propType","textAnimator_animatables","degToRads","rx","ry","sk","sa","sw","sc","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","_mdf","TextProperty","initialDefaultFrame","pv","kf","comp","keysIndex","canResize","minimumFontSize","effectsSequence","currentData","ascent","boxWidth","defaultBoxWidth","fStyle","fWeight","justifyOffset","lh","lineWidths","ls","of","tr","sz","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","searchProperty","completeTextData","BaseRenderer","SVGRenderer","animationItem","config","renderedFrame","svgElement","ariaLabel","title","titleElement","titleId","createElementID","textContent","description","descElement","descId","defs","maskElement","layerElement","renderConfig","preserveAspectRatio","imagePreserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","globalData","frameNum","elements","pendingElements","destroyed","rendererType","CanvasRenderer","clearCanvas","dpr","wrapper","devicePixelRatio","currentGlobalAlpha","contextData","CVContextData","transformMat","Matrix","HybridRenderer","threeDElements","camera","supports3d","MaskElement","viewData","solidPath","rect","expansor","feMorph","x","properties","count","currentMasks","layerId","maskType","maskRef","mode","inv","w","filterID","expan","lastPath","lastOperator","filterId","lastRadius","mask","locationHref","createLayerSolidPath","op","ShapePropertyFactory","getShapeProp","invRect","drawPath","maskedElement","addRenderableComponent","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","pos","SVGStyleData","level","lvl","hd","pElem","msElem","SVGShapeData","transformers","shape","caches","lStr","sh","mProps","dynamicProperties","SVGTransformData","transform","SVGStrokeStyleData","styleOb","iterateDynamicProperties","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","ShapeTransformManager","sequences","sequenceList","transform_key_count","CVShapeData","transformsManager","styledShapes","styledShape","transforms","addTransformSequence","trNodes","BaseElement","NullElement","initFrame","initBaseData","initTransform","initHierarchy","SVGBaseElement","IShapeElement","ITextElement","ICompElement","IImageElement","assetData","getAssetData","initElement","sourceRect","width","height","ISolidElement","SVGCompElement","tm","frameRate","_placeholder","SVGTextElement","textSpans","SVGShapeElement","shapesData","stylesList","shapeModifiers","itemsData","processedElements","animatedContents","SVGTintFilter","filterManager","feColorMatrix","matrixFilter","effectElements","feMerge","feMergeNode","SVGFillFilter","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","SVGMatte3Effect","filterElem","matteElement","transformedElement","baseElement","SVGEffects","ef","filId","fil","filtersFactory","createFilter","filters","effectsManager","saved","cArrPos","cTr","cO","savedOp","CVBaseElement","CVImageElement","failed","img","imageLoader","getImage","CVCompElement","CVMaskElement","hasMasks","CVShapeElement","CVSolidElement","CVTextElement","stroke","fill","currentRender","values","sWidth","fValue","CVEffects","HBaseElement","HSolidElement","HCompElement","HShapeElement","shapesContainer","currentBBox","y","HTextElement","textPaths","isMasked","HImageElement","HCameraElement","pe","px","py","pz","z","or","to","ti","rz","mat","_prevMat","finalTransform","mProp","HEffects","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","EffectsManager","effects","effectItem","GroupEffect","init","setLocationHref","href","searchAnimations","standalone","animationManager","setSubframeRendering","subframeEnabled","params","setQuality","isNaN","inBrowser","installPlugin","plugin","expressionsPlugin","getFactory","checkReady","readyState","clearInterval","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","isSafari","cachedColors","bm_rounder","bm_abs","abs","bm_max","bm_min","blitter","BMMath","propertyNames","random","absArr","PI","roundCorner","_count","rgbToHex","hex","colorMap","triggerEvent","eventName","args","_cbs","addEventListener","callback","removeEventListener","splice","createRegularArray","Float32Array","Int16Array","Uint8ClampedArray","addDynamicProperty","indexOf","getBlendMode","blendModeEnums","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","reset","rotate","angle","mCos","_cos","mSin","_sin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","_tan","skewFromAxis","scale","setTransform","translate","tx","tz","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","applyToX","applyToY","applyToZ","inversePoint","determinant","inversePoints","pts","retPts","applyToTriplePoints","p0","p4","p5","p12","p13","applyToPointArray","applyToPointStringified","toCSS","cssValue","_rnd","roundMatrixProperty","to2dCSS","cos","sin","tan","pool","math","seedrandom","seed","key","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","chunks","startdenom","significance","overflow","int32","quick","double","S","pass","is_math_call","state","copy","rngname","global","keylen","me","slice","depth","result","typ","smear","stringseed","charCodeAt","nodecrypto","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","fromCharCode","BezierFactory","getBezierEasing","nm","str","beziers","bezEasing","BezierEasing","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","newtonRaphsonIterate","aGuessT","NEWTON_ITERATIONS","currentSlope","_mSampleValues","float32ArraySupported","kSplineTableSize","_precomputed","ob","kSampleStepSize","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","clearTimeout","bez","dataManager","FontManager","setUpNode","font","family","fontFamily","node","innerHTML","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","body","offsetWidth","checkLoadedFonts","fonts","loadedCount","loaded","fOrigin","origin","monoCase","sansCase","now","initTime","maxWaitingTime","isLoaded","createHelper","def","fontData","tHelper","fFamily","fClass","getContext","addFonts","fontArr","_pendingFonts","loadedSelector","shouldLoadFont","fPath","querySelectorAll","rel","src","helper","cache","addChars","found","ch","getCharData","char","console","warn","emptyChar","measureText","fontName","size","getFontByName","doubleSize","getComputedTextLength","singleSize","fName","getCombinedCharacterCodes","combinedCharacters","Font","typekitLoaded","interpolateValue","caching","newValue","offsetTime","keyData","nextKeyData","iterationIndex","lastIndex","keyframes","fnc","endValue","nextKeyTime","keyTime","ind","__fnct","segmentPerc","distanceInLine","lastFrame","_lastKeyframeIndex","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","quatStart","createQuaternion","quatEnd","time","quaternionToEuler","slerp","constructor","omega","cosom","sinom","scale0","scale1","az","aw","bx","by","bz","bw","acos","quat","qx","qy","qz","qw","heading","atan2","attitude","asin","bank","c3","s1","s2","s3","getValueAtCurrentTime","endTime","_caching","renderResult","setVValue","multipliedValue","mult","math_abs","processEffectsSequence","lock","finalValue","addEffect","effectFunction","ValueProperty","vel","MultiDimensionalProperty","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","arrLen","TransformPropertyFactory","applyToMatrix","processKeys","forceRender","_isDirty","precalculateMatrix","pre","appliedTransformations","autoOriented","v1","v2","getValueAtTime","autoOrient","_addDynamicProperty","TransformProperty","getTransformProperty","setPathData","setLength","point_pool","doubleArrayLength","setXYAt","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","cnt","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","interpolateShapeCurrentTime","resetShape","localShapeCollection","shapesEqual","shape1","shape2","shape_pool","releaseShapes","addShape","ShapeProperty","shapeCollection_pool","newShapeCollection","KeyframedShapeProperty","RectShapeProperty","EllShapeProperty","StarShapeProperty","getConstructorFunction","getKeyframedConstructorFunction","convertEllToPath","cPoint","s0","_cw","_v","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","os","rad","roundness","perimSegment","numPts","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","convertRectToPath","v0","ShapeModifiers","registerModifier","modifiers","getModifier","initModifierProperties","addShapeToModifier","setAsAnimated","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segments","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","_s","shapePaths","totalShapeLength","edges","newShapesData","addShapes","lastShapeInCollection","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","cont","unshift","resetElements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","comparePoints","buildShapeString","pathNodes","_o","_i","shapeString","ImagePreloader","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","getAssetsPath","assetsPath","original_path","imagePath","u","createImageData","crossOrigin","_imageLoaded","proxyImage","loadAssets","cb","images","_createImageData","setPath","setAssetsPath","destroy","canvas","ctx","fillStyle","fillRect","featureSupport","createAlphaToLuminanceFilter","assetLoader","formatResponse","xhr","response","responseText","loadAsset","errorCallback","XMLHttpRequest","open","responseType","err","send","onreadystatechange","status","load","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","animatorSelector","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","lineLength","letterM","letterP","defaultPropsArray","animatorJustifyOffset","animatorFirstCharOffset","justifyOffsetMult","isNewLine","getMult","anIndexes","totalChars","line","extra","an","animatorOffset","rot","atan","updated","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","currentIndex","textKeys","buildFinalText","text","charactersArray","charAt","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","charCode","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","_currentTextLength","finalS","finalE","xe","ne","textProperty","easer","tot","newCharsFlag","divisor","pool_factory","initialLength","_create","_release","_clone","pooling","create","cloned","shapeCollection","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","addPendingElement","searchExtraCompositions","xt","initExpressions","registerComposition","setupGlobalData","animData","fontsContainer","imagePreloader","fr","compSize","configAnimation","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","getBaseElement","nextElement","hide","show","ctxTransform","canvasContext","cProps","trProps","ctxOpacity","globalAlpha","restore","save","actionFlag","duplicate","blendMode","popped","mozTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","offsetHeight","elementRel","animationRel","par","fillType","substr","beginPath","closePath","clip","clearRect","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","tmpDOMElement","getThreeDContainerByPos","startPos","endPos","perspectiveElem","createThreeDContainer","webkitTransform","threeDContainerData","build3dContainers","lastThreeDContainerData","currentContainer","resizerElem","svg","setup","cWidth","cHeight","perspective","webkitPerspective","floatingContainer","isFirstFrame","finalMat","getMaskelement","pathString","pathShapeValue","_isParent","prepareProperties","isVisible","_matMdf","_opMdf","ao","renderTransform","globalToLocal","ptNew","initRenderable","isInRange","hidden","isTransparent","renderableComponents","removeRenderableComponent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","sourceRectAtTime","getLayerSize","initRendererElement","createContainerElements","createRenderableComponents","createContent","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","opFill","ms","ost","SVGElementsRenderer","createRenderFunction","renderFill","renderGradient","renderGradientStroke","renderStroke","renderPath","renderContentTransform","styleData","itemData","pathStringTransformed","redraw","iterations","lLen","_matrixHelper","_identityMatrix","styleElem","hasOpacity","attr1","attr2","cValues","oValues","ang","sequence","processSequence","processSequences","getNewKey","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","sr","getType","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","cp","clipId","cpGroup","renderableEffectsManager","addShapeToModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","elems","getElements","destroyElements","assetPath","pr","setAttributeNS","textContainer","buildTextContents","textArray","textContents","currentTextContent","usesGlyphs","tSpan","cachedSpansLength","tElement","justify","textBox","getBBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","elementData","gradientConstructor","lc","lj","ml","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","shapeProperty","fn","setElementStyles","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","animatedContent","colorBlack","colorWhite","opacity","initialize","groupPath","elemChildren","children","removeAttribute","pathMasker","dasharrayValue","getTotalLength","units","color1","color2","color3","tableR","tableG","tableB","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","col","_svgMatteSymbols","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","newLength","currentSavedOp","set","createElements","globalCompositeOperation","hideElement","showElement","widthCrop","heightCrop","imgW","imgH","imgRel","canvasRel","drawImage","parentMatrix","moveTo","lineTo","bezierCurveTo","transformHelper","dashResetter","preTransforms","co","wi","da","do","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","nodes","currentStyle","coOp","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","hasFill","hasStroke","commands","pathArr","lastFill","lastStroke","lastStrokeW","checkBlendMode","tg","addEffects","backgroundColor","_createBaseContainerElements","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","right","yMax","bottom","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","currentBoxContains","box","changed","compW","compH","innerElemStyle","strokeWidth","lineHeight","tParent","tCont","textPath","margin","Image","imageElem","mTransf","diffVector","mag","lookDir","lookLengthOnXZ","m_rotationX","m_rotationY","hasMatrixChanged","removeElement","ev","animItem","registeredAnimations","animation","isPaused","subtractPlayingCount","registerAnimation","AnimationItem","setupAnimation","setData","getRegisteredAnimations","animations","addPlayingCount","playingAnimationsNum","activate","setParams","setSpeed","setDirection","resume","nowTime","elapsedTime","advanceTime","_isFrozen","_stopped","first","pause","goToAndStop","isFrame","togglePause","animElements","getElementsByClassName","div","resize","freeze","unfreeze","currentRawFrame","frameMult","playSpeed","playDirection","playCount","animationID","timeCompleted","segmentPos","_idle","_completedLoop","animType","rendererSettings","parseInt","autoloadSegments","lastIndexOf","fileName","trigger","wrapperAttributes","attributes","getNamedItem","prerender","loadNextSegment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","updaFrameModifier","waitForFontsLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getDuration","Expressions","pushExpression","stackCount","popExpression","releaseInstances","registerExpressionProperty","expression","registers","ExpressionManager","$bm_isInstanceOfArray","isNumerable","tOfV","Number","$bm_neg","tOfA","lenA","retArr","sum","tOfB","lenB","sub","mul","mod","clamp","mm","radiansToDegrees","degreesToRadians","arr1","arr2","helperLengthArray","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","_tMin","rnd","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","loopInDuration","duration","loopIn","loopOutDuration","loopOut","lookAt","elem1","elem2","fVec","pitch","easeOut","val1","val2","applyEase","easeOutBez","easeIn","easeInBez","ease","easeInOutBez","nearestKey","framesToTime","frames","fps","timeToFrames","seedRandom","randSeed","substring","executeExpression","_value","_needsRandom","frameExpressionId","textIndex","textTotal","selectorValue","thisLayer","thisComp","toWorld","fromWorld","fromComp","toComp","fromCompToSurface","$bm_transform","anchorPoint","elemType","effect","hasParent","needsVelocity","velocity","velocityAtTime","expression_function","scoped_bm_rt","thisProperty","valueAtTime","frameDuration","displayStartTime","inPoint","outPoint","loop_in","loop_out","smooth","rotation","__expression_functions","xf","eval","numKeys","active","wiggle","freq","amp","addedAmps","periods","getVelocityAtTime","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","radians_to_degrees","degrees_to_radians","expressionHelpers","searchExpressions","_cachingAtTime","getSpeedAtTime","speed","getStaticValueAtTime","setGroupProperty","propertyGroup","durationFlag","lastKeyFrame","cycleDuration","firstKeyFrame","ret","initV","endV","current","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","samples","endFrame","sampleFrequency","sampleValue","getTransformValueAtTime","getTransformStaticValueAtTime","getShapeValueAtTime","shapeValue","ShapeExpressions","propertyGetProp","propertyIndex","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","tangentOnPath","normalOnPath","propertyGetShapeProp","trims","calculateExpression","getExpressionValue","isKeyframed","hasExpressions","iterateElements","view","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","pathInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","contentsInterfaceFactory","interfaces","interfaceFunction","_name","mn","numProperties","cix","transformInterface","transformInterfaceFactory","np","defineProperties","ExpressionPropertyInterface","_propertyGroup","_dashPropertyGroup","dashOb","dash","start","skewAxis","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_interfaceFunction","_thisLayerFunction","_sourceText","stringValue","_prevValue","toWorldMat","sampleImage","_registerMaskInterface","MaskManagerInterface","_registerEffectsInterface","TransformExpressionInterface","anchorPointDescriptor","anchor_point","startTime","pixelAspect","numLayers","_thisFunction","xRotation","yRotation","xPosition","yPosition","zPosition","_transformFactory","compositions","_thisProjectFunction","effectsData","createGroupInterface","groupInterface","createValueInterface","enabled","en","expressionProperty","MaskInterface","_mask","_data","_masksInterfaces","completeProperty","expressionValue","valueProp","assign","speedAtTime","UnidimensionalPropertyInterface","defaultUnidimensionalValue","MultidimensionalPropertyInterface","defaultMultidimensionalValue","arrValue","defaultGetter","TextExpressionSelectorProp","getValueProxy","total","propertyGetTextProp","eff","lottiejs","__getFactory","version","scripts","myScript","setInterval","_vm","_h","$createElement","_self","_c","ref","staticClass","class","esExports"],"mappings":"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","file":"vueLottieWeb.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-lottie-web\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-lottie-web\"] = factory();\n\telse\n\t\troot[\"vue-lottie-web\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-lottie-web\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-lottie-web\"] = factory();\n\telse\n\t\troot[\"vue-lottie-web\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lottie_web__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lottie_web___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lottie_web__);\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    name: \"vue-lottie-web\",\n    data: function data() {\n        return {\n            instance: false\n        };\n    },\n\n\n    // 父级注册lottie动画参数\n    // getLottieInstance 为子组件抛出动画对象的事件 由父组件获取使用\n    props: {\n        className: {\n            type: String,\n            default: ''\n        },\n\n        renderer: {\n            type: String,\n            default: 'canvas'\n        },\n        loop: {\n            type: Boolean,\n            default: true\n        },\n        autoplay: {\n            type: Boolean,\n            default: true\n        },\n\n        animationData: {\n            type: Object | String,\n            default: ''\n        },\n        path: {\n            type: String,\n            default: ''\n        }\n    },\n\n    methods: {\n        // 扩展方法\n        extendMethods: function extendMethods(instance) {\n            // 自定义重播动画方法\n            instance.customReplay = function () {\n                instance.stop();\n                setTimeout(function () {\n                    instance.play();\n                });\n            };\n        },\n\n        // 透传注册事件\n        transEvents: function transEvents(instance) {\n            var _this = this;\n\n            var events = ['onComplete', 'onLoopComplete', 'onEnterFrame', 'onSegmentStart'];\n\n            events.forEach(function (keyName) {\n                instance[keyName] = function (e) {\n                    return _this.$emit(keyName, e);\n                };\n            });\n        }\n    },\n\n    mounted: function mounted() {\n        // 获取lottie参数 生成对象 并且扩展方法\n        var renderer = this.renderer,\n            loop = this.loop,\n            autoplay = this.autoplay,\n            animationData = this.animationData,\n            path = this.path;\n\n\n        var paramsInfo = {\n            container: this.$refs.lottie,\n            renderer: renderer,\n            autoplay: autoplay,\n            loop: loop\n        };\n\n        if (animationData) {\n            paramsInfo.animationData = animationData;\n        } else if (path) {\n            paramsInfo.path = path;\n        } else {\n            throw new Error(\"Check Lottie Component's Props\");\n        }\n\n        // lottie实例生成\n        this.instance = __WEBPACK_IMPORTED_MODULE_0_lottie_web___default.a.loadAnimation(paramsInfo);\n\n        // 自定义扩展方法与透传注册事件\n        this.extendMethods(this.instance);\n        this.transEvents(this.instance);\n\n        // 抛出getLottieInstance事件 父节点获取动画对象\n        this.$emit('getLottieInstance', this.instance);\n    }\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__ = __webpack_require__(2);\n\n\n// Vue.js 的插件应当有一个公开方法 install 。第一个参数是 Vue 构造器，第二个参数是一个可选的选项对象\n// 参考：https://cn.vuejs.org/v2/guide/plugins.html#%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6\n\n//注册组件\n__WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__[\"a\" /* default */].install = function (Vue) {\n    return Vue.component(__WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__[\"a\" /* default */]);\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    Vue.use(__WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__[\"a\" /* default */]);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__[\"a\" /* default */]);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueLottieWeb_vue__ = __webpack_require__(0);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_681021d8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueLottieWeb_vue__ = __webpack_require__(10);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(3)\n}\nvar normalizeComponent = __webpack_require__(8)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueLottieWeb_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_681021d8_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueLottieWeb_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(4);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(6)(\"6a3dd40a\", content, true, {});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(5)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".lottie{font-size:0}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(7)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;(typeof navigator !== \"undefined\") && (function(root, factory) {\r\n    if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n            return factory(root);\r\n        }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nvar createElementID = (function(){\r\n    var _count = 0;\r\n    return function createID() {\r\n        return '__lottie_element_' + ++_count\r\n    }\r\n}())\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\nfunction DynamicPropertyContainer(){};\r\nDynamicPropertyContainer.prototype = {\r\n\taddDynamicProperty: function(prop) {\r\n\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t        this.dynamicProperties.push(prop);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    \tthis._isAnimated = true;\r\n\t    }\r\n\t},\r\n\titerateDynamicProperties: function(){\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf) {\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t},\r\n\tinitDynamicPropertyContainer: function(container){\r\n\t    this.container = container;\r\n\t    this.dynamicProperties = [];\r\n\t    this._mdf = false;\r\n\t    this._isAnimated = false;\r\n\t}\r\n}\r\nvar getBlendMode = (function() {\r\n\r\n\tvar blendModeEnums = {\r\n        0:'source-over',\r\n        1:'multiply',\r\n        2:'screen',\r\n        3:'overlay',\r\n        4:'darken',\r\n        5:'lighten',\r\n        6:'color-dodge',\r\n        7:'color-burn',\r\n        8:'hard-light',\r\n        9:'soft-light',\r\n        10:'difference',\r\n        11:'exclusion',\r\n        12:'hue',\r\n        13:'saturation',\r\n        14:'color',\r\n        15:'luminosity'\r\n    }\r\n\r\n\treturn function(mode) {\r\n\t\treturn blendModeEnums[mode] || '';\r\n\t}\r\n}())\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        if(!sz && sz !== 0) {\r\n            sz = 1;\r\n        }\r\n        if(sx === 1 && sy === 1 && sz === 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        var _p = this.props;\r\n        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function roundMatrixProperty(val) {\r\n        var v = 10000;\r\n        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n            return _rnd(val * v) / v;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var props = this.props;\r\n        var _a = roundMatrixProperty(props[0]);\r\n        var _b = roundMatrixProperty(props[1]);\r\n        var _c = roundMatrixProperty(props[4]);\r\n        var _d = roundMatrixProperty(props[5]);\r\n        var _e = roundMatrixProperty(props[12]);\r\n        var _f = roundMatrixProperty(props[13]);\r\n        return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.001 && det1 < 0.001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed && len){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (pt1, pt2, pt3, pt4){\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(!storedData[bezierName]){\r\n                var curveSegments = defaultCurveSegments;\r\n                var k, i, len;\r\n                var ptCoord,perc,addedLength = 0;\r\n                var ptDistance;\r\n                var point,lastPoint = null;\r\n                if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                    curveSegments = 2;\r\n                }\r\n                var bezierData = new BezierData(curveSegments);\r\n                len = pt3.length;\r\n                for (k = 0; k < curveSegments; k += 1) {\r\n                    point = createSizedArray(len);\r\n                    perc = k / (curveSegments - 1);\r\n                    ptDistance = 0;\r\n                    for (i = 0; i < len; i += 1){\r\n                        ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                        point[i] = ptCoord;\r\n                        if(lastPoint !== null){\r\n                            ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                        }\r\n                    }\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                    bezierData.points[k] = new PointData(ptDistance, point);\r\n                    lastPoint = point;\r\n                }\r\n                bezierData.segmentLength = addedLength;\r\n                storedData[bezierName] = bezierData;\r\n            }\r\n            return storedData[bezierName];\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3;\r\n        var t0t0u0_3 = t0*t0*u0*3;\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(this.checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.isLoaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        //tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.setAttribute('font-family', fontData.fFamily);\r\n        tHelper.setAttribute('font-style', fontData.fStyle);\r\n        tHelper.setAttribute('font-weight', fontData.fWeight);\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.setAttribute('class', fontData.fClass);\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;\r\n        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n        return tHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.isLoaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.isLoaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        var _pendingFonts = len;\r\n        for(i=0; i<len; i+= 1){\r\n            var shouldLoadFont = true;\r\n            var loadedSelector;\r\n            var j;\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n                _pendingFonts -= 1;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"'+ fontArr[i].fFamily +'\"], style[f-origin=\"3\"][f-family=\"'+ fontArr[i].fFamily +'\"]');\r\n\r\n                if (loadedSelector.length > 0) {\r\n                    shouldLoadFont = false;\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var s = createTag('style');\r\n                    s.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    s.setAttribute('f-origin', fontArr[i].origin);\r\n                    s.setAttribute('f-family', fontArr[i].fFamily);\r\n                    s.type = \"text/css\";\r\n                    s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                    defs.appendChild(s);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var l = createTag('link');\r\n                    l.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    l.setAttribute('f-origin', fontArr[i].origin);\r\n                    l.type = \"text/css\";\r\n                    l.rel = \"stylesheet\";\r\n                    l.href = fontArr[i].fPath;\r\n                    document.body.appendChild(l);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (fontArr[i].fPath === loadedSelector[j].src) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var sc = createTag('link');\r\n                    sc.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    sc.setAttribute('f-origin', fontArr[i].origin);\r\n                    sc.setAttribute('rel','stylesheet');\r\n                    sc.setAttribute('href',fontArr[i].fPath);\r\n                    defs.appendChild(sc);\r\n                }\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            fontArr[i].cache = {};\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        if (_pendingFonts === 0) {\r\n            this.isLoaded = true;\r\n        } else {\r\n            //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\r\n            //Adding this timeout seems to fix it\r\n           setTimeout(this.checkLoadedFonts.bind(this), 100);\r\n        }\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size) {\r\n        var fontData = this.getFontByName(fontName);\r\n        var index = char.charCodeAt(0);\r\n        if(!fontData.cache[index + 1]) {\r\n            var tHelper = fontData.helper;\r\n            //Canvas version\r\n            //fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n            //SVG version\r\n            //console.log(tHelper.getBBox().width)\r\n            if (char === ' ') {\r\n                tHelper.textContent = '|' + char + '|';\r\n                var doubleSize = tHelper.getComputedTextLength();\r\n                tHelper.textContent = '||';\r\n                var singleSize = tHelper.getComputedTextLength();\r\n                fontData.cache[index + 1] = (doubleSize - singleSize)/100;\r\n            } else {\r\n                tHelper.textContent = char;\r\n                fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;\r\n            }\r\n        }\r\n        return fontData.cache[index + 1] * size;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return this.fonts[0];\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.isLoaded;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.isLoaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n    Font.prototype.checkLoadedFonts = checkLoadedFonts;\r\n    Font.prototype.loaded = loaded;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n    var math_abs = Math.abs;\r\n\r\n    function interpolateValue(frameNum, caching) {\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if (this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', this.pv.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length - 1, flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while (flag) {\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i + 1];\r\n            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if ((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if (i < len - 1){\r\n                i += 1;\r\n            } else {\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen, perc, jLen, j, fnc;\r\n        var nextKeyTime = nextKeyData.t - offsetTime;\r\n        var keyTime = keyData.t - offsetTime;\r\n        var endValue;\r\n        if (keyData.to) {\r\n            if (!keyData.bezierData) {\r\n                keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if (frameNum >= nextKeyTime || frameNum < keyTime) {\r\n                var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for (k = 0; k < kLen; k += 1) {\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                // caching._lastKeyframeIndex = -1;\r\n            } else {\r\n                if (keyData.__fnct) {\r\n                    fnc = keyData.__fnct;\r\n                } else {\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while (flag) {\r\n                    addedLength += bezierData.points[j].partialLength;\r\n                    if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\r\n                        segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if (j < jLen - 1){\r\n                        j += 1;\r\n                    } else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastKeyframeIndex = i;\r\n            }\r\n        } else {\r\n            var outX, outY, inX, inY, keyValue;\r\n            len = keyData.s.length;\r\n            endValue = nextKeyData.s || keyData.e;\r\n            if (this.sh && keyData.h !== 1) {\r\n                if (frameNum >= nextKeyTime) {\r\n                    newValue[0] = endValue[0];\r\n                    newValue[1] = endValue[1];\r\n                    newValue[2] = endValue[2];\r\n                } else if (frameNum <= keyTime) {\r\n                    newValue[0] = keyData.s[0];\r\n                    newValue[1] = keyData.s[1];\r\n                    newValue[2] = keyData.s[2];\r\n                } else {\r\n                    var quatStart = createQuaternion(keyData.s);\r\n                    var quatEnd = createQuaternion(endValue);\r\n                    var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\r\n                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n                }\r\n                \r\n            } else {\r\n                for(i = 0; i < len; i += 1) {\r\n                    if (keyData.h !== 1) {\r\n                        if (frameNum >= nextKeyTime) {\r\n                            perc = 1;\r\n                        } else if(frameNum < keyTime) {\r\n                            perc = 0;\r\n                        } else {\r\n                            if(keyData.o.x.constructor === Array) {\r\n                                if (!keyData.__fnct) {\r\n                                    keyData.__fnct = [];\r\n                                }\r\n                                if (!keyData.__fnct[i]) {\r\n                                    outX = (typeof keyData.o.x[i] === 'undefined') ? keyData.o.x[0] : keyData.o.x[i];\r\n                                    outY = (typeof keyData.o.y[i] === 'undefined') ? keyData.o.y[0] : keyData.o.y[i];\r\n                                    inX = (typeof keyData.i.x[i] === 'undefined') ? keyData.i.x[0] : keyData.i.x[i];\r\n                                    inY = (typeof keyData.i.y[i] === 'undefined') ? keyData.i.y[0] : keyData.i.y[i];\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct[i] = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct[i];\r\n                                }\r\n                            } else {\r\n                                if (!keyData.__fnct) {\r\n                                    outX = keyData.o.x;\r\n                                    outY = keyData.o.y;\r\n                                    inX = keyData.i.x;\r\n                                    inY = keyData.i.y;\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct;\r\n                                }\r\n                            }\r\n                            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime ));\r\n                        }\r\n                    }\r\n\r\n                    endValue = nextKeyData.s || keyData.e;\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\r\n\r\n                    if (len === 1) {\r\n                        newValue = keyValue;\r\n                    } else {\r\n                        newValue[i] = keyValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    //based on @Toji's https://github.com/toji/gl-matrix/\r\n    function slerp(a, b, t) {\r\n        var out = [];\r\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\r\n        var omega, cosom, sinom, scale0, scale1;\r\n\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    function quaternionToEuler(out, quat) {\r\n        var qx = quat[0];\r\n        var qy = quat[1];\r\n        var qz = quat[2];\r\n        var qw = quat[3];\r\n        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n        out[0] = heading/degToRads;\r\n        out[1] = attitude/degToRads;\r\n        out[2] = bank/degToRads;\r\n    }\r\n\r\n    function createQuaternion(values) {\r\n        var heading = values[0] * degToRads;\r\n        var attitude = values[1] * degToRads;\r\n        var bank = values[2] * degToRads;\r\n        var c1 = Math.cos(heading / 2);\r\n        var c2 = Math.cos(attitude / 2);\r\n        var c3 = Math.cos(bank / 2);\r\n        var s1 = Math.sin(heading / 2);\r\n        var s2 = Math.sin(attitude / 2);\r\n        var s3 = Math.sin(bank / 2);\r\n        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n        return [x,y,z,w];\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            if(this._caching.lastFrame >= frameNum) {\r\n                this._caching._lastKeyframeIndex = -1;\r\n                this._caching.lastIndex = 0;\r\n            }\r\n\r\n            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n            this.pv = renderResult;\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function setVValue(val) {\r\n        var multipliedValue;\r\n        if(this.propType === 'unidimensional') {\r\n            multipliedValue = val * this.mult;\r\n            if(math_abs(this.v - multipliedValue) > 0.00001) {\r\n                this.v = multipliedValue;\r\n                this._mdf = true;\r\n            }\r\n        } else {\r\n            var i = 0, len = this.v.length;\r\n            while (i < len) {\r\n                multipliedValue = val[i] * this.mult;\r\n                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\r\n                    this.v[i] = multipliedValue;\r\n                    this._mdf = true;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }        \r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = this._isFirstFrame;\r\n        var multipliedValue;\r\n        var i, len = this.effectsSequence.length;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this._isFirstFrame = false;\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    function ValueProperty(elem, data, mult, container){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.effectsSequence = [];\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult, container) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = data.k[i] * this.mult;\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this._isFirstFrame = true;\r\n        this.effectsSequence = [];\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult, container) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.v = initFrame;\r\n        this.pv = initFrame;\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        for (i = 0; i < arrLen; i += 1) {\r\n            this.v[i] = initFrame;\r\n            this.pv[i] = initFrame;\r\n        }\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, container) {\r\n        var p;\r\n        if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult, container);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.effectsSequence.length){\r\n            container.addDynamicProperty(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var _mdf = this._mdf;\r\n        this.iterateDynamicProperties();\r\n        this._mdf = this._mdf || _mdf;\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.sk) {\r\n            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        if(this._isDirty) {\r\n            this.precalculateMatrix();\r\n            this._isDirty = false;\r\n        }\r\n\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.cloneFromProps(this.pre.props);\r\n            if (this.appliedTransformations < 1) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.appliedTransformations < 2) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk && this.appliedTransformations < 3) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r && this.appliedTransformations < 4) {\r\n                this.v.rotate(-this.r.v);\r\n            } else if (!this.r && this.appliedTransformations < 4){\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented) {\r\n                var v1,v2, frameRate = this.elem.globalData.frameRate;\r\n                if(this.p && this.p.keyframes && this.p.getValueAtTime) {\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\r\n                    }\r\n                } else if(this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\r\n                    v1 = [];\r\n                    v2 = [];\r\n                    var px = this.px, py = this.py, frameRate;\r\n                    if (px._caching.lastFrame+px.offsetTime <= px.keyframes[0].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate,0);\r\n                    } else if(px._caching.lastFrame+px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate),0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate),0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                    } else {\r\n                        v1 = [px.pv, py.pv];\r\n                        v2[0] = px.getValueAtTime((px._caching.lastFrame+px.offsetTime - 0.01) / frameRate,px.offsetTime);\r\n                        v2[1] = py.getValueAtTime((py._caching.lastFrame+py.offsetTime - 0.01) / frameRate,py.offsetTime);\r\n                    }\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p && this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function precalculateMatrix() {\r\n        if(!this.a.k) {\r\n            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            this.appliedTransformations = 1;\r\n        } else {\r\n            return;\r\n        }\r\n        if(!this.s.effectsSequence.length) {\r\n            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            this.appliedTransformations = 2;\r\n        } else {\r\n            return;\r\n        }\r\n        if(this.sk) {\r\n            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n                this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n            this.appliedTransformations = 3;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.r) {\r\n            if(!this.r.effectsSequence.length) {\r\n                this.pre.rotate(-this.r.v);\r\n                this.appliedTransformations = 4;\r\n            } else {\r\n                return;\r\n            }\r\n        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            this.appliedTransformations = 4;\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function addDynamicProperty(prop) {\r\n        this._addDynamicProperty(prop);\r\n        this.elem.addDynamicProperty(prop);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    function TransformProperty(elem,data,container){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        //Precalculated matrix with non animated properties\r\n        this.pre = new Matrix();\r\n        this.appliedTransformations = 0;\r\n        this.initDynamicPropertyContainer(container || elem);\r\n        if(data.p && data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p || {k:[0,0,0]},1,0,this);\r\n        }\r\n        if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        } else {\r\n            this.r = PropertyFactory.getProp(elem, data.r || {k: 0}, 0, degToRads, this);\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n        }\r\n        this.a = PropertyFactory.getProp(elem,data.a || {k:[0,0,0]},1,0,this);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:[100,100,100]},1,0.01,this);\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        this._isDirty = true;\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype = {\r\n        applyToMatrix: applyToMatrix,\r\n        getValue: processKeys,\r\n        precalculateMatrix: precalculateMatrix,\r\n        autoOrient: autoOrient\r\n    }\r\n\r\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n    function getTransformProperty(elem,data,container){\r\n        return new TransformProperty(elem,data,container);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    var i;\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n        var kf = this.keyframes;\r\n        if(frameNum < kf[0].t-this.offsetTime){\r\n            keyPropS = kf[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){\r\n            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\r\n            /*if(kf[kf.length - 1].s){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            }*/\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = kf.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = kf[i];\r\n                nextKeyData = kf[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                previousValue.i[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                previousValue.o[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                previousValue.v[j][k] = vertexValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            this.interpolateShape(frameNum, this.pv, this._caching);\r\n            ////\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n    }\r\n\r\n    function shapesEqual(shape1, shape2) {\r\n        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n            return false;\r\n        }\r\n        var i, len = shape1._length;\r\n        for(i = 0; i < len; i += 1) {\r\n            if(shape1.v[i][0] !== shape2.v[i][0] \r\n            || shape1.v[i][1] !== shape2.v[i][1] \r\n            || shape1.o[i][0] !== shape2.o[i][0] \r\n            || shape1.o[i][1] !== shape2.o[i][1] \r\n            || shape1.i[i][0] !== shape2.i[i][0] \r\n            || shape1.i[i][1] !== shape2.i[i][1]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function setVValue(newPath) {\r\n        if(!shapesEqual(this.v, newPath)) {\r\n            this.v = shape_pool.clone(newPath);\r\n            this.localShapeCollection.releaseShapes();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this._mdf = true;\r\n            this.paths = this.localShapeCollection;\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }\r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = false;\r\n        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\r\n        var i, len = this.effectsSequence.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    };\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.container = elem;\r\n        this.elem = elem;\r\n        this.data = data;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n        this.effectsSequence = [];\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.setVValue = setVValue;\r\n    ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\r\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n\r\n        EllShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function (){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n\r\n                if(this._mdf){\r\n                    this.convertEllToPath();\r\n                }\r\n            },\r\n            convertEllToPath: function() {\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n                var _cw = this.d !== 3;\r\n                var _v = this.v;\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        extendPrototype([DynamicPropertyContainer], EllShapeProperty);\r\n\r\n        return EllShapeProperty;\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function StarShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n                this.convertToPath = this.convertStarToPath;\r\n            } else {\r\n                this.convertToPath = this.convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertToPath();\r\n            }\r\n        };\r\n\r\n        StarShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function() {\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertToPath();\r\n                }\r\n            },\r\n            convertStarToPath: function() {\r\n                var numPts = Math.floor(this.pt.v)*2;\r\n                var angle = Math.PI*2/numPts;\r\n                /*this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts;*/\r\n                var longFlag = true;\r\n                var longRad = this.or.v;\r\n                var shortRad = this.ir.v;\r\n                var longRound = this.os.v;\r\n                var shortRound = this.is.v;\r\n                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n                currentAng += this.r.v;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    rad = longFlag ? longRad : shortRad;\r\n                    roundness = longFlag ? longRound : shortRound;\r\n                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                    /*this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts;*/\r\n                    longFlag = !longFlag;\r\n                    currentAng += angle*dir;\r\n                }\r\n            },\r\n            convertPolygonToPath: function() {\r\n                var numPts = Math.floor(this.pt.v);\r\n                var angle = Math.PI*2/numPts;\r\n                var rad = this.or.v;\r\n                var roundness = this.os.v;\r\n                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n                var i, currentAng = -Math.PI/ 2;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                currentAng += this.r.v;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                    currentAng += angle*dir;\r\n                }\r\n                this.paths.length = 0;\r\n                this.paths[0] = this.v;\r\n            }\r\n\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], StarShapeProperty);\r\n\r\n        return StarShapeProperty;\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n\r\n         function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n\r\n        RectShapeProperty.prototype = {\r\n            convertRectToPath: function (){\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n                var round = bm_min(v0,v1,this.r.v);\r\n                var cPoint = round*(1-roundCorner);\r\n                this.v._length = 0;\r\n\r\n                if(this.d === 2 || this.d === 1) {\r\n                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                    }\r\n                }else{\r\n                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                    }\r\n                }\r\n            },\r\n            getValue: function(frameNum){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertRectToPath();\r\n                }\r\n\r\n            },\r\n            reset: resetShape\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], RectShapeProperty);\r\n\r\n        return RectShapeProperty;\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data){\r\n        return new modifiers[nm](elem, data);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n        if(this._isAnimated) {\r\n            data.setAsAnimated();\r\n        }\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data){\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;\r\n        e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        s = Math.round(s * 10000) * 0.0001;\r\n        e = Math.round(e * 10000) * 0.0001;\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\r\n                            if (lastShapeInCollection.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\r\n            //Don't remove this even if it's losing cached info.\r\n            this.shapes[i].pathsData.length = 0;\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c && lengths.length) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n    this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n    this.so = PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);\r\n    this.eo = PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = !!this.dynamicProperties.length;\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.frameId = -1;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":1,\"ix\":6,\"k\":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, container) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    this.initDynamicPropertyContainer(container);\r\n    var i, len = data.length || 0, prop;\r\n    for(i = 0; i < len; i += 1) {\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n        this.k = prop.k || this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(!this.k){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || forceRender;\r\n    if (this._mdf) {\r\n        var i = 0, len = this.dataProps.length;\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\r\nfunction GradientProperty(elem,data,container){\r\n    this.data = data;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this.initDynamicPropertyContainer(container);\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n    this.k = this.prop.k;\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\r\nvar buildShapeString = function(pathNodes, length, closed, mat) {\r\n\tif(length === 0) {\r\n            return '';\r\n        }\r\n        var _o = pathNodes.o;\r\n        var _i = pathNodes.i;\r\n        var _v = pathNodes.v;\r\n        var i, shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n        for(i = 1; i < length; i += 1) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n}\r\nvar ImagePreloader = (function(){\r\n\r\n    var proxyImage = (function(){\r\n        var canvas = createTag('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = 1;\r\n        var ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = '#FF0000';\r\n        ctx.fillRect(0, 0, 1, 1);\r\n        return canvas;\r\n    }())\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData, assetsPath, original_path) {\r\n        var path = '';\r\n        if (assetData.e) {\r\n            path = assetData.p;\r\n        } else if(assetsPath) {\r\n            var imagePath = assetData.p;\r\n            if (imagePath.indexOf('images/') !== -1) {\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = assetsPath + imagePath;\r\n        } else {\r\n            path = original_path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function createImageData(assetData) {\r\n        var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n        var img = createTag('img');\r\n        img.crossOrigin = 'anonymous';\r\n        img.addEventListener('load', this._imageLoaded.bind(this), false);\r\n        img.addEventListener('error', function() {\r\n            ob.img = proxyImage;\r\n            this._imageLoaded();\r\n        }.bind(this), false);\r\n        img.src = path;\r\n        var ob = {\r\n            img: img,\r\n            assetData: assetData\r\n        }\r\n        return ob;\r\n    }\r\n\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        var i, len = assets.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!assets[i].layers){\r\n                this.totalImages += 1;\r\n                this.images.push(this._createImageData(assets[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function getImage(assetData) {\r\n        var i = 0, len = this.images.length;\r\n        while (i < len) {\r\n            if (this.images[i].assetData === assetData) {\r\n                return this.images[i].img;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n        this.images.length = 0;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.totalImages === this.loadedAssets;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.loaded = loaded;\r\n        this.destroy = destroy;\r\n        this.getImage = getImage;\r\n        this._createImageData = createImageData;\r\n        this._imageLoaded = imageLoaded;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n        this.images = [];\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar assetLoader = (function(){\r\n\r\n\tfunction formatResponse(xhr) {\r\n\t\tif(xhr.response && typeof xhr.response === 'object') {\r\n\t\t\treturn xhr.response;\r\n\t\t} else if(xhr.response && typeof xhr.response === 'string') {\r\n\t\t\treturn JSON.parse(xhr.response);\r\n\t\t} else if(xhr.responseText) {\r\n\t\t\treturn JSON.parse(xhr.responseText);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadAsset(path, callback, errorCallback) {\r\n\t\tvar response;\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', path, true);\r\n\t\t// set responseType after calling open or IE will break.\r\n\t\ttry {\r\n\t\t    // This crashes on Android WebView prior to KitKat\r\n\t\t    xhr.responseType = \"json\";\r\n\t\t} catch (err) {}\r\n\t    xhr.send();\r\n\t    xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState == 4) {\r\n\t            if(xhr.status == 200){\r\n\t            \tresponse = formatResponse(xhr);\r\n\t            \tcallback(response);\r\n\t            }else{\r\n\t                try{\r\n\t            \t\tresponse = formatResponse(xhr);\r\n\t            \t\tcallback(response);\r\n\t                }catch(err){\r\n\t                \tif(errorCallback) {\r\n\t                \t\terrorCallback(err);\r\n\t                \t}\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t}\r\n\treturn {\r\n\t\tload: loadAsset\r\n\t}\r\n}())\r\n\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n    this._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n    this.initDynamicPropertyContainer(elem);\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var bezierData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[i + 1]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[0]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\r\n    //\r\n    if(documentData.j === 2 || documentData.j === 1) {\r\n        var animatorJustifyOffset = 0;\r\n        var animatorFirstCharOffset = 0;\r\n        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n        var lastIndex = 0;\r\n        var isNewLine = true;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            if (letters[i].n) {\r\n                if(animatorJustifyOffset) {\r\n                    animatorJustifyOffset += animatorFirstCharOffset;\r\n                }\r\n                while (lastIndex < i) {\r\n                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n                    lastIndex += 1;\r\n                }\r\n                animatorJustifyOffset = 0;\r\n                isNewLine = true;\r\n            } else {\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.t.propType) {\r\n                        if (isNewLine && documentData.j === 2) {\r\n                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n                        }\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n                        if (mult.length) {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n                        } else {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n                        }\r\n                    }\r\n                }\r\n                isNewLine = false;\r\n            }\r\n        }\r\n        if(animatorJustifyOffset) {\r\n            animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while(lastIndex < i) {\r\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n            lastIndex += 1;\r\n        }\r\n    }\r\n    //\r\n\r\n    for( i = 0; i < len; i += 1) {\r\n\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n                    if(xPos !== 0 || documentData.j !== 0) {\r\n                        if(this._hasMaskedPath) {\r\n                            if(mult.length) {\r\n                                currentLength += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                currentLength += animatorProps.t.v*mult;\r\n                            }\r\n                        }else{\r\n                            if(mult.length) {\r\n                                xPos += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                xPos += animatorProps.t.v*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\r\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = false;\r\n    this.data = data;\r\n\tthis.elem = elem;\r\n    this.comp = this.elem.comp;\r\n\tthis.keysIndex = 0;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n    this.effectsSequence = [];\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: this.defaultBoxWidth,\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:null,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0,\r\n        __complete: false\r\n\r\n\t};\r\n    this.copyData(this.currentData, this.data.d.k[0].s);\r\n\r\n    if(!this.searchProperty()) {\r\n        this.completeTextData(this.currentData);\r\n    }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0,0];\r\n\r\nTextProperty.prototype.copyData = function(obj, data) {\r\n    for(var s in data) {\r\n        if(data.hasOwnProperty(s)) {\r\n            obj[s] = data[s];\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n    if(!data.__complete) {\r\n        this.completeTextData(data);\r\n    }\r\n    this.currentData = data;\r\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n    this._mdf = true;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n    return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function() {\r\n    this.kf = this.data.d.k.length > 1;\r\n    if(this.kf) {\r\n        this.addEffect(this.getKeyframeValue.bind(this));\r\n    }\r\n    return this.kf;\r\n}\r\n\r\nTextProperty.prototype.addEffect = function(effectFunction) {\r\n\tthis.effectsSequence.push(effectFunction);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_finalValue) {\r\n    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n        return;\r\n    }\r\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\r\n    var currentValue = this.currentData;\r\n    var currentIndex = this.keysIndex;\r\n    if(this.lock) {\r\n        this.setCurrentData(this.currentData);\r\n        return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var multipliedValue;\r\n    var i, len = this.effectsSequence.length;\r\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\r\n    for(i = 0; i < len; i += 1) {\r\n        //Checking if index changed to prevent creating a new object every time the expression updates.\r\n        if(currentIndex !== this.keysIndex) {\r\n            finalValue = this.effectsSequence[i](finalValue, finalValue.t);\r\n        } else {\r\n            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\r\n        }\r\n    }\r\n    if(currentValue !== finalValue) {\r\n        this.setCurrentData(finalValue);\r\n    }\r\n    this.pv = this.v = this.currentData;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n}\r\n\r\nTextProperty.prototype.getKeyframeValue = function() {\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n        this.keysIndex = i;\r\n    }\r\n    return this.data.d.k[this.keysIndex].s;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var charCode;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                charCode = finalText[i].charCodeAt(0);\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(charCode === 13 || charCode === 3){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        charCode = currentChar.charCodeAt(0);\r\n        if (currentChar === ' '){\r\n            val = '\\u00A0';\r\n        } else if (charCode === 13 || charCode === 3) {\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.copyData({}, this.data.d.k[index].s);\r\n    dData = this.copyData(dData, newData);\r\n    this.data.d.k[index].s = dData;\r\n    this.recalculate(index);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = 0;\r\n    this._isFirstFrame = true;\r\n    this.getValue(dData);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n\r\n    function TextSelectorProp(elem,data){\r\n        this._currentTextLength = -1;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.initDynamicPropertyContainer(elem);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    TextSelectorProp.prototype = {\r\n        getMult: function(ind) {\r\n            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n                this.getValue();\r\n            }\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<0.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        },\r\n        getValue: function(newCharsFlag) {\r\n            this.iterateDynamicProperties();\r\n            this._mdf = newCharsFlag || this._mdf;\r\n            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = this._currentTextLength;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n    }\r\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    }\r\n}\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var ariaLabel = '';\r\n    if (config && config.title) {\r\n        var titleElement = createNS('title');\r\n        var titleId = createElementID();\r\n        titleElement.setAttribute('id', titleId);\r\n        titleElement.textContent = config.title;\r\n        this.svgElement.appendChild(titleElement);\r\n        ariaLabel += titleId;\r\n    }\r\n    if (config && config.description) {\r\n        var descElement = createNS('desc');\r\n        var descId = createElementID();\r\n        descElement.setAttribute('id', descId);\r\n        descElement.textContent = config.description;\r\n        this.svgElement.appendChild(descElement);\r\n        ariaLabel += ' ' + descId;\r\n    }\r\n    if (ariaLabel) {\r\n        this.svgElement.setAttribute('aria-labelledby', ariaLabel)\r\n    }\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n    this.rendererType = 'svg';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n        this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.setupGlobalData(animData, defs);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = createElementID();\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction CanvasRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.renderConfig = {\r\n        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n        context: (config && config.context) || null,\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n    if (this.animationItem.wrapper) {\r\n        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n    }\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1,\r\n        _mdf: false,\r\n        renderConfig: this.renderConfig,\r\n        currentGlobalAlpha: -1\r\n    };\r\n    this.contextData = new CVContextData();\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.transformMat = new Matrix();\r\n    this.completeLayers = false;\r\n    this.rendererType = 'canvas';\r\n}\r\nextendPrototype([BaseRenderer],CanvasRenderer);\r\n\r\nCanvasRenderer.prototype.createShape = function (data) {\r\n    return new CVShapeElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createText = function (data) {\r\n    return new CVTextElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createImage = function (data) {\r\n    return new CVImageElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createComp = function (data) {\r\n    return new CVCompElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createSolid = function (data) {\r\n    return new CVSolidElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nCanvasRenderer.prototype.ctxTransform = function(props){\r\n    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n        return;\r\n    }\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n        return;\r\n    }\r\n    this.transformMat.cloneFromProps(props);\r\n    var cProps = this.contextData.cTr.props;\r\n    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n    var trProps = this.contextData.cTr.props;\r\n    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n};\r\n\r\nCanvasRenderer.prototype.ctxOpacity = function(op){\r\n    /*if(op === 1){\r\n        return;\r\n    }*/\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n        return;\r\n    }\r\n    this.contextData.cO *= op < 0 ? 0 : op;\r\n    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {\r\n        this.canvasContext.globalAlpha = this.contextData.cO;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.reset = function(){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    this.contextData.reset();\r\n};\r\n\r\nCanvasRenderer.prototype.save = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.save();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.save();\r\n    }\r\n    var props = this.contextData.cTr.props;\r\n    if(this.contextData._length <= this.contextData.cArrPos) {\r\n        this.contextData.duplicate();\r\n    }\r\n    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n    for (i = 0; i < 16; i += 1) {\r\n        arr[i] = props[i];\r\n    }\r\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n    this.contextData.cArrPos += 1;\r\n};\r\n\r\nCanvasRenderer.prototype.restore = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.restore();\r\n        this.globalData.blendMode = 'source-over';\r\n    }\r\n    this.contextData.cArrPos -= 1;\r\n    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n    var i,arr = this.contextData.cTr.props;\r\n    for(i=0;i<16;i+=1){\r\n        arr[i] = popped[i];\r\n    }\r\n    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n    this.contextData.cO = popped;\r\n    if(this.globalData.currentGlobalAlpha !== popped) {\r\n        this.canvasContext.globalAlpha = popped;\r\n        this.globalData.currentGlobalAlpha = popped;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.configAnimation = function(animData){\r\n    if(this.animationItem.wrapper){\r\n        this.animationItem.container = createTag('canvas');\r\n        this.animationItem.container.style.width = '100%';\r\n        this.animationItem.container.style.height = '100%';\r\n        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n        this.canvasContext = this.animationItem.container.getContext('2d');\r\n        if(this.renderConfig.className) {\r\n            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n        }\r\n    }else{\r\n        this.canvasContext = this.renderConfig.context;\r\n    }\r\n    this.data = animData;\r\n    this.layers = animData.layers;\r\n    this.transformCanvas = {\r\n        w: animData.w,\r\n        h:animData.h,\r\n        sx:0,\r\n        sy:0,\r\n        tx:0,\r\n        ty:0\r\n    };\r\n    this.setupGlobalData(animData, document.body);\r\n    this.globalData.canvasContext = this.canvasContext;\r\n    this.globalData.renderer = this;\r\n    this.globalData.isDashed = false;\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.transformCanvas = this.transformCanvas;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n\r\n    this.updateContainerSize();\r\n};\r\n\r\nCanvasRenderer.prototype.updateContainerSize = function () {\r\n    this.reset();\r\n    var elementWidth,elementHeight;\r\n    if(this.animationItem.wrapper && this.animationItem.container){\r\n        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n    }else{\r\n        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n    }\r\n    var elementRel,animationRel;\r\n    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n        var fillType = par[1] || 'meet';\r\n        var pos = par[0] || 'xMidYMid';\r\n        var xPos = pos.substr(0,4);\r\n        var yPos = pos.substr(4);\r\n        elementRel = elementWidth/elementHeight;\r\n        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        }else{\r\n            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n        }\r\n\r\n        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.tx = 0;\r\n        }\r\n        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.ty = 0;\r\n        }\r\n\r\n    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }else{\r\n        this.transformCanvas.sx = this.renderConfig.dpr;\r\n        this.transformCanvas.sy = this.renderConfig.dpr;\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }\r\n    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\r\n    this.ctxTransform(this.transformCanvas.props);\r\n    this.canvasContext.beginPath();\r\n    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n    this.canvasContext.closePath();\r\n    this.canvasContext.clip();\r\n\r\n    this.renderFrame(this.renderedFrame, true);\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function () {\r\n    if(this.renderConfig.clearCanvas) {\r\n        this.animationItem.wrapper.innerHTML = '';\r\n    }\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = len - 1; i >= 0; i-=1) {\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.globalData.canvasContext = null;\r\n    this.animationItem.container = null;\r\n    this.destroyed = true;\r\n};\r\n\r\nCanvasRenderer.prototype.renderFrame = function(num, forceRender){\r\n    if((this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) || this.destroyed || num === -1){\r\n        return;\r\n    }\r\n    this.renderedFrame = num;\r\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n    this.globalData.frameId += 1;\r\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n\r\n     // console.log('--------');\r\n     // console.log('NEW: ',num);\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n\r\n    for (i = 0; i < len; i++) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        if(this.renderConfig.clearCanvas === true){\r\n            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n        }else{\r\n            this.save();\r\n        }\r\n        for (i = len - 1; i >= 0; i-=1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n        if(this.renderConfig.clearCanvas !== true){\r\n            this.restore();\r\n        }\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.buildItem = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n    elements[pos] = element;\r\n    element.initExpressions();\r\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\r\n};\r\n\r\nCanvasRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.hide = function(){\r\n    this.animationItem.container.style.display = 'none';\r\n};\r\n\r\nCanvasRenderer.prototype.show = function(){\r\n    this.animationItem.container.style.display = 'block';\r\n};\r\n\r\nfunction HybridRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.renderConfig = {\r\n        className: (config && config.className) || '',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.pendingElements = [];\r\n    this.elements = [];\r\n    this.threeDElements = [];\r\n    this.destroyed = false;\r\n    this.camera = null;\r\n    this.supports3d = true;\r\n    this.rendererType = 'html';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],HybridRenderer);\r\n\r\nHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\r\nHybridRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newDOMElement = element.getBaseElement();\r\n    if(!newDOMElement){\r\n        return;\r\n    }\r\n    var layer = this.layers[pos];\r\n    if(!layer.ddd || !this.supports3d){\r\n        if(this.threeDElements) {\r\n            this.addTo3dContainer(newDOMElement,pos);\r\n        } else {\r\n            var i = 0;\r\n            var nextDOMElement, nextLayer, tmpDOMElement;\r\n            while(i<pos){\r\n                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n                    nextLayer = this.elements[i];\r\n                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n                    nextDOMElement = tmpDOMElement || nextDOMElement;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(nextDOMElement){\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n                }\r\n            } else {\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.appendChild(newDOMElement);\r\n                }\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        this.addTo3dContainer(newDOMElement,pos);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createShape = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGShapeElement(data, this.globalData, this);\r\n    }\r\n    return new HShapeElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createText = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGTextElement(data, this.globalData, this);\r\n    }\r\n    return new HTextElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createCamera = function (data) {\r\n    this.camera = new HCameraElement(data, this.globalData, this);\r\n    return this.camera;\r\n};\r\n\r\nHybridRenderer.prototype.createImage = function (data) {\r\n    if(!this.supports3d){\r\n        return new IImageElement(data, this.globalData, this);\r\n    }\r\n    return new HImageElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createComp = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGCompElement(data, this.globalData, this);\r\n    }\r\n    return new HCompElement(data, this.globalData, this);\r\n\r\n};\r\n\r\nHybridRenderer.prototype.createSolid = function (data) {\r\n    if(!this.supports3d){\r\n        return new ISolidElement(data, this.globalData, this);\r\n    }\r\n    return new HSolidElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len) {\r\n        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n            return this.threeDElements[i].perspectiveElem;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createThreeDContainer = function(pos, type){\r\n    var perspectiveElem = createTag('div');\r\n    styleDiv(perspectiveElem);\r\n    var container = createTag('div');\r\n    styleDiv(container);\r\n    if(type === '3d') {\r\n        perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n        perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    }\r\n    \r\n    perspectiveElem.appendChild(container);\r\n    //this.resizerElem.appendChild(perspectiveElem);\r\n    var threeDContainerData = {\r\n        container:container,\r\n        perspectiveElem:perspectiveElem,\r\n        startPos: pos,\r\n        endPos: pos,\r\n        type: type\r\n    };\r\n    this.threeDElements.push(threeDContainerData);\r\n    return threeDContainerData;\r\n};\r\n\r\nHybridRenderer.prototype.build3dContainers = function(){\r\n    var i, len = this.layers.length;\r\n    var lastThreeDContainerData;\r\n    var currentContainer = '';\r\n    for(i=0;i<len;i+=1){\r\n        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n            if(currentContainer !== '3d'){\r\n                currentContainer = '3d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'3d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        } else {\r\n            if(currentContainer !== '2d'){\r\n                currentContainer = '2d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'2d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        }\r\n    }\r\n    len = this.threeDElements.length;\r\n    for(i = len - 1; i >= 0; i --) {\r\n        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len){\r\n        if(pos <= this.threeDElements[i].endPos){\r\n            var j = this.threeDElements[i].startPos;\r\n            var nextElement;\r\n            while(j<pos){\r\n                if(this.elements[j] && this.elements[j].getBaseElement){\r\n                    nextElement = this.elements[j].getBaseElement();\r\n                }\r\n                j += 1;\r\n            }\r\n            if(nextElement){\r\n                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n            } else {\r\n                this.threeDElements[i].container.appendChild(elem);\r\n            }\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.configAnimation = function(animData){\r\n    var resizerElem = createTag('div');\r\n    var wrapper = this.animationItem.wrapper;\r\n    resizerElem.style.width = animData.w+'px';\r\n    resizerElem.style.height = animData.h+'px';\r\n    this.resizerElem = resizerElem;\r\n    styleDiv(resizerElem);\r\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n    if(this.renderConfig.className) {\r\n      resizerElem.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    wrapper.appendChild(resizerElem);\r\n\r\n    resizerElem.style.overflow = 'hidden';\r\n    var svg = createNS('svg');\r\n    svg.setAttribute('width','1');\r\n    svg.setAttribute('height','1');\r\n    styleDiv(svg);\r\n    this.resizerElem.appendChild(svg);\r\n    var defs = createNS('defs');\r\n    svg.appendChild(defs);\r\n    this.data = animData;\r\n    //Mask animation\r\n    this.setupGlobalData(animData, svg);\r\n    this.globalData.defs = defs;\r\n    this.layers = animData.layers;\r\n    this.layerElement = this.resizerElem;\r\n    this.build3dContainers();\r\n    this.updateContainerSize();\r\n};\r\n\r\nHybridRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.animationItem.container = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        this.elements[i].destroy();\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nHybridRenderer.prototype.updateContainerSize = function () {\r\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n    var elementRel = elementWidth/elementHeight;\r\n    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n    var sx,sy,tx,ty;\r\n    if(animationRel>elementRel){\r\n        sx = elementWidth/(this.globalData.compSize.w);\r\n        sy = elementWidth/(this.globalData.compSize.w);\r\n        tx = 0;\r\n        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n    }else{\r\n        sx = elementHeight/(this.globalData.compSize.h);\r\n        sy = elementHeight/(this.globalData.compSize.h);\r\n        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n        ty = 0;\r\n    }\r\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n};\r\n\r\nHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\r\nHybridRenderer.prototype.hide = function(){\r\n    this.resizerElem.style.display = 'none';\r\n};\r\n\r\nHybridRenderer.prototype.show = function(){\r\n    this.resizerElem.style.display = 'block';\r\n};\r\n\r\nHybridRenderer.prototype.initItems = function(){\r\n    this.buildAllItems();\r\n    if(this.camera){\r\n        this.camera.setup();\r\n    } else {\r\n        var cWidth = this.globalData.compSize.w;\r\n        var cHeight = this.globalData.compSize.h;\r\n        var i, len = this.threeDElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n        }\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = createTag('div');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction MaskElement(data,element,globalData) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = createElementID();\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w || 0);\r\n            rect.setAttribute('height', this.element.comp.data.h || 0);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n                elem: path,\r\n                lastPath: ''\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n            filterID = createElementID();\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','erode');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n    if (this.viewData.length) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n    var finalMat = this.element.finalTransform.mat;\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    addDynamicProperty: function(prop) {\r\n        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n            this.dynamicProperties.push(prop);\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n        //list of animated components\r\n        this.renderableComponents = [];\r\n    },\r\n    addRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) === -1) {\r\n            this.renderableComponents.push(component);\r\n        }\r\n    },\r\n    removeRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) !== -1) {\r\n            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n        }\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        var i, len = this.renderableComponents.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n        }\r\n        /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.createRenderableComponents();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                var elem = this.baseElement || this.layerElement;\r\n                elem.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    var elem = this.baseElement || this.layerElement;\r\n                    elem.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = data.hd === true;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n    //TODO find if there are some cases where _isAnimated can be false. \r\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n    this._isAnimated = !!shape.k;\r\n    // TODO: commenting this for now since all shapes are animated\r\n    var i = 0, len = transformers.length;\r\n    while(i < len) {\r\n    \tif(transformers[i].mProps.dynamicProperties.length) {\r\n    \t\tthis._isAnimated = true;\r\n    \t\tbreak;\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function() {\r\n    this._isAnimated = true;\r\n}\r\nfunction SVGTransformData(mProps, op, container) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op,\r\n\t\tcontainer: container\r\n\t};\r\n\tthis.elements = [];\r\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\r\nfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\r\nfunction SVGFillStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\r\nfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.getValue = this.iterateDynamicProperties;\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);\r\n    this.g = new GradientProperty(elem,data.g,this);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = createElementID();\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = createElementID();\r\n        var maskId = createElementID();\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\r\nfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n    this.initGradientData(elem, data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nvar SVGElementsRenderer = (function() {\r\n\tvar _identityMatrix = new Matrix();\r\n\tvar _matrixHelper = new Matrix();\r\n\r\n\tvar ob = {\r\n\t\tcreateRenderFunction: createRenderFunction\r\n\t}\r\n\r\n\tfunction createRenderFunction(data) {\r\n\t    var ty = data.ty;\r\n\t    switch(data.ty) {\r\n\t        case 'fl':\r\n\t        return renderFill;\r\n\t        case 'gf':\r\n\t        return renderGradient;\r\n\t        case 'gs':\r\n\t        return renderGradientStroke;\r\n\t        case 'st':\r\n\t        return renderStroke;\r\n\t        case 'sh':\r\n\t        case 'el':\r\n\t        case 'rc':\r\n\t        case 'sr':\r\n\t        return renderPath;\r\n\t        case 'tr':\r\n\t        return renderContentTransform;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderContentTransform(styleData, itemData, isFirstFrame) {\r\n\t    if(isFirstFrame || itemData.transform.op._mdf){\r\n\t        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);\r\n\t    }\r\n\t    if(isFirstFrame || itemData.transform.mProps._mdf){\r\n\t        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderPath(styleData, itemData, isFirstFrame) {\r\n\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t    var lvl = itemData.lvl;\r\n\t    var paths, mat, props, iterations, k;\r\n\t    for(l=0;l<lLen;l+=1){\r\n\t        redraw = itemData.sh._mdf || isFirstFrame;\r\n\t        if(itemData.styles[l].lvl < lvl){\r\n\t            mat = _matrixHelper.reset();\r\n\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t            k = itemData.transformers.length-1;\r\n\t            while(!redraw && iterations > 0) {\r\n\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t                iterations --;\r\n\t                k --;\r\n\t            }\r\n\t            if(redraw) {\r\n\t                iterations = lvl - itemData.styles[l].lvl;\r\n\t                k = itemData.transformers.length-1;\r\n\t                while(iterations > 0) {\r\n\t                    props = itemData.transformers[k].mProps.v.props;\r\n\t                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t                    iterations --;\r\n\t                    k --;\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            mat = _identityMatrix;\r\n\t        }\r\n\t        paths = itemData.sh.paths;\r\n\t        jLen = paths._length;\r\n\t        if(redraw){\r\n\t            pathStringTransformed = '';\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                pathNodes = paths.shapes[j];\r\n\t                if(pathNodes && pathNodes._length){\r\n\t                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t                }\r\n\t            }\r\n\t            itemData.caches[l] = pathStringTransformed;\r\n\t        } else {\r\n\t            pathStringTransformed = itemData.caches[l];\r\n\t        }\r\n\t        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\r\n\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderFill (styleData,itemData, isFirstFrame){\r\n\t    var styleElem = itemData.style;\r\n\r\n\t    if(itemData.c._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderGradientStroke (styleData, itemData, isFirstFrame) {\r\n\t    renderGradient(styleData, itemData, isFirstFrame);\r\n\t    renderStroke(styleData, itemData, isFirstFrame);\r\n\t}\r\n\r\n\tfunction renderGradient(styleData, itemData, isFirstFrame) {\r\n\t    var gfill = itemData.gf;\r\n\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n\t    if (itemData.o._mdf || isFirstFrame) {\r\n\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t    }\r\n\t    if (itemData.s._mdf || isFirstFrame) {\r\n\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t        }\r\n\t    }\r\n\t    var stops, i, len, stop;\r\n\t    if (itemData.g._cmdf || isFirstFrame) {\r\n\t        stops = itemData.cst;\r\n\t        var cValues = itemData.g.c;\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1){\r\n\t            stop = stops[i];\r\n\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t        }\r\n\t    }\r\n\t    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n\t        var oValues = itemData.g.o;\r\n\t        if(itemData.g._collapsable) {\r\n\t            stops = itemData.cst;\r\n\t        } else {\r\n\t            stops = itemData.ost;\r\n\t        }\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            stop = stops[i];\r\n\t            if(!itemData.g._collapsable) {\r\n\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t            }\r\n\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t        }\r\n\t    }\r\n\t    if (styleData.t === 1) {\r\n\t        if (itemData.e._mdf  || isFirstFrame) {\r\n\t            gfill.setAttribute('x2', pt2[0]);\r\n\t            gfill.setAttribute('y2', pt2[1]);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        var rad;\r\n\t        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            gfill.setAttribute('r', rad);\r\n\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t                itemData.of.setAttribute('r', rad);\r\n\t            }\r\n\t        }\r\n\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n\t            if (!rad) {\r\n\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            }\r\n\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t            var dist = rad * percent;\r\n\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t            gfill.setAttribute('fx', x);\r\n\t            gfill.setAttribute('fy', y);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('fx', x);\r\n\t                itemData.of.setAttribute('fy', y);\r\n\t            }\r\n\t        }\r\n\t        //gfill.setAttribute('fy','200');\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderStroke(styleData, itemData, isFirstFrame) {\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t    }\r\n\t    if(itemData.c && (itemData.c._mdf || isFirstFrame)){\r\n\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t    }\r\n\t    if(itemData.w._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        if(styleElem.msElem){\r\n\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        }\r\n\t    }\r\n\t};\r\n\r\n\treturn ob;\r\n}())\r\nfunction ShapeTransformManager() {\r\n\tthis.sequences = {};\r\n\tthis.sequenceList = [];\r\n    this.transform_key_count = 0;\r\n}\r\n\r\nShapeTransformManager.prototype = {\r\n\taddTransformSequence: function(transforms) {\r\n\t\tvar i, len = transforms.length;\r\n\t\tvar key = '_';\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tkey += transforms[i].transform.key + '_';\r\n\t\t}\r\n\t\tvar sequence = this.sequences[key];\r\n\t\tif(!sequence) {\r\n\t\t\tsequence = {\r\n\t\t\t\ttransforms: [].concat(transforms),\r\n\t\t\t\tfinalTransform: new Matrix(),\r\n\t\t\t\t_mdf: false\r\n\t\t\t};\r\n\t\t\tthis.sequences[key] = sequence;\r\n\t\t\tthis.sequenceList.push(sequence);\r\n\t\t}\r\n\t\treturn sequence;\r\n\t},\r\n\tprocessSequence: function(sequence, isFirstFrame) {\r\n\t\tvar i = 0, len = sequence.transforms.length, _mdf = isFirstFrame;\r\n\t\twhile (i < len && !isFirstFrame) {\r\n\t\t\tif (sequence.transforms[i].transform.mProps._mdf) {\r\n\t\t\t\t_mdf = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti += 1\r\n\t\t}\r\n\t\tif (_mdf) {\r\n\t\t\tvar props;\r\n\t\t\tsequence.finalTransform.reset();\r\n\t\t\tfor (i = len - 1; i >= 0; i -= 1) {\r\n\t\t        props = sequence.transforms[i].transform.mProps.v.props;\r\n\t\t        sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsequence._mdf = _mdf;\r\n\t\t\r\n\t},\r\n\tprocessSequences: function(isFirstFrame) {\r\n\t\tvar i, len = this.sequenceList.length;\r\n\t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\tthis.processSequence(this.sequenceList[i], isFirstFrame);\r\n\t\t}\r\n\r\n\t},\r\n\tgetNewKey: function() {\r\n\t\treturn '_' + this.transform_key_count++;\r\n\t}\r\n}\r\nfunction CVShapeData(element, data, styles, transformsManager) {\r\n    this.styledShapes = [];\r\n    this.tr = [0,0,0,0,0,0];\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);\r\n    var i , len = styles.length,styledShape;\r\n    for (i = 0; i < len; i += 1) {\r\n        if (!styles[i].closed) {\r\n            styledShape = {\r\n                transforms: transformsManager.addTransformSequence(styles[i].transforms),\r\n                trNodes: []\r\n            }\r\n            this.styledShapes.push(styledShape);\r\n            styles[i].elements.push(styledShape);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\r\nfunction BaseElement(){\r\n}\r\n\r\nBaseElement.prototype = {\r\n    checkMasks: function(){\r\n        if(!this.data.hasMask){\r\n            return false;\r\n        }\r\n        var i = 0, len = this.data.masksProperties.length;\r\n        while(i<len) {\r\n            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n                return true;\r\n            }\r\n            i += 1;\r\n        }\r\n        return false;\r\n    },\r\n    initExpressions: function(){\r\n        this.layerInterface = LayerExpressionInterface(this);\r\n        if(this.data.hasMask && this.maskManager) {\r\n            this.layerInterface.registerMaskInterface(this.maskManager);\r\n        }\r\n        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n        this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n        if(this.data.ty === 0 || this.data.xt){\r\n            this.compInterface = CompExpressionInterface(this);\r\n        } else if(this.data.ty === 4){\r\n            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n            this.layerInterface.content = this.layerInterface.shapeInterface;\r\n        } else if(this.data.ty === 5){\r\n            this.layerInterface.textInterface = TextExpressionInterface(this);\r\n            this.layerInterface.text = this.layerInterface.textInterface;\r\n        }\r\n    },\r\n    setBlendMode: function(){\r\n        var blendModeValue = getBlendMode(this.data.bm);\r\n        var elem = this.baseElement || this.layerElement;\r\n\r\n        elem.style['mix-blend-mode'] = blendModeValue;\r\n    },\r\n    initBaseData: function(data, globalData, comp){\r\n        this.globalData = globalData;\r\n        this.comp = comp;\r\n        this.data = data;\r\n        this.layerId = createElementID();\r\n        \r\n        //Stretch factor for old animations missing this property.\r\n        if(!this.data.sr){\r\n            this.data.sr = 1;\r\n        }\r\n        // effects manager\r\n        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        \r\n    },\r\n    getType: function(){\r\n        return this.type;\r\n    }\r\n    ,sourceRectAtTime: function(){}\r\n}\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = createElementID();\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = createElementID();\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                // This solution doesn't work on Android when meta tag with viewport attribute is set\r\n                /*var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);*/\r\n                ////\r\n                var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);\r\n                ////\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = createElementID();\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    createRenderableComponents: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    isShapeInAnimatedModifiers: function(data) {\r\n        var i = 0, len = this.shapeModifiers.length;\r\n        while(i < len) {\r\n            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].sh.reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'bevel'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var elements = this.processedElements;\r\n        var i = 0, len = elements.length;\r\n        while (i < len) {\r\n            if (elements[i].elem === elem) {\r\n                return elements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var elements = this.processedElements;\r\n        var i = elements.length;\r\n        while(i) {\r\n            i -= 1;\r\n            if (elements[i].elem === elem) {\r\n                elements[i].pos = pos;\r\n                return;\r\n            }\r\n        }\r\n        elements.push(new ProcessedElement(elem, pos));\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n        this.textProperty._mdf = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    //This iteration needs to be backwards because of how expressions connect between each other\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n    this.sourceRect = {top:0,left:0,width:this.assetData.w,height:this.assetData.h};\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nIImageElement.prototype.sourceRectAtTime = function() {\r\n\treturn this.sourceRect;\r\n}\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n    this.layerElement.setAttribute('arial-label', documentData.t);\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = !!this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape && tSpan) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function(){\r\n    var i, len = this.shapes.length, shape;\r\n    var j, jLen = this.stylesList.length;\r\n    var style, count = 0;\r\n    var tempShapes = [];\r\n    var areAnimated = false;\r\n    for(j = 0; j < jLen; j += 1) {\r\n        style = this.stylesList[j];\r\n        areAnimated = false;\r\n        tempShapes.length = 0;\r\n        for(i = 0; i < len; i += 1) {\r\n            shape = this.shapes[i];\r\n            if(shape.styles.indexOf(style) !== -1) {\r\n                tempShapes.push(shape);\r\n                areAnimated = shape._isAnimated || areAnimated;\r\n            }\r\n        }\r\n        if(tempShapes.length > 1 && areAnimated) {\r\n            this.setShapesAsAnimated(tempShapes);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function(shapes){\r\n    var i, len = shapes.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        shapes[i].setAsAnimated();\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(' + locationHref + '#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        elementData.gr.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, container) {\r\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);\r\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function(data, element) {\r\n    var i = 0, len = this.animatedContents.length;\r\n    while(i < len) {\r\n        if(this.animatedContents[i].element === element) {\r\n            return;\r\n        }\r\n        i += 1;\r\n    }\r\n    this.animatedContents.push({\r\n        fn: SVGElementsRenderer.createRenderFunction(data),\r\n        element: element,\r\n        data: data\r\n    });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], container);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape();\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function() {\r\n    var i, len = this.animatedContents.length;\r\n    var animatedContent;\r\n    for(i = 0; i < len; i += 1) {\r\n        animatedContent = this.animatedContents[i];\r\n        if((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\r\n            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapesData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = createElementID();\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        while (elemChildren[0]) {\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.paths[i].m === -1) {\r\n            continue;\r\n        }\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = createElementID();\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        var useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var elements = this.elem.comp.elements;\r\n    var i = 0, len = elements.length;\r\n    while (i < len) {\r\n    \tif (elements[i] && elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = createElementID();\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n    if (this.filters.length) {\r\n        elem.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nfunction CVContextData() {\r\n\tthis.saved = [];\r\n    this.cArrPos = 0;\r\n    this.cTr = new Matrix();\r\n    this.cO = 1;\r\n    var i, len = 15;\r\n    this.savedOp = createTypedArray('float32', len);\r\n    for(i=0;i<len;i+=1){\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = len;\r\n}\r\n\r\nCVContextData.prototype.duplicate = function() {\r\n\tvar newLength = this._length * 2;\r\n\tvar currentSavedOp = this.savedOp;\r\n    this.savedOp = createTypedArray('float32', newLength);\r\n    this.savedOp.set(currentSavedOp);\r\n    var i = 0;\r\n    for(i = this._length; i < newLength; i += 1) {\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = newLength;\r\n};\r\n\r\nCVContextData.prototype.reset = function() {\r\n\tthis.cArrPos = 0;\r\n\tthis.cTr.reset();\r\n    this.cO = 1;\r\n};\r\nfunction CVBaseElement(){\r\n}\r\n\r\nCVBaseElement.prototype = {\r\n    createElements: function(){},\r\n    initRendererElement: function(){},\r\n    createContainerElements: function(){\r\n        this.canvasContext = this.globalData.canvasContext;\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n    },\r\n    createContent: function(){},\r\n    setBlendMode: function(){\r\n        var globalData = this.globalData;\r\n        if(globalData.blendMode !== this.data.bm) {\r\n            globalData.blendMode = this.data.bm;\r\n            var blendModeValue = getBlendMode(this.data.bm);\r\n            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new CVMaskElement(this.data, this);\r\n    },\r\n    hideElement: function(){\r\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n            this.hidden = true;\r\n        }\r\n    },\r\n    showElement: function(){\r\n        if (this.isInRange && !this.isTransparent){\r\n            this.hidden = false;\r\n            this._isFirstFrame = true;\r\n            this.maskManager._isFirstFrame = true;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        if (this.hidden || this.data.hd) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.setBlendMode();\r\n        this.globalData.renderer.save();\r\n        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n        this.renderInnerContent();\r\n        this.globalData.renderer.restore();\r\n        if(this.maskManager.hasMasks) {\r\n            this.globalData.renderer.restore(true);\r\n        }\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.canvasContext = null;\r\n        this.data = null;\r\n        this.globalData = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\nCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\r\nfunction CVImageElement(data, globalData, comp){\r\n    this.failed = false;\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.img = globalData.imageLoader.getImage(this.assetData);\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\r\nCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVImageElement.prototype.createContent = function(){\r\n\r\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\r\n        var canvas = createTag('canvas');\r\n        canvas.width = this.assetData.w;\r\n        canvas.height = this.assetData.h;\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imgW = this.img.width;\r\n        var imgH = this.img.height;\r\n        var imgRel = imgW / imgH;\r\n        var canvasRel = this.assetData.w/this.assetData.h;\r\n        var widthCrop, heightCrop;\r\n        var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\r\n        if((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\r\n            heightCrop = imgH;\r\n            widthCrop = heightCrop*canvasRel;\r\n        } else {\r\n            widthCrop = imgW;\r\n            heightCrop = widthCrop/canvasRel;\r\n        }\r\n        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n        this.img = canvas;\r\n    }\r\n\r\n};\r\n\r\nCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n    if (this.failed) {\r\n        return;\r\n    }\r\n    this.canvasContext.drawImage(this.img, 0, 0);\r\n};\r\n\r\nCVImageElement.prototype.destroy = function(){\r\n    this.img = null;\r\n};\r\nfunction CVCompElement(data, globalData, comp) {\r\n    this.completeLayers = false;\r\n    this.layers = data.layers;\r\n    this.pendingElements = [];\r\n    this.elements = createSizedArray(this.layers.length);\r\n    this.initElement(data, globalData, comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\r\nCVCompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nCVCompElement.prototype.destroy = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.layers = null;\r\n    this.elements = null;\r\n};\r\n\r\nfunction CVMaskElement(data,element){\r\n    this.data = data;\r\n    this.element = element;\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.viewData = createSizedArray(this.masksProperties.length);\r\n    var i, len = this.masksProperties.length, hasMasks = false;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            hasMasks = true;\r\n        }\r\n        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n    }\r\n    this.hasMasks = hasMasks;\r\n    if(hasMasks) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nCVMaskElement.prototype.renderFrame = function () {\r\n    if(!this.hasMasks){\r\n        return;\r\n    }\r\n    var transform = this.element.finalTransform.mat;\r\n    var ctx = this.element.canvasContext;\r\n    var i, len = this.masksProperties.length;\r\n    var pt,pts,data;\r\n    ctx.beginPath();\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if (this.masksProperties[i].inv) {\r\n                ctx.moveTo(0, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, 0);\r\n            }\r\n            data = this.viewData[i].v;\r\n            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n            ctx.moveTo(pt[0], pt[1]);\r\n            var j, jLen = data._length;\r\n            for (j = 1; j < jLen; j++) {\r\n                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n            }\r\n            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n        }\r\n    }\r\n    this.element.globalData.renderer.save(true);\r\n    ctx.clip();\r\n};\r\n\r\nCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\r\nCVMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n};\r\nfunction CVShapeElement(data, globalData, comp) {\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this.transformsManager = new ShapeTransformManager();\r\n    this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\r\nCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\r\nCVShapeElement.prototype.transformHelper = {opacity:1,_opMdf:false};\r\n\r\nCVShapeElement.prototype.dashResetter = [];\r\n\r\nCVShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n};\r\n\r\nCVShapeElement.prototype.createStyleElement = function(data, transforms) {\r\n    var styleElem = {\r\n        data: data,\r\n        type: data.ty,\r\n        preTransforms: this.transformsManager.addTransformSequence(transforms),\r\n        transforms: [],\r\n        elements: [],\r\n        closed: data.hd === true\r\n    };\r\n    var elementData = {};\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n        if(!elementData.c.k){\r\n            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n        }\r\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,this);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,this);\r\n        elementData.h = PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);\r\n        elementData.a = PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);\r\n        elementData.g = new GradientProperty(this,data.g,this);\r\n    }\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n        if(data.lj == 1) {\r\n            styleElem.ml = data.ml;\r\n        }\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n        if(!elementData.w.k){\r\n            styleElem.wi = elementData.w.v;\r\n        }\r\n        if(data.d){\r\n            var d = new DashProperty(this,data.d,'canvas', this);\r\n            elementData.d = d;\r\n            if(!elementData.d.k){\r\n                styleElem.da = elementData.d.dashArray;\r\n                styleElem.do = elementData.d.dashoffset[0];\r\n            }\r\n        }\r\n    } else {\r\n        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n    }\r\n    this.stylesList.push(styleElem);\r\n    elementData.style = styleElem;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createTransformElement = function(data) {\r\n    var elementData = {\r\n        transform : {\r\n            opacity: 1,\r\n            _opMdf:false,\r\n            key: this.transformsManager.getNewKey(),\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n        }\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createShapeElement = function(data) {\r\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\r\n    \r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.reloadShapes = function() {\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n    len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n};\r\n\r\nCVShapeElement.prototype.addTransformToStyleList = function(transform) {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.push(transform);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.removeTransformFromStyleList = function() {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.pop();\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.closeStyles = function(styles) {\r\n    var i, len = styles.length, j, jLen;\r\n    for (i = 0; i < len; i += 1) {\r\n        styles[i].closed = true;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, shouldRender, transforms){\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], processedPos, modifier, currentTransform;\r\n    var ownTransforms = [].concat(transforms);\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._shouldRender = shouldRender;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st'|| arr[i].ty == 'gf'|| arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            \r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, shouldRender, ownTransforms);\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                currentTransform = this.createTransformElement(arr[i]);\r\n                itemsData[i] = currentTransform;\r\n            }\r\n            ownTransforms.push(itemsData[i]);\r\n            this.addTransformToStyleList(itemsData[i]);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i]);\r\n            }\r\n            \r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        } else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                shouldRender = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    this.removeTransformFromStyleList();\r\n    this.closeStyles(ownStyles);\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderInnerContent = function() {\r\n    this.transformHelper.opacity = 1;\r\n    this.transformHelper._opMdf = false;\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n};\r\n\r\nCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n    var props, groupMatrix;\r\n    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n        groupTransform.opacity = parentTransform.opacity;\r\n        groupTransform.opacity *= groupTransform.op.v;\r\n        groupTransform._opMdf = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.drawLayer = function() {\r\n    var i, len = this.stylesList.length;\r\n    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n    for(i=0;i<len;i+=1){\r\n        currentStyle = this.stylesList[i];\r\n        type = currentStyle.type;\r\n\r\n        //Skipping style when\r\n        //Stroke width equals 0\r\n        //style should not be rendered (extra unused repeaters)\r\n        //current opacity equals 0\r\n        //global opacity equals 0\r\n        if(((type === 'st' || type === 'gs') && currentStyle.wi === 0) || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0){\r\n            continue;\r\n        }\r\n        renderer.save();\r\n        elems = currentStyle.elements;\r\n        if(type === 'st' || type === 'gs'){\r\n            ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\r\n            ctx.lineWidth = currentStyle.wi;\r\n            ctx.lineCap = currentStyle.lc;\r\n            ctx.lineJoin = currentStyle.lj;\r\n            ctx.miterLimit = currentStyle.ml || 0;\r\n        } else {\r\n            ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\r\n        }\r\n        renderer.ctxOpacity(currentStyle.coOp);\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.beginPath();\r\n        }\r\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\r\n        jLen = elems.length;\r\n        for(j=0;j<jLen;j+=1){\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.beginPath();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(currentStyle.da);\r\n                    ctx.lineDashOffset = currentStyle.do;\r\n                }\r\n            }\r\n            nodes = elems[j].trNodes;\r\n            kLen = nodes.length;\r\n\r\n            for(k=0;k<kLen;k+=1){\r\n                if(nodes[k].t == 'm'){\r\n                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n                }else if(nodes[k].t == 'c'){\r\n                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n                }else{\r\n                    ctx.closePath();\r\n                }\r\n            }\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.stroke();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(this.dashResetter);\r\n                }\r\n            }\r\n        }\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.fill(currentStyle.r);\r\n        }\r\n        renderer.restore();\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n    var i, len = items.length - 1;\r\n    var groupTransform;\r\n    groupTransform = parentTransform;\r\n    for(i=len;i>=0;i-=1){\r\n        if(items[i].ty == 'tr'){\r\n            groupTransform = data[i].transform;\r\n            this.renderShapeTransform(parentTransform, groupTransform);\r\n        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(items[i].ty == 'fl'){\r\n            this.renderFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'st'){\r\n            this.renderStroke(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gf' || items[i].ty == 'gs'){\r\n            this.renderGradientFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gr'){\r\n            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n        }else if(items[i].ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n    if(isMain){\r\n        this.drawLayer();\r\n    }\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStyledShape = function(styledShape, shape){\r\n    if(this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\r\n        var shapeNodes = styledShape.trNodes;\r\n        var paths = shape.paths;\r\n        var i, len, j, jLen = paths._length;\r\n        shapeNodes.length = 0;\r\n        var groupTransformMat = styledShape.transforms.finalTransform;\r\n        for (j = 0; j < jLen; j += 1) {\r\n            var pathNodes = paths.shapes[j];\r\n            if(pathNodes && pathNodes.v){\r\n                len = pathNodes._length;\r\n                for (i = 1; i < len; i += 1) {\r\n                    if (i === 1) {\r\n                        shapeNodes.push({\r\n                            t: 'm',\r\n                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                        });\r\n                    }\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n                    });\r\n                }\r\n                if (len === 1) {\r\n                    shapeNodes.push({\r\n                        t: 'm',\r\n                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                    });\r\n                }\r\n                if (pathNodes.c && len) {\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n                    });\r\n                    shapeNodes.push({\r\n                        t: 'z'\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        styledShape.trNodes = shapeNodes;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    if(pathData.hd !== true && pathData._shouldRender) {\r\n        var i, len = itemData.styledShapes.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\r\n        }\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n\r\n    if (itemData.c._mdf || this._isFirstFrame) {\r\n        styleElem.co = 'rgb(' \r\n        + bm_floor(itemData.c.v[0]) + ',' \r\n        + bm_floor(itemData.c.v[1]) + ',' \r\n        + bm_floor(itemData.c.v[2]) + ')';\r\n    }\r\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\r\n        styleElem.coOp = itemData.o.v * groupTransform.opacity;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderGradientFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    if(!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))) {\r\n        var ctx = this.globalData.canvasContext;\r\n        var grd;\r\n        var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n        if (styleData.t === 1) {\r\n            grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\r\n        } else {\r\n            var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\r\n        }\r\n\r\n        var i, len = styleData.g.p;\r\n        var cValues = itemData.g.c;\r\n        var opacity = 1;\r\n\r\n        for (i = 0; i < len; i += 1){\r\n            if(itemData.g._hasOpacity && itemData.g._collapsable) {\r\n                opacity = itemData.g.o[i*2 + 1];\r\n            }\r\n            grd.addColorStop(cValues[i * 4] / 100,'rgba('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ',' + opacity + ')');\r\n        }\r\n        styleElem.grd = grd;\r\n    }\r\n    styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if(d && (d._mdf  || this._isFirstFrame)){\r\n        styleElem.da = d.dashArray;\r\n        styleElem.do = d.dashoffset[0];\r\n    }\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.wi = itemData.w.v;\r\n    }\r\n};\r\n\r\n\r\nCVShapeElement.prototype.destroy = function(){\r\n    this.shapesData = null;\r\n    this.globalData = null;\r\n    this.canvasContext = null;\r\n    this.stylesList.length = 0;\r\n    this.itemsData.length = 0;\r\n};\r\n\r\n\r\nfunction CVSolidElement(data, globalData, comp) {\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\r\nCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVSolidElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.fillStyle = this.data.sc;\r\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n    //\r\n};\r\nfunction CVTextElement(data, globalData, comp){\r\n    this.textSpans = [];\r\n    this.yOffset = 0;\r\n    this.fillColorAnim = false;\r\n    this.strokeColorAnim = false;\r\n    this.strokeWidthAnim = false;\r\n    this.stroke = false;\r\n    this.fill = false;\r\n    this.justifyOffset = 0;\r\n    this.currentRender = null;\r\n    this.renderType = 'canvas';\r\n    this.values = {\r\n        fill: 'rgba(0,0,0,0)',\r\n        stroke: 'rgba(0,0,0,0)',\r\n        sWidth: 0,\r\n        fValue: ''\r\n    };\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\r\nCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\r\nCVTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\r\n    var hasFill = false;\r\n    if(documentData.fc) {\r\n        hasFill = true;\r\n        this.values.fill = this.buildColor(documentData.fc);\r\n    }else{\r\n        this.values.fill = 'rgba(0,0,0,0)';\r\n    }\r\n    this.fill = hasFill;\r\n    var hasStroke = false;\r\n    if(documentData.sc){\r\n        hasStroke = true;\r\n        this.values.stroke = this.buildColor(documentData.sc);\r\n        this.values.sWidth = documentData.sw;\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    var matrixHelper = this.mHelper;\r\n    this.stroke = hasStroke;\r\n    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n    len = documentData.finalText.length;\r\n    //this.tHelper.font = this.values.fValue;\r\n    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var cnt = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = charData && charData.data || {};\r\n        matrixHelper.reset();\r\n        if(singleShape && letters[i].n) {\r\n            xPos = -trackingOffset;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            firstLine = false;\r\n        }\r\n\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        jLen = shapes.length;\r\n        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n        if(singleShape){\r\n            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        }\r\n        commands = createSizedArray(jLen);\r\n        for(j=0;j<jLen;j+=1){\r\n            kLen = shapes[j].ks.k.i.length;\r\n            pathNodes = shapes[j].ks.k;\r\n            pathArr = [];\r\n            for(k=1;k<kLen;k+=1){\r\n                if(k==1){\r\n                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n                }\r\n                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n            }\r\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n            commands[j] = pathArr;\r\n        }\r\n        if(singleShape){\r\n            xPos += letters[i].l;\r\n            xPos += trackingOffset;\r\n        }\r\n        if(this.textSpans[cnt]){\r\n            this.textSpans[cnt].elem = commands;\r\n        } else {\r\n            this.textSpans[cnt] = {elem: commands};\r\n        }\r\n        cnt +=1;\r\n    }\r\n};\r\n\r\nCVTextElement.prototype.renderInnerContent = function(){\r\n    var ctx = this.canvasContext;\r\n    var finalMat = this.finalTransform.mat.props;\r\n    ctx.font = this.values.fValue;\r\n    ctx.lineCap = 'butt';\r\n    ctx.lineJoin = 'miter';\r\n    ctx.miterLimit = 4;\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    }\r\n\r\n    var  i,len, j, jLen, k, kLen;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter;\r\n    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            continue;\r\n        }\r\n        renderedLetter = renderedLetters[i];\r\n        if(renderedLetter){\r\n            this.globalData.renderer.save();\r\n            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n        }\r\n        if(this.fill){\r\n            if(renderedLetter && renderedLetter.fc){\r\n                if(lastFill !== renderedLetter.fc){\r\n                    lastFill = renderedLetter.fc;\r\n                    ctx.fillStyle = renderedLetter.fc;\r\n                }\r\n            }else if(lastFill !== this.values.fill){\r\n                lastFill = this.values.fill;\r\n                ctx.fillStyle = this.values.fill;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.fill();\r\n            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n        }\r\n        if(this.stroke){\r\n            if(renderedLetter && renderedLetter.sw){\r\n                if(lastStrokeW !== renderedLetter.sw){\r\n                    lastStrokeW = renderedLetter.sw;\r\n                    ctx.lineWidth = renderedLetter.sw;\r\n                }\r\n            }else if(lastStrokeW !== this.values.sWidth){\r\n                lastStrokeW = this.values.sWidth;\r\n                ctx.lineWidth = this.values.sWidth;\r\n            }\r\n            if(renderedLetter && renderedLetter.sc){\r\n                if(lastStroke !== renderedLetter.sc){\r\n                    lastStroke = renderedLetter.sc;\r\n                    ctx.strokeStyle = renderedLetter.sc;\r\n                }\r\n            }else if(lastStroke !== this.values.stroke){\r\n                lastStroke = this.values.stroke;\r\n                ctx.strokeStyle = this.values.stroke;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.stroke();\r\n            ///ctx.strokeText(letters[i].val,0,0);\r\n        }\r\n        if(renderedLetter) {\r\n            this.globalData.renderer.restore();\r\n        }\r\n    }\r\n};\r\nfunction CVEffects() {\r\n\r\n}\r\nCVEffects.prototype.renderFrame = function(){};\r\nfunction HBaseElement(data,globalData,comp){}\r\nHBaseElement.prototype = {\r\n    checkBlendMode: function(){},\r\n    initRendererElement: function(){\r\n        this.baseElement = createTag(this.data.tg || 'div');\r\n        if(this.data.hasMask) {\r\n            this.svgElement = createNS('svg');\r\n            this.layerElement = createNS('g');\r\n            this.maskedElement = this.layerElement;\r\n            this.svgElement.appendChild(this.layerElement);\r\n            this.baseElement.appendChild(this.svgElement);\r\n        } else {\r\n            this.layerElement = this.baseElement;\r\n        }\r\n        styleDiv(this.baseElement);\r\n    },\r\n    createContainerElements: function(){\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n        this.transformedElement = this.baseElement;\r\n        this.maskedElement = this.layerElement;\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n    },\r\n    renderElement: function() {\r\n        if(this.finalTransform._matMdf){\r\n            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n        }\r\n        if(this.finalTransform._opMdf){\r\n            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        //If it is exported as hidden (data.hd === true) no need to render\r\n        //If it is not visible no need to render\r\n        if (this.data.hd || this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.renderElement();\r\n        this.renderInnerContent();\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.layerElement = null;\r\n        this.transformedElement = null;\r\n        if(this.matteElement) {\r\n            this.matteElement = null;\r\n        }\r\n        if(this.maskManager) {\r\n            this.maskManager.destroy();\r\n            this.maskManager = null;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    addEffects: function(){\r\n    },\r\n    setMatte: function(){}\r\n};\r\nHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\nHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\nHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\r\nfunction HSolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\r\nHSolidElement.prototype.createContent = function(){\r\n    var rect;\r\n    if(this.data.hasMask){\r\n        rect = createNS('rect');\r\n        rect.setAttribute('width',this.data.sw);\r\n        rect.setAttribute('height',this.data.sh);\r\n        rect.setAttribute('fill',this.data.sc);\r\n        this.svgElement.setAttribute('width',this.data.sw);\r\n        this.svgElement.setAttribute('height',this.data.sh);\r\n    } else {\r\n        rect = createTag('div');\r\n        rect.style.width = this.data.sw + 'px';\r\n        rect.style.height = this.data.sh + 'px';\r\n        rect.style.backgroundColor = this.data.sc;\r\n    }\r\n    this.layerElement.appendChild(rect);\r\n};\r\n\r\nfunction HCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = !data.hasMask;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\nHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\r\nHCompElement.prototype.createContainerElements = function(){\r\n    this._createBaseContainerElements();\r\n    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n    if(this.data.hasMask){\r\n        this.svgElement.setAttribute('width',this.data.w);\r\n        this.svgElement.setAttribute('height',this.data.h);\r\n        this.transformedElement = this.baseElement;\r\n    } else {\r\n        this.transformedElement = this.layerElement;\r\n    }\r\n};\r\n\r\nHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n    var j = 0;\r\n    var nextElement;\r\n    while(j<pos){\r\n        if(this.elements[j] && this.elements[j].getBaseElement){\r\n            nextElement = this.elements[j].getBaseElement();\r\n        }\r\n        j += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(elem, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(elem);\r\n    }\r\n}\r\n\r\nfunction HShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.shapesContainer = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n}\r\nextendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\nHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\r\nHShapeElement.prototype.createContent = function(){\r\n    var cont;\r\n    this.baseElement.style.fontSize = 0;\r\n    if (this.data.hasMask) {\r\n        this.layerElement.appendChild(this.shapesContainer);\r\n        cont = this.svgElement;\r\n    } else {\r\n        cont = createNS('svg');\r\n        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n        cont.setAttribute('width',size.w);\r\n        cont.setAttribute('height',size.h);\r\n        cont.appendChild(this.shapesContainer);\r\n        this.layerElement.appendChild(cont);\r\n    }\r\n\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n    this.filterUniqueShapes();\r\n    this.shapeCont = cont;\r\n};\r\n\r\nHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n    var i, len = transformers.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n    }\r\n    return point;\r\n}\r\n\r\nHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n    var shape = item.sh.v;\r\n    var transformers = item.transformers;\r\n    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n    if (len <= 1) {\r\n        return;\r\n    }\r\n    for (i = 0; i < len - 1; i += 1) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n    if(shape.c) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n    var bounds = this.shapeBoundingBox;\r\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n}\r\n\r\nHShapeElement.prototype.shapeBoundingBox = {\r\n    left:0,\r\n    right:0,\r\n    top:0,\r\n    bottom:0,\r\n}\r\n\r\nHShapeElement.prototype.tempBoundingBox = {\r\n    x:0,\r\n    xMax:0,\r\n    y:0,\r\n    yMax:0,\r\n    width:0,\r\n    height:0\r\n}\r\n\r\nHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\r\n    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\r\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\r\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n      c = 3 * p1[i] - 3 * p0[i];\r\n\r\n      b = b | 0;\r\n      a = a | 0;\r\n      c = c | 0;\r\n\r\n      if (a === 0) {\r\n\r\n        if (b === 0) {\r\n          continue;\r\n        }\r\n\r\n        t = -c / b;\r\n\r\n        if (0 < t && t < 1) {\r\n          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n        }\r\n        continue;\r\n      }\r\n\r\n      b2ac = b * b - 4 * c * a;\r\n\r\n      if (b2ac < 0) {\r\n        continue;\r\n      }\r\n\r\n      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\r\n      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\r\n    }\r\n\r\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n  };\r\n\r\n  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n    return bm_pow(1-t, 3) * p0[i]\r\n        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n        + bm_pow(t, 3) * p3[i];\r\n  }\r\n\r\nHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n    var i, len = itemsData.length, path;\r\n    for(i = 0; i < len; i += 1) {\r\n        if(itemsData[i] && itemsData[i].sh) {\r\n            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n        } else if(itemsData[i] && itemsData[i].it) {\r\n            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n        }\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.currentBoxContains = function(box) {\r\n    return this.currentBBox.x <= box.x \r\n    && this.currentBBox.y <= box.y \r\n    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width\r\n    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height\r\n}\r\n\r\nHShapeElement.prototype.renderInnerContent = function() {\r\n    this._renderShapeFrame();\r\n\r\n    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n        var tempBoundingBox = this.tempBoundingBox;\r\n        var max = 999999;\r\n        tempBoundingBox.x = max;\r\n        tempBoundingBox.xMax = -max;\r\n        tempBoundingBox.y = max;\r\n        tempBoundingBox.yMax = -max;\r\n        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n        //var tempBoundingBox = this.shapeCont.getBBox();\r\n        if(this.currentBoxContains(tempBoundingBox)) {\r\n            return;\r\n        }\r\n        var changed = false;\r\n        if(this.currentBBox.w !== tempBoundingBox.width){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n            changed = true;\r\n        }\r\n        if(this.currentBBox.h !== tempBoundingBox.height){\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n            changed = true;\r\n        }\r\n        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.currentBBox.x = tempBoundingBox.x;\r\n            this.currentBBox.y = tempBoundingBox.y;\r\n\r\n            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n\r\n};\r\nfunction HTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.textPaths = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n    this.renderType = 'svg';\r\n    this.isMasked = false;\r\n    this.initElement(data,globalData,comp);\r\n\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\r\nHTextElement.prototype.createContent = function(){\r\n    this.isMasked = this.checkMasks();\r\n    if(this.isMasked){\r\n        this.renderType = 'svg';\r\n        this.compW = this.comp.data.w;\r\n        this.compH = this.comp.data.h;\r\n        this.svgElement.setAttribute('width',this.compW);\r\n        this.svgElement.setAttribute('height',this.compH);\r\n        var g = createNS('g');\r\n        this.maskedElement.appendChild(g);\r\n        this.innerElem = g;\r\n    } else {\r\n        this.renderType = 'html';\r\n        this.innerElem = this.layerElement;\r\n    }\r\n\r\n    this.checkParenting();\r\n\r\n};\r\n\r\nHTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n    var innerElemStyle = this.innerElem.style;\r\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n    if(documentData.sc){\r\n        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(!this.globalData.fontManager.chars){\r\n        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n        if(fontData.fClass){\r\n            this.innerElem.className = fontData.fClass;\r\n        } else {\r\n            innerElemStyle.fontFamily = fontData.fFamily;\r\n            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n            innerElemStyle.fontStyle = fStyle;\r\n            innerElemStyle.fontWeight = fWeight;\r\n        }\r\n    }\r\n    var i, len;\r\n\r\n    var letters = documentData.l;\r\n    len = letters.length;\r\n    var tSpan,tParent,tCont;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '';\r\n    var cnt = 0;\r\n    for (i = 0;i < len ;i += 1) {\r\n        if(this.globalData.fontManager.chars){\r\n            if(!this.textPaths[cnt]){\r\n                tSpan = createNS('path');\r\n                tSpan.setAttribute('stroke-linecap', 'butt');\r\n                tSpan.setAttribute('stroke-linejoin','round');\r\n                tSpan.setAttribute('stroke-miterlimit','4');\r\n            } else {\r\n                tSpan = this.textPaths[cnt];\r\n            }\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tCont = tParent.children[0];\r\n                } else {\r\n\r\n                    tParent = createTag('div');\r\n                    tCont = createNS('svg');\r\n                    tCont.appendChild(tSpan);\r\n                    styleDiv(tParent);\r\n                }\r\n            }\r\n        }else{\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tSpan = this.textPaths[cnt];\r\n                } else {\r\n                    tParent = createTag('span');\r\n                    styleDiv(tParent);\r\n                    tSpan = createTag('span');\r\n                    styleDiv(tSpan);\r\n                    tParent.appendChild(tSpan);\r\n                }\r\n            } else {\r\n                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n            }\r\n        }\r\n        //tSpan.setAttribute('visibility', 'hidden');\r\n        if(this.globalData.fontManager.chars){\r\n            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n            var shapeData;\r\n            if(charData){\r\n                shapeData = charData.data;\r\n            } else {\r\n                shapeData = null;\r\n            }\r\n            matrixHelper.reset();\r\n            if(shapeData && shapeData.shapes){\r\n                shapes = shapeData.shapes[0].it;\r\n                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n                tSpan.setAttribute('d',shapeStr);\r\n            }\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                if(shapeData && shapeData.shapes){\r\n\r\n                    //document.body.appendChild is needed to get exact measure of shape\r\n                    document.body.appendChild(tCont);\r\n                    var boundingBox = tCont.getBBox();\r\n                    tCont.setAttribute('width',boundingBox.width + 2);\r\n                    tCont.setAttribute('height',boundingBox.height + 2);\r\n                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\r\n                    letters[i].yOffset = boundingBox.y-1;\r\n\r\n                } else{\r\n                    tCont.setAttribute('width',1);\r\n                    tCont.setAttribute('height',1);\r\n                }\r\n                    tParent.appendChild(tCont);\r\n            }else{\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }else{\r\n            tSpan.textContent = letters[i].val;\r\n            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                //\r\n                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n            } else {\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }\r\n        //\r\n        if(!this.isMasked){\r\n            this.textSpans[cnt] = tParent;\r\n        }else{\r\n            this.textSpans[cnt] = tSpan;\r\n        }\r\n        this.textSpans[cnt].style.display = 'block';\r\n        this.textPaths[cnt] = tSpan;\r\n        cnt += 1;\r\n    }\r\n    while(cnt < this.textSpans.length){\r\n        this.textSpans[cnt].style.display = 'none';\r\n        cnt += 1;\r\n    }\r\n};\r\n\r\nHTextElement.prototype.renderInnerContent = function() {\r\n\r\n    if(this.data.singleShape){\r\n        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n            return;\r\n        } else {\r\n            // Todo Benchmark if using this is better than getBBox\r\n             if(this.isMasked && this.finalTransform._matMdf){\r\n                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n             }\r\n        }\r\n    }\r\n\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n        return;\r\n    }\r\n    var  i,len, count = 0;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter, textSpan, textPath;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            count += 1;\r\n            continue;\r\n        }\r\n        textSpan = this.textSpans[i];\r\n        textPath = this.textPaths[i];\r\n        renderedLetter = renderedLetters[count];\r\n        count += 1;\r\n        if(renderedLetter._mdf.m) {\r\n            if(!this.isMasked){\r\n                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n            }else{\r\n                textSpan.setAttribute('transform',renderedLetter.m);\r\n            }\r\n        }\r\n        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n        textSpan.style.opacity = renderedLetter.o;\r\n        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n        }\r\n        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n            textPath.setAttribute('stroke',renderedLetter.sc);\r\n        }\r\n        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n            textPath.setAttribute('fill',renderedLetter.fc);\r\n            textPath.style.color = renderedLetter.fc;\r\n        }\r\n    }\r\n\r\n    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n        var boundingBox = this.innerElem.getBBox();\r\n\r\n        if(this.currentBBox.w !== boundingBox.width){\r\n            this.currentBBox.w = boundingBox.width;\r\n            this.svgElement.setAttribute('width',boundingBox.width);\r\n        }\r\n        if(this.currentBBox.h !== boundingBox.height){\r\n            this.currentBBox.h = boundingBox.height;\r\n            this.svgElement.setAttribute('height',boundingBox.height);\r\n        }\r\n\r\n        var margin = 1;\r\n        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n            this.currentBBox.w = boundingBox.width + margin*2;\r\n            this.currentBBox.h = boundingBox.height + margin*2;\r\n            this.currentBBox.x = boundingBox.x - margin;\r\n            this.currentBBox.y = boundingBox.y - margin;\r\n\r\n            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n};\r\nfunction HImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\r\n\r\nHImageElement.prototype.createContent = function(){\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    var img = new Image();\r\n\r\n    if(this.data.hasMask){\r\n        this.imageElem = createNS('image');\r\n        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n        this.layerElement.appendChild(this.imageElem);\r\n        this.baseElement.setAttribute('width',this.assetData.w);\r\n        this.baseElement.setAttribute('height',this.assetData.h);\r\n    } else {\r\n        this.layerElement.appendChild(img);\r\n    }\r\n    img.src = assetPath;\r\n    if(this.data.ln){\r\n        this.baseElement.setAttribute('id',this.data.ln);\r\n    }\r\n};\r\nfunction HCameraElement(data,globalData,comp){\r\n    this.initFrame();\r\n    this.initBaseData(data,globalData,comp);\r\n    this.initHierarchy();\r\n    var getProp = PropertyFactory.getProp;\r\n    this.pe = getProp(this,data.pe,0,0,this);\r\n    if(data.ks.p.s){\r\n        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n    }else{\r\n        this.p = getProp(this,data.ks.p,1,0,this);\r\n    }\r\n    if(data.ks.a){\r\n        this.a = getProp(this,data.ks.a,1,0,this);\r\n    }\r\n    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n        var i,len = data.ks.or.k.length;\r\n        for(i=0;i<len;i+=1){\r\n            data.ks.or.k[i].to = null;\r\n            data.ks.or.k[i].ti = null;\r\n        }\r\n    }\r\n    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n    this.or.sh = true;\r\n    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n    this.mat = new Matrix();\r\n    this._prevMat = new Matrix();\r\n    this._isFirstFrame = true;\r\n    \r\n    // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\r\n    this.finalTransform = {\r\n        mProp: this\r\n    };\r\n}\r\nextendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\r\nHCameraElement.prototype.setup = function() {\r\n    var i, len = this.comp.threeDElements.length, comp;\r\n    for(i=0;i<len;i+=1){\r\n        //[perspectiveElem,container]\r\n        comp = this.comp.threeDElements[i];\r\n        if(comp.type === '3d') {\r\n            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n        }\r\n    }\r\n};\r\n\r\nHCameraElement.prototype.createElements = function(){\r\n};\r\n\r\nHCameraElement.prototype.hide = function(){\r\n};\r\n\r\nHCameraElement.prototype.renderFrame = function(){\r\n    var _mdf = this._isFirstFrame;\r\n    var i, len;\r\n    if(this.hierarchy){\r\n        len = this.hierarchy.length;\r\n        for(i=0;i<len;i+=1){\r\n            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n        }\r\n    }\r\n    if(_mdf || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n        this.mat.reset();\r\n\r\n        if(this.hierarchy){\r\n            var mat;\r\n            len = this.hierarchy.length - 1;\r\n            for (i = len; i >= 0; i -= 1) {\r\n                /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                console.log(mat)\r\n                this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n                console.log(this.mat.props)*/\r\n                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n                this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\r\n                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n            }\r\n        }\r\n\r\n        if(this.p){\r\n            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n        }else{\r\n            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n        }\r\n        if(this.a){\r\n            var diffVector = [this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];\r\n            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\r\n        }\r\n        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n        this.mat.translate(0,0,this.pe.v);\r\n\r\n\r\n        \r\n\r\n        var hasMatrixChanged = !this._prevMat.equals(this.mat);\r\n        if((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\r\n            len = this.comp.threeDElements.length;\r\n            var comp;\r\n            for(i=0;i<len;i+=1){\r\n                comp = this.comp.threeDElements[i];\r\n                if(comp.type === '3d') {\r\n                    if(hasMatrixChanged) {\r\n                        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n                    }\r\n                    if(this.pe._mdf) {\r\n                        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n                    }\r\n                }\r\n            }\r\n            this.mat.clone(this._prevMat);\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nHCameraElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nHCameraElement.prototype.destroy = function(){\r\n};\r\nHCameraElement.prototype.getBaseElement = function(){return null;};\r\nfunction HEffects() {\r\n}\r\nHEffects.prototype.renderFrame = function(){};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n    var _isFrozen = false;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function getRegisteredAnimations() {\r\n        var i, len = registeredAnimations.length;\r\n        var animations = [];\r\n        for(i = 0; i < len; i += 1) {\r\n            animations.push(registeredAnimations[i].animation);\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(playingAnimationsNum && !_isFrozen) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function activate(){\r\n        if(!_isFrozen && playingAnimationsNum){\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function freeze() {\r\n        _isFrozen = true;\r\n    }\r\n\r\n    function unfreeze() {\r\n        _isFrozen = false;\r\n        activate();\r\n    }\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    moduleOb.freeze = freeze;\r\n    moduleOb.unfreeze = unfreeze;\r\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = createElementID();\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this._completedLoop = false;\r\n    this.projectInterface = ProjectInterface();\r\n    this.imagePreloader = new ImagePreloader();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    this.assetsPath = params.assetsPath;\r\n    if(params.animationData){\r\n        this.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n\r\n        assetLoader.load(params.path, this.configAnimation.bind(this), function() {\r\n            this.trigger('data_failed');\r\n        }.bind(this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.totalFrames;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    assetLoader.load(segmentPath, this.includeLayers.bind(this), function() {\r\n        this.trigger('data_failed');\r\n    }.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.totalFrames;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.imagesLoaded = function() {\r\n    this.trigger('loaded_images');\r\n    this.checkLoaded()\r\n}\r\n\r\nAnimationItem.prototype.preloadImages = function() {\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\r\n}\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    if(!this.renderer){\r\n        return;\r\n    }\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.preloadImages();\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    this.waitForFontsLoaded();\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = function(){\r\n    if(!this.renderer) {\r\n        return;\r\n    }\r\n    if(this.renderer.globalData.fontManager.loaded()){\r\n        this.checkLoaded();\r\n    }else{\r\n        setTimeout(this.waitForFontsLoaded.bind(this),20);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {\r\n        this.isLoaded = true;\r\n        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function() {\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this), 0);\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this._completedLoop = false;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue >  this.totalFrames ? nextValue % this.totalFrames : 0)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this._completedLoop = true;\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                if(!this._completedLoop) {\r\n                    this._completedLoop = true;\r\n                } else {\r\n                    this.trigger('loopComplete');\r\n                }\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr, forceFlag) {\r\n    if (forceFlag) {\r\n        this.segments.length = 0;\r\n    }\r\n    if (typeof arr[0] === 'object') {\r\n        var i, len = arr.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.segments.push(arr[i]);\r\n        }\r\n    } else {\r\n        this.segments.push(arr);\r\n    }\r\n    if (this.segments.length && forceFlag) {\r\n        this.adjustSegment(this.segments.shift(), 0);\r\n    }\r\n    if (this.isPaused) {\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if (forceFlag) {\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset) {\r\n    if (this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if ((name && this.name != name) || !this.renderer) {\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.imagePreloader.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(assetData.e) {\r\n        path = assetData.p;\r\n    } else if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nvar Expressions = (function(){\r\n    var ob = {};\r\n    ob.initExpressions = initExpressions;\r\n\r\n\r\n    function initExpressions(animation){\r\n\r\n    \tvar stackCount = 0;\r\n    \tvar registers = [];\r\n\r\n    \tfunction pushExpression() {\r\n\t\t\tstackCount += 1;\r\n    \t}\r\n\r\n    \tfunction popExpression() {\r\n\t\t\tstackCount -= 1;\r\n\t\t\tif (stackCount === 0) {\r\n\t\t\t\treleaseInstances();\r\n\t\t\t}\r\n    \t}\r\n\r\n    \tfunction registerExpressionProperty(expression) {\r\n    \t\tif (registers.indexOf(expression) === -1) {\r\n\t\t\t\tregisters.push(expression)\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction releaseInstances() {\r\n    \t\tvar i, len = registers.length;\r\n    \t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\t\tregisters[i].release();\r\n    \t\t}\r\n    \t\tregisters.length = 0;\r\n    \t}\r\n\r\n        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n        animation.renderer.globalData.pushExpression = pushExpression;\r\n        animation.renderer.globalData.popExpression = popExpression;\r\n        animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\r\n    }\r\n   return ob;\r\n}());\r\n\r\nexpressionsPlugin = Expressions;\r\n\r\nvar ExpressionManager = (function(){\r\n    'use strict';\r\n    var ob = {};\r\n    var Math = BMMath;\r\n    var window = null;\r\n    var document = null;\r\n\r\n    function $bm_isInstanceOfArray(arr) {\r\n        return arr.constructor === Array || arr.constructor === Float32Array;\r\n    }\r\n\r\n    function isNumerable(tOfV, v) {\r\n        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\r\n    }\r\n\r\n    function $bm_neg(a){\r\n        var tOfA = typeof a;\r\n        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n            return -a;\r\n        }\r\n        if($bm_isInstanceOfArray(a)){\r\n            var i, lenA = a.length;\r\n            var retArr = [];\r\n            for(i=0;i<lenA;i+=1){\r\n                retArr[i] = -a[i];\r\n            }\r\n            return retArr;\r\n        }\r\n        if (a.propType) {\r\n            return a.v;\r\n        }\r\n    }\r\n\r\n    var easeInBez = BezierFactory.getBezierEasing(0.333,0,.833,.833, 'easeIn').get;\r\n    var easeOutBez = BezierFactory.getBezierEasing(0.167,0.167,.667,1, 'easeOut').get;\r\n    var easeInOutBez = BezierFactory.getBezierEasing(.33,0,.667,1, 'easeInOut').get;\r\n\r\n    function sum(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(tOfA === 'string' || tOfB === 'string'){\r\n            return a + b;\r\n        }\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a + b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] + b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a + b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            \r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] + b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n    var add = sum;\r\n\r\n    function sub(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            if(tOfA === 'string') {\r\n                a = parseInt(a);\r\n            }\r\n            if(tOfB === 'string') {\r\n                b = parseInt(b);\r\n            }\r\n            return a - b;\r\n        }\r\n        if( $bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] - b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) &&  $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a - b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] - b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function mul(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a * b;\r\n        }\r\n\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] * b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a * b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function div(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a / b;\r\n        }\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] / b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a / b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n    function mod(a,b) {\r\n        if(typeof a === 'string') {\r\n            a = parseInt(a);\r\n        }\r\n        if(typeof b === 'string') {\r\n            b = parseInt(b);\r\n        }\r\n        return a % b;\r\n    }\r\n    var $bm_sum = sum;\r\n    var $bm_sub = sub;\r\n    var $bm_mul = mul;\r\n    var $bm_div = div;\r\n    var $bm_mod = mod;\r\n\r\n    function clamp(num, min, max) {\r\n        if(min > max){\r\n            var mm = max;\r\n            max = min;\r\n            min = mm;\r\n        }\r\n        return Math.min(Math.max(num, min), max);\r\n    }\r\n\r\n    function radiansToDegrees(val) {\r\n        return val/degToRads;\r\n    }\r\n    var radians_to_degrees = radiansToDegrees;\r\n\r\n    function degreesToRadians(val) {\r\n        return val*degToRads;\r\n    }\r\n    var degrees_to_radians = radiansToDegrees;\r\n\r\n    var helperLengthArray = [0,0,0,0,0,0];\r\n\r\n    function length(arr1, arr2) {\r\n        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n            arr2 = arr2 || 0;\r\n            return Math.abs(arr1 - arr2);\r\n        }\r\n        if(!arr2) {\r\n            arr2 = helperLengthArray;\r\n        }\r\n        var i, len = Math.min(arr1.length, arr2.length);\r\n        var addedLength = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n        }\r\n        return Math.sqrt(addedLength);\r\n    }\r\n\r\n    function normalize(vec) {\r\n        return div(vec, length(vec));\r\n    }\r\n\r\n    function rgbToHsl(val) {\r\n        var r = val[0]; var g = val[1]; var b = val[2];\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min){\r\n            h = s = 0; // achromatic\r\n        }else{\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max){\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l,val[3]];\r\n    }\r\n\r\n    function hue2rgb(p, q, t){\r\n        if(t < 0) t += 1;\r\n        if(t > 1) t -= 1;\r\n        if(t < 1/6) return p + (q - p) * 6 * t;\r\n        if(t < 1/2) return q;\r\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    }\r\n\r\n    function hslToRgb(val){\r\n        var h = val[0];\r\n        var s = val[1];\r\n        var l = val[2];\r\n\r\n        var r, g, b;\r\n\r\n        if(s === 0){\r\n            r = g = b = l; // achromatic\r\n        }else{\r\n\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return [r, g , b, val[3]];\r\n    }\r\n\r\n    function linear(t, tMin, tMax, value1, value2){\r\n        if(value1 === undefined || value2 === undefined){\r\n            value1 = tMin;\r\n            value2 = tMax;\r\n            tMin = 0;\r\n            tMax = 1;\r\n        }\r\n        if(tMax < tMin) {\r\n            var _tMin = tMax;\r\n            tMax = tMin;\r\n            tMin = _tMin;\r\n        }\r\n        if(t <= tMin) {\r\n            return value1;\r\n        }else if(t >= tMax){\r\n            return value2;\r\n        }\r\n        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n        if(!value1.length){\r\n            return value1 + (value2-value1)*perc;\r\n        }\r\n        var i, len = value1.length;\r\n        var arr = createTypedArray('float32', len);\r\n        for(i=0;i<len;i+=1){\r\n            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n        }\r\n        return arr;\r\n    }\r\n    function random(min,max){\r\n        if(max === undefined){\r\n            if(min === undefined){\r\n                min = 0;\r\n                max = 1;\r\n            } else {\r\n                max = min;\r\n                min = undefined;\r\n            }\r\n        }\r\n        if(max.length){\r\n            var i, len = max.length;\r\n            if(!min){\r\n                min = createTypedArray('float32', len);\r\n            }\r\n            var arr = createTypedArray('float32', len);\r\n            var rnd = BMMath.random();\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n            }\r\n            return arr;\r\n        }\r\n        if(min === undefined){\r\n            min = 0;\r\n        }\r\n        var rndm = BMMath.random();\r\n        return min + rndm*(max-min);\r\n    }\r\n\r\n    function createPath(points, inTangents, outTangents, closed) {\r\n        var i, len = points.length;\r\n        var path = shape_pool.newElement();\r\n        path.setPathData(!!closed, len);\r\n        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n        for(i = 0; i < len; i += 1) {\r\n            inVertexPoint = (inTangents && inTangents[i]) ? inTangents[i] : arrPlaceholder;\r\n            outVertexPoint = (outTangents && outTangents[i]) ? outTangents[i] : arrPlaceholder;\r\n            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function initiateExpression(elem,data,property){\r\n        var val = data.x;\r\n        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n        var _needsRandom = val.indexOf('random') !== -1;\r\n        var elemType = elem.data.ty;\r\n        var transform,$bm_transform,content,effect;\r\n        var thisProperty = property;\r\n        thisProperty.valueAtTime = thisProperty.getValueAtTime;\r\n        Object.defineProperty(thisProperty, 'value', {\r\n            get: function() {\r\n                return thisProperty.v\r\n            }\r\n        })\r\n        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n        elem.comp.displayStartTime = 0;\r\n        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        var width = elem.data.sw ? elem.data.sw : 0;\r\n        var height = elem.data.sh ? elem.data.sh : 0;\r\n        var name = elem.data.nm;\r\n        var loopIn, loop_in, loopOut, loop_out, smooth;\r\n        var toWorld,fromWorld,fromComp,toComp,fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer,thisComp,mask,valueAtTime,velocityAtTime;\r\n        var __expression_functions = [];\r\n        if(data.xf) {\r\n            var i, len = data.xf.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\r\n            }\r\n        }\r\n\r\n        var scoped_bm_rt;\r\n        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n        var numKeys = property.kf ? data.k.length : 0;\r\n\r\n        var active = !this.data || this.data.hd !== true;\r\n\r\n        var wiggle = function wiggle(freq,amp){\r\n            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n            var addedAmps = createTypedArray('float32', len);\r\n            freq = 5;\r\n            var iterations = Math.floor(time*freq);\r\n            i = 0;\r\n            j = 0;\r\n            while(i<iterations){\r\n                //var rnd = BMMath.random();\r\n                for(j=0;j<len;j+=1){\r\n                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n                    //addedAmps[j] += -amp + amp*2*rnd;\r\n                }\r\n                i += 1;\r\n            }\r\n            //var rnd2 = BMMath.random();\r\n            var periods = time*freq;\r\n            var perc = periods - Math.floor(periods);\r\n            var arr = createTypedArray('float32', len);\r\n            if(len>1){\r\n                for(j=0;j<len;j+=1){\r\n                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n                }\r\n                return arr;\r\n            } else {\r\n                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n            }\r\n        }.bind(this);\r\n\r\n        if(thisProperty.loopIn) {\r\n            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n            loop_in = loopIn;\r\n        }\r\n\r\n        if(thisProperty.loopOut) {\r\n            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n            loop_out = loopOut;\r\n        }\r\n\r\n        if(thisProperty.smooth) {\r\n            smooth = thisProperty.smooth.bind(thisProperty);\r\n        }\r\n\r\n        function loopInDuration(type,duration){\r\n            return loopIn(type,duration,true);\r\n        }\r\n\r\n        function loopOutDuration(type,duration){\r\n            return loopOut(type,duration,true);\r\n        }\r\n\r\n        if(this.getValueAtTime) {\r\n            valueAtTime = this.getValueAtTime.bind(this);\r\n        }\r\n\r\n        if(this.getVelocityAtTime) {\r\n            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n        }\r\n\r\n        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\r\n        function lookAt(elem1,elem2){\r\n            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n            return [yaw,pitch,0];\r\n        }\r\n\r\n        function easeOut(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function easeIn(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function ease(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function applyEase(fn, t, tMin, tMax, val1, val2) {\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n            var mult = fn(t);\r\n            if($bm_isInstanceOfArray(val1)) {\r\n                var i, len = val1.length;\r\n                var arr = createTypedArray('float32', len);\r\n                for (i = 0; i < len; i += 1) {\r\n                    arr[i] = (val2[i] - val1[i]) * mult + val1[i];\r\n                }\r\n                return arr;\r\n            } else {\r\n                return (val2 - val1) * mult + val1;\r\n            }\r\n        }\r\n\r\n        function nearestKey(time){\r\n            var i, len = data.k.length,index,keyTime;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                index = 0;\r\n                keyTime = 0;\r\n            } else {\r\n                index = -1;\r\n                time *= elem.comp.globalData.frameRate;\r\n                if (time < data.k[0].t) {\r\n                    index = 1;\r\n                    keyTime = data.k[0].t;\r\n                } else {\r\n                    for(i=0;i<len-1;i+=1){\r\n                        if(time === data.k[i].t){\r\n                            index = i + 1;\r\n                            keyTime = data.k[i].t;\r\n                            break;\r\n                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n                                index = i + 2;\r\n                                keyTime = data.k[i+1].t;\r\n                            } else {\r\n                                index = i + 1;\r\n                                keyTime = data.k[i].t;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(index === -1){\r\n                        index = i + 1;\r\n                        keyTime = data.k[i].t;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            var ob = {};\r\n            ob.index = index;\r\n            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n            return ob;\r\n        }\r\n\r\n        function key(ind){\r\n            var ob, i, len;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                throw new Error('The property has no keyframe at index ' + ind);\r\n            }\r\n            ind -= 1;\r\n            ob = {\r\n                time: data.k[ind].t/elem.comp.globalData.frameRate,\r\n                value: []\r\n            };\r\n            var arr;\r\n            if(ind === data.k.length - 1 && !data.k[ind].h){\r\n                arr = (data.k[ind].s || data.k[ind].s === 0) ? data.k[ind-1].s : data.k[ind].e;\r\n            }else{\r\n                arr = data.k[ind].s;\r\n            }\r\n            len = arr.length;\r\n            for(i=0;i<len;i+=1){\r\n                ob[i] = arr[i];\r\n                ob.value[i] = arr[i]\r\n            }\r\n            return ob;\r\n        }\r\n\r\n        function framesToTime(frames, fps) { \r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return frames / fps;\r\n        }\r\n\r\n        function timeToFrames(t, fps) {\r\n            if (!t && t !== 0) {\r\n                t = time;\r\n            }\r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return t * fps;\r\n        }\r\n\r\n        function seedRandom(seed){\r\n            BMMath.seedrandom(randSeed + seed);\r\n        }\r\n\r\n        function sourceRectAtTime() {\r\n            return elem.sourceRectAtTime();\r\n        }\r\n\r\n        function substring(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substring(init)\r\n                }\r\n                return value.substring(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        function substr(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substr(init)\r\n                }\r\n                return value.substr(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        var time, velocity, value, text, textIndex, textTotal, selectorValue;\r\n        var index = elem.data.ind;\r\n        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n        var parent;\r\n        var randSeed = Math.floor(Math.random()*1000000);\r\n        var globalData = elem.globalData;\r\n        function executeExpression(_value) {\r\n            // globalData.pushExpression();\r\n            value = _value;\r\n            if (_needsRandom) {\r\n                seedRandom(randSeed);\r\n            }\r\n            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n                return value;\r\n            }\r\n            if(this.propType === 'textSelector'){\r\n                textIndex = this.textIndex;\r\n                textTotal = this.textTotal;\r\n                selectorValue = this.selectorValue;\r\n            }\r\n            if (!thisLayer) {\r\n                text = elem.layerInterface.text;\r\n                thisLayer = elem.layerInterface;\r\n                thisComp = elem.comp.compInterface;\r\n                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n                toComp = thisLayer.toComp.bind(thisLayer);\r\n                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n                fromCompToSurface = fromComp;\r\n            }\r\n            if (!transform) {\r\n                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n                $bm_transform = transform;\r\n                if(transform) {\r\n                    anchorPoint = transform.anchorPoint;\r\n                    /*position = transform.position;\r\n                    rotation = transform.rotation;\r\n                    scale = transform.scale;*/\r\n                }\r\n            }\r\n            \r\n            if (elemType === 4 && !content) {\r\n                content = thisLayer(\"ADBE Root Vectors Group\");\r\n            }\r\n            if (!effect) {\r\n                effect = thisLayer(4);\r\n            }\r\n            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n            if (hasParent && !parent) {\r\n                parent = elem.hierarchy[0].layerInterface;\r\n            }\r\n            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n            if (needsVelocity) {\r\n                velocity = velocityAtTime(time);\r\n            }\r\n            expression_function();\r\n            this.frameExpressionId = elem.globalData.frameId;\r\n\r\n\r\n            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n            if (scoped_bm_rt.propType === \"shape\") {\r\n                scoped_bm_rt = scoped_bm_rt.v;\r\n            }\r\n            // globalData.popExpression();\r\n            return scoped_bm_rt;\r\n        }\r\n        return executeExpression;\r\n    }\r\n\r\n    ob.initiateExpression = initiateExpression;\r\n    return ob;\r\n}());\r\nvar expressionHelpers = (function(){\r\n\r\n    function searchExpressions(elem,data,prop){\r\n        if(data.x){\r\n            prop.k = true;\r\n            prop.x = true;\r\n            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n        }\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getSpeedAtTime(frameNum) {\r\n        var delta = -0.01;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var speed = 0;\r\n        if(v1.length){\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                speed += Math.pow(v2[i] - v1[i], 2);\r\n            }\r\n            speed = Math.sqrt(speed) * 100;\r\n        } else {\r\n            speed = 0;\r\n        }\r\n        return speed;\r\n    }\r\n\r\n    function getVelocityAtTime(frameNum) {\r\n        if(this.vel !== undefined){\r\n            return this.vel;\r\n        }\r\n        var delta = -0.001;\r\n        //frameNum += this.elem.data.st;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var velocity;\r\n        if(v1.length){\r\n            velocity = createTypedArray('float32', v1.length);\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                //removing frameRate\r\n                //if needed, don't add it here\r\n                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n                velocity[i] = (v2[i] - v1[i])/delta;\r\n            }\r\n        } else {\r\n            velocity = (v2 - v1)/delta;\r\n        }\r\n        return velocity;\r\n    }\r\n\r\n    function getStaticValueAtTime() {\r\n        return this.pv;\r\n    }\r\n\r\n    function setGroupProperty(propertyGroup){\r\n        this.propertyGroup = propertyGroup;\r\n    }\r\n\r\n\treturn {\r\n\t\tsearchExpressions: searchExpressions,\r\n\t\tgetSpeedAtTime: getSpeedAtTime,\r\n\t\tgetVelocityAtTime: getVelocityAtTime,\r\n\t\tgetValueAtTime: getValueAtTime,\r\n\t\tgetStaticValueAtTime: getStaticValueAtTime,\r\n\t\tsetGroupProperty: setGroupProperty,\r\n\t}\r\n}());\r\n(function addPropertyDecorator() {\r\n\r\n    function loopOut(type,duration,durationFlag){\r\n        if(!this.k || !this.keyframes){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n        if(currentFrame<=lastKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, firstKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n                } else {\r\n                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n                }\r\n                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(iterations % 2 !== 0){\r\n                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n                    }\r\n                    return ret;\r\n                }\r\n                return (endV-initV)*repeats + current;\r\n            } else if(type === 'continue'){\r\n                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(lastValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n            }\r\n            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function loopIn(type,duration, durationFlag) {\r\n        if(!this.k){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var firstKeyFrame = keyframes[0].t;\r\n        if(currentFrame>=firstKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, lastKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                lastKeyFrame = keyframes[duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n                } else {\r\n                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n                }\r\n                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n                if(iterations % 2 === 0){\r\n                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return current-(endV-initV)*repeats;\r\n            } else if(type === 'continue'){\r\n                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(firstValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n            }\r\n            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function smooth(width, samples) {\r\n        if (!this.k){\r\n            return this.pv;\r\n        }\r\n        width = (width || 0.4) * 0.5;\r\n        samples = Math.floor(samples || 5);\r\n        if (samples <= 1) {\r\n            return this.pv;\r\n        }\r\n        var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\r\n        var initFrame = currentTime - width;\r\n        var endFrame = currentTime + width;\r\n        var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\r\n        var i = 0, j = 0;\r\n        var value;\r\n        if (this.pv.length) {\r\n            value = createTypedArray('float32', this.pv.length);\r\n        } else {\r\n            value = 0;\r\n        }\r\n        var sampleValue;\r\n        while (i < samples) {\r\n            sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\r\n            if(this.pv.length) {\r\n                for (j = 0; j < this.pv.length; j += 1) {\r\n                    value[j] += sampleValue[j];\r\n                }\r\n            } else {\r\n                value += sampleValue;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(this.pv.length) {\r\n            for (j = 0; j < this.pv.length; j += 1) {\r\n                value[j] /= samples;\r\n            }\r\n        } else {\r\n            value /= samples;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getTransformValueAtTime(time) {\r\n        console.warn('Transform at time not supported');\r\n    }\r\n\r\n    function getTransformStaticValueAtTime(time) {\r\n\r\n    }\r\n\r\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n        var prop = getTransformProperty(elem, data, container);\r\n        if(prop.dynamicProperties.length) {\r\n            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetProp = PropertyFactory.getProp;\r\n    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n        var prop = propertyGetProp(elem,data,type, mult, container);\r\n        //prop.getVelocityAtTime = getVelocityAtTime;\r\n        //prop.loopOut = loopOut;\r\n        //prop.loopIn = loopIn;\r\n        if(prop.kf){\r\n            prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        prop.loopOut = loopOut;\r\n        prop.loopIn = loopIn;\r\n        prop.smooth = smooth;\r\n        prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\r\n        prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\r\n        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n        prop.propertyIndex = data.ix;\r\n        var value = 0;\r\n        if(type !== 0) {\r\n            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n        }\r\n        prop._cachingAtTime = {\r\n            lastFrame: initialDefaultFrame,\r\n            lastIndex: 0,\r\n            value: value\r\n        };\r\n        expressionHelpers.searchExpressions(elem,data,prop);\r\n        if(prop.k){\r\n            container.addDynamicProperty(prop);\r\n        }\r\n\r\n        return prop;\r\n    };\r\n\r\n    function getShapeValueAtTime(frameNum) {\r\n        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n        if (!this._cachingAtTime) {\r\n            this._cachingAtTime = {\r\n                shapeValue: shape_pool.clone(this.pv),\r\n                lastIndex: 0,\r\n                lastTime: initialDefaultFrame\r\n            };\r\n        }\r\n        \r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastTime) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\r\n            this._cachingAtTime.lastTime = frameNum;\r\n            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n        }\r\n        return this._cachingAtTime.shapeValue;\r\n    }\r\n\r\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\r\n    function ShapeExpressions(){}\r\n    ShapeExpressions.prototype = {\r\n        vertices: function(prop, time){\r\n            if (this.k) {\r\n                this.getValue();\r\n            }\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            var i, len = shapePath._length;\r\n            var vertices = shapePath[prop];\r\n            var points = shapePath.v;\r\n            var arr = createSizedArray(len);\r\n            for(i = 0; i < len; i += 1) {\r\n                if(prop === 'i' || prop === 'o') {\r\n                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n                } else {\r\n                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n                }\r\n                \r\n            }\r\n            return arr;\r\n        },\r\n        points: function(time){\r\n            return this.vertices('v', time);\r\n        },\r\n        inTangents: function(time){\r\n            return this.vertices('i', time);\r\n        },\r\n        outTangents: function(time){\r\n            return this.vertices('o', time);\r\n        },\r\n        isClosed: function(){\r\n            return this.v.c;\r\n        },\r\n        pointOnPath: function(perc, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            if(!this._segmentsLength) {\r\n                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n            }\r\n\r\n            var segmentsLength = this._segmentsLength;\r\n            var lengths = segmentsLength.lengths;\r\n            var lengthPos = segmentsLength.totalLength * perc;\r\n            var i = 0, len = lengths.length;\r\n            var j = 0, jLen;\r\n            var accumulatedLength = 0, pt;\r\n            while(i < len) {\r\n                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n                    var initIndex = i;\r\n                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n                    break;\r\n                } else {\r\n                    accumulatedLength += lengths[i].addedLength;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(!pt){\r\n                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n            }\r\n            return pt;\r\n        },\r\n        vectorOnPath: function(perc, time, vectorType){\r\n            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n            var pt1 = this.pointOnPath(perc, time);\r\n            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n            var xLength = pt2[0] - pt1[0];\r\n            var yLength = pt2[1] - pt1[1];\r\n            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n            return unitVector;\r\n        },\r\n        tangentOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'tangent');\r\n        },\r\n        normalOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'normal');\r\n        },\r\n        setGroupProperty: expressionHelpers.setGroupProperty,\r\n        getValueAtTime: expressionHelpers.getStaticValueAtTime\r\n    };\r\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\r\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n        prop.propertyIndex = data.ix;\r\n        prop.lock = false;\r\n        if(type === 3){\r\n            expressionHelpers.searchExpressions(elem,data.pt,prop);\r\n        } else if(type === 4){\r\n            expressionHelpers.searchExpressions(elem,data.ks,prop);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    };\r\n}());\r\n(function addDecorator() {\r\n\r\n    function searchExpressions(){\r\n        if(this.data.d.x){\r\n            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n            this.addEffect(this.getExpressionValue.bind(this));\r\n            return true;\r\n        }\r\n    }\r\n\r\n    TextProperty.prototype.getExpressionValue = function(currentValue, text) {\r\n        var newValue = this.calculateExpression(text);\r\n        if(currentValue.t !== newValue) {\r\n            var newData = {};\r\n            this.copyData(newData, currentValue);\r\n            newData.t = newValue.toString();\r\n            newData.__complete = false;\r\n            return newData;\r\n        }\r\n        return currentValue;\r\n    }\r\n\r\n    TextProperty.prototype.searchProperty = function(){\r\n\r\n        var isKeyframed = this.searchKeyframes();\r\n        var hasExpressions = this.searchExpressions();\r\n        this.kf = isKeyframed || hasExpressions;\r\n        return this.kf;\r\n    };\r\n\r\n    TextProperty.prototype.searchExpressions = searchExpressions;\r\n    \r\n}());\r\nvar ShapeExpressionInterface = (function(){\r\n\r\n    function iterateElements(shapes,view, propertyGroup){\r\n        var arr = [];\r\n        var i, len = shapes ? shapes.length : 0;\r\n        for(i=0;i<len;i+=1){\r\n            if(shapes[i].ty == 'gr'){\r\n                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'fl'){\r\n                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'st'){\r\n                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tm'){\r\n                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tr'){\r\n                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'el'){\r\n                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'sr'){\r\n                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'sh'){\r\n                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rc'){\r\n                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rd'){\r\n                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rp'){\r\n                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n       var interfaces;\r\n       var interfaceFunction = function _interfaceFunction(value){\r\n           var i = 0, len = interfaces.length;\r\n            while(i<len){\r\n                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n                   return interfaces[i];\r\n                }\r\n                i+=1;\r\n            }\r\n            if(typeof value === 'number'){\r\n               return interfaces[value-1];\r\n            }\r\n       };\r\n       interfaceFunction.propertyGroup = function(val){\r\n           if(val === 1){\r\n               return interfaceFunction;\r\n           } else{\r\n               return propertyGroup(val-1);\r\n           }\r\n       };\r\n       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n       interfaceFunction.numProperties = interfaces.length;\r\n       interfaceFunction.propertyIndex = shape.cix;\r\n       interfaceFunction._name = shape.nm;\r\n\r\n       return interfaceFunction;\r\n   }\r\n\r\n    function groupInterfaceFactory(shape,view, propertyGroup){\r\n        var interfaceFunction = function _interfaceFunction(value){\r\n            switch(value){\r\n                case 'ADBE Vectors Group':\r\n                case 'Contents':\r\n                case 2:\r\n                    return interfaceFunction.content;\r\n                //Not necessary for now. Keeping them here in case a new case appears\r\n                //case 'ADBE Vector Transform Group':\r\n                //case 3:\r\n                default:\r\n                    return interfaceFunction.transform;\r\n            }\r\n        };\r\n        interfaceFunction.propertyGroup = function(val){\r\n            if(val === 1){\r\n                return interfaceFunction;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        };\r\n        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n        interfaceFunction.content = content;\r\n        interfaceFunction.transform = transformInterface;\r\n        Object.defineProperty(interfaceFunction, '_name', {\r\n            get: function(){\r\n                return shape.nm;\r\n            }\r\n        });\r\n        //interfaceFunction.content = interfaceFunction;\r\n        interfaceFunction.numProperties = shape.np;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.nm = shape.nm;\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function fillInterfaceFactory(shape,view,propertyGroup){\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(propertyGroup);\r\n        view.o.setGroupProperty(propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val === 1){\r\n                return ob;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        }\r\n        function _dashPropertyGroup(val){\r\n            if(val === 1){\r\n                return dashOb;\r\n            } else{\r\n                return _propertyGroup(val-1);\r\n            }\r\n        }\r\n        function addPropertyToDashOb(i) {\r\n            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n                get: ExpressionPropertyInterface(view.d.dataProps[i].p)\r\n            });\r\n        }\r\n        var i, len = shape.d ? shape.d.length : 0;\r\n        var dashOb = {};\r\n        for (i = 0; i < len; i += 1) {\r\n            addPropertyToDashOb(i);\r\n            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n                return interfaceFunction.strokeWidth;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            'strokeWidth': {\r\n                get: ExpressionPropertyInterface(view.w)\r\n            },\r\n            'dash': {\r\n                get: function() {\r\n                    return dashOb;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n        view.w.setGroupProperty(_propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function trimInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        view.s.setGroupProperty(_propertyGroup);\r\n        view.e.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n                return interfaceFunction.end;\r\n            }\r\n            if(val === shape.s.ix){\r\n                return interfaceFunction.start;\r\n            }\r\n            if(val === shape.o.ix){\r\n                return interfaceFunction.offset;\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'start': {\r\n                get: ExpressionPropertyInterface(view.s)\r\n            },\r\n            'end': {\r\n                get: ExpressionPropertyInterface(view.e)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function transformInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n        if(view.transform.mProps.sk){\r\n            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n        }\r\n        view.transform.op.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.a.ix === value || value === 'Anchor Point'){\r\n                return interfaceFunction.anchorPoint;\r\n            }\r\n            if(shape.o.ix === value || value === 'Opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n            if(shape.p.ix === value || value === 'Position'){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.s.ix === value || value === 'Scale'){\r\n                return interfaceFunction.scale;\r\n            }\r\n            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n                return interfaceFunction.skew;\r\n            }\r\n            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n                return interfaceFunction.skewAxis;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.o)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.p)\r\n            },\r\n            'anchorPoint': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.a)\r\n            },\r\n            'scale': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.s)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.r)\r\n            },\r\n            'skew': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sk)\r\n            },\r\n            'skewAxis': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sa)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.ty = 'tr';\r\n        interfaceFunction.mn = shape.mn;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.s.ix === value){\r\n                return interfaceFunction.size;\r\n            }\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function starInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.or.setGroupProperty(_propertyGroup);\r\n        prop.os.setGroupProperty(_propertyGroup);\r\n        prop.pt.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n        if(shape.ir){\r\n            prop.ir.setGroupProperty(_propertyGroup);\r\n            prop.is.setGroupProperty(_propertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.pt.ix === value){\r\n                return interfaceFunction.points;\r\n            }\r\n            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n                return interfaceFunction.outerRadius;\r\n            }\r\n            if(shape.os.ix === value){\r\n                return interfaceFunction.outerRoundness;\r\n            }\r\n            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n                return interfaceFunction.innerRadius;\r\n            }\r\n            if(shape.is && shape.is.ix === value){\r\n                return interfaceFunction.innerRoundness;\r\n            }\r\n\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'points': {\r\n                get: ExpressionPropertyInterface(prop.pt)\r\n            },\r\n            'outerRadius': {\r\n                get: ExpressionPropertyInterface(prop.or)\r\n            },\r\n            'outerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.os)\r\n            },\r\n            'innerRadius': {\r\n                get: ExpressionPropertyInterface(prop.ir)\r\n            },\r\n            'innerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.is)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function rectInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.roundness;\r\n            }\r\n            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n                return interfaceFunction.size;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'roundness': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.rd.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n                return interfaceFunction.radius;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'radius': {\r\n                get: ExpressionPropertyInterface(prop.rd)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.c.setGroupProperty(_propertyGroup);\r\n        prop.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.c.ix === value || 'Copies' === value){\r\n                return interfaceFunction.copies;\r\n            } else if(shape.o.ix === value || 'Offset' === value){\r\n                return interfaceFunction.offset;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'copies': {\r\n                get: ExpressionPropertyInterface(prop.c)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(prop.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function pathInterfaceFactory(shape,view,propertyGroup){\r\n        var prop = view.sh;\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        prop.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n                return interfaceFunction.path;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'path': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            'shape': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'ix': { value: shape.ix },\r\n            'mn': { value: shape.mn }\r\n        });\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return function(shapes,view,propertyGroup) {\r\n        var interfaces;\r\n        function _interfaceFunction(value){\r\n            if(typeof value === 'number'){\r\n                return interfaces[value-1];\r\n            } else {\r\n                var i = 0, len = interfaces.length;\r\n                while(i<len){\r\n                    if(interfaces[i]._name === value){\r\n                        return interfaces[i];\r\n                    }\r\n                    i+=1;\r\n                }\r\n            }\r\n        }\r\n        _interfaceFunction.propertyGroup = propertyGroup;\r\n        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n        _interfaceFunction.numProperties = interfaces.length;\r\n        return _interfaceFunction;\r\n    };\r\n}());\r\n\r\nvar TextExpressionInterface = (function(){\r\n\treturn function(elem){\r\n        var _prevValue, _sourceText;\r\n        function _thisLayerFunction(){\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n            get: function(){\r\n                elem.textProperty.getValue()\r\n                var stringValue = elem.textProperty.currentData.t;\r\n                if(stringValue !== _prevValue) {\r\n                    elem.textProperty.currentData.t = _prevValue;\r\n                    _sourceText = new String(stringValue);\r\n                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n                }\r\n                return _sourceText;\r\n            }\r\n        });\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar LayerExpressionInterface = (function (){\r\n    function toWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n        }\r\n        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n    }\r\n    function fromWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n    function fromComp(arr){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n\r\n    function sampleImage() {\r\n        return [1,1,1,1];\r\n    }\r\n\r\n\r\n    return function(elem){\r\n\r\n        var transformInterface;\r\n\r\n        function _registerMaskInterface(maskManager){\r\n            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n        }\r\n        function _registerEffectsInterface(effects){\r\n            _thisLayerFunction.effect = effects;\r\n        }\r\n\r\n        function _thisLayerFunction(name){\r\n            switch(name){\r\n                case \"ADBE Root Vectors Group\":\r\n                case \"Contents\":\r\n                case 2:\r\n                    return _thisLayerFunction.shapeInterface;\r\n                case 1:\r\n                case 6:\r\n                case \"Transform\":\r\n                case \"transform\":\r\n                case \"ADBE Transform Group\":\r\n                    return transformInterface;\r\n                case 4:\r\n                case \"ADBE Effect Parade\":\r\n                case \"effects\":\r\n                case \"Effects\":\r\n                    return _thisLayerFunction.effect;\r\n            }\r\n        }\r\n        _thisLayerFunction.toWorld = toWorld;\r\n        _thisLayerFunction.fromWorld = fromWorld;\r\n        _thisLayerFunction.toComp = toWorld;\r\n        _thisLayerFunction.fromComp = fromComp;\r\n        _thisLayerFunction.sampleImage = sampleImage;\r\n        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n        _thisLayerFunction._elem = elem;\r\n        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n        Object.defineProperties(_thisLayerFunction,{\r\n            hasParent: {\r\n                get: function(){\r\n                    return elem.hierarchy.length;\r\n                }\r\n            },\r\n            parent: {\r\n                get: function(){\r\n                    return elem.hierarchy[0].layerInterface;\r\n                }\r\n            },\r\n            rotation: getDescriptor(transformInterface, 'rotation'),\r\n            scale: getDescriptor(transformInterface, 'scale'),\r\n            position: getDescriptor(transformInterface, 'position'),\r\n            opacity: getDescriptor(transformInterface, 'opacity'),\r\n            anchorPoint: anchorPointDescriptor,\r\n            anchor_point: anchorPointDescriptor,\r\n            transform: {\r\n                get: function () {\r\n                    return transformInterface;\r\n                }\r\n            },\r\n            active: {\r\n                get: function(){\r\n                    return elem.isInRange;\r\n                }\r\n            }\r\n        });\r\n\r\n        _thisLayerFunction.startTime = elem.data.st;\r\n        _thisLayerFunction.index = elem.data.ind;\r\n        _thisLayerFunction.source = elem.data.refId;\r\n        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n        _thisLayerFunction.inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction.outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction._name = elem.data.nm;\r\n\r\n        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\n\r\nvar CompExpressionInterface = (function (){\r\n    return function(comp){\r\n        function _thisLayerFunction(name){\r\n            var i=0, len = comp.layers.length;\r\n            while(i<len){\r\n                if(comp.layers[i].nm === name || comp.layers[i].ind === name){\r\n                    return comp.elements[i].layerInterface;\r\n                }\r\n                i += 1;\r\n            }\r\n            return null;\r\n            //return {active:false};\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"_name\", { value:comp.data.nm });\r\n        _thisLayerFunction.layer = _thisLayerFunction;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\r\n        _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.frameDuration = 1/comp.globalData.frameRate;\r\n        _thisLayerFunction.displayStartTime = 0;\r\n        _thisLayerFunction.numLayers = comp.layers.length;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar TransformExpressionInterface = (function (){\r\n    return function(transform){\r\n        function _thisFunction(name){\r\n            switch(name){\r\n                case \"scale\":\r\n                case \"Scale\":\r\n                case \"ADBE Scale\":\r\n                case 6:\r\n                    return _thisFunction.scale;\r\n                case \"rotation\":\r\n                case \"Rotation\":\r\n                case \"ADBE Rotation\":\r\n                case \"ADBE Rotate Z\":\r\n                case 10:\r\n                    return _thisFunction.rotation;\r\n                case \"ADBE Rotate X\":\r\n                    return _thisFunction.xRotation;\r\n                case \"ADBE Rotate Y\":\r\n                    return _thisFunction.yRotation;\r\n                case \"position\":\r\n                case \"Position\":\r\n                case \"ADBE Position\":\r\n                case 2:\r\n                    return _thisFunction.position;\r\n                case 'ADBE Position_0':\r\n                    return _thisFunction.xPosition;\r\n                case 'ADBE Position_1':\r\n                    return _thisFunction.yPosition;\r\n                case 'ADBE Position_2':\r\n                    return _thisFunction.zPosition;\r\n                case \"anchorPoint\":\r\n                case \"AnchorPoint\":\r\n                case \"Anchor Point\":\r\n                case \"ADBE AnchorPoint\":\r\n                case 1:\r\n                    return _thisFunction.anchorPoint;\r\n                case \"opacity\":\r\n                case \"Opacity\":\r\n                case 11:\r\n                    return _thisFunction.opacity;\r\n            }\r\n        }\r\n\r\n        Object.defineProperty(_thisFunction, \"rotation\", {\r\n            get: ExpressionPropertyInterface(transform.r || transform.rz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rz || transform.r)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rx)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n            get: ExpressionPropertyInterface(transform.ry)\r\n        });\r\n        Object.defineProperty(_thisFunction, \"scale\", {\r\n            get: ExpressionPropertyInterface(transform.s)\r\n        });\r\n\r\n        if(transform.p) {\r\n            var _transformFactory = ExpressionPropertyInterface(transform.p);\r\n        }\r\n        Object.defineProperty(_thisFunction, \"position\", {\r\n            get: function () {\r\n                if(transform.p) {\r\n                    return _transformFactory();\r\n                } else {\r\n                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n            get: ExpressionPropertyInterface(transform.px)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n            get: ExpressionPropertyInterface(transform.py)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n            get: ExpressionPropertyInterface(transform.pz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n            get: ExpressionPropertyInterface(transform.a)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"opacity\", {\r\n            get: ExpressionPropertyInterface(transform.o)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skew\", {\r\n            get: ExpressionPropertyInterface(transform.sk)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n            get: ExpressionPropertyInterface(transform.sa)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"orientation\", {\r\n            get: ExpressionPropertyInterface(transform.or)\r\n        });\r\n\r\n        return _thisFunction;\r\n    };\r\n}());\r\nvar ProjectInterface = (function (){\r\n\r\n    function registerComposition(comp){\r\n        this.compositions.push(comp);\r\n    }\r\n\r\n    return function(){\r\n        function _thisProjectFunction(name){\r\n            var i = 0, len = this.compositions.length;\r\n            while(i<len){\r\n                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n                    if(this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\r\n                        this.compositions[i].prepareFrame(this.currentFrame);\r\n                    }\r\n                    return this.compositions[i].compInterface;\r\n                }\r\n                i+=1;\r\n            }\r\n        }\r\n\r\n        _thisProjectFunction.compositions = [];\r\n        _thisProjectFunction.currentFrame = 0;\r\n\r\n        _thisProjectFunction.registerComposition = registerComposition;\r\n\r\n\r\n\r\n        return _thisProjectFunction;\r\n    };\r\n}());\r\nvar EffectsExpressionInterface = (function (){\r\n    var ob = {\r\n        createEffectsInterface: createEffectsInterface\r\n    };\r\n\r\n    function createEffectsInterface(elem, propertyGroup){\r\n        if(elem.effectsManager){\r\n\r\n            var effectElements = [];\r\n            var effectsData = elem.data.ef;\r\n            var i, len = elem.effectsManager.effectElements.length;\r\n            for(i=0;i<len;i+=1){\r\n                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n            }\r\n\r\n            return function(name){\r\n                var effects = elem.data.ef || [], i = 0, len = effects.length;\r\n                while(i<len) {\r\n                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                        return effectElements[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    function createGroupInterface(data,elements, propertyGroup, elem){\r\n        var effectElements = [];\r\n        var i, len = data.ef.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(data.ef[i].ty === 5){\r\n                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n            } else {\r\n                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n            }\r\n        }\r\n\r\n        function _propertyGroup(val) {\r\n            if(val === 1){\r\n               return groupInterface;\r\n            } else{\r\n               return propertyGroup(val-1);\r\n            }\r\n        }\r\n\r\n        var groupInterface = function(name){\r\n            var effects = data.ef, i = 0, len = effects.length;\r\n            while(i<len) {\r\n                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                    if(effects[i].ty === 5){\r\n                        return effectElements[i];\r\n                    } else {\r\n                        return effectElements[i]();\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return effectElements[0]();\r\n        };\r\n\r\n        groupInterface.propertyGroup = _propertyGroup;\r\n\r\n        if(data.mn === 'ADBE Color Control'){\r\n            Object.defineProperty(groupInterface, 'color', {\r\n                get: function(){\r\n                    return effectElements[0]();\r\n                }\r\n            });\r\n        }\r\n        Object.defineProperty(groupInterface, 'numProperties', {\r\n            get: function(){\r\n                return data.np;\r\n            }\r\n        });\r\n        groupInterface.active = groupInterface.enabled = data.en !== 0;\r\n        return groupInterface;\r\n    }\r\n\r\n    function createValueInterface(element, type, elem, propertyGroup){\r\n        var expressionProperty = ExpressionPropertyInterface(element.p);\r\n        function interfaceFunction(){\r\n            if(type === 10){\r\n                return elem.comp.compInterface(element.p.v);\r\n            }\r\n            return expressionProperty();\r\n        }\r\n\r\n        if(element.p.setGroupProperty) {\r\n            element.p.setGroupProperty(propertyGroup);\r\n        }\r\n\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return ob;\r\n\r\n}());\r\nvar MaskManagerInterface = (function(){\r\n\r\n\tfunction MaskInterface(mask, data){\r\n\t\tthis._mask = mask;\r\n\t\tthis._data = data;\r\n\t}\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n        get: function(){\r\n                if(this._mask.prop.k){\r\n                    this._mask.prop.getValue();\r\n                }\r\n                return this._mask.prop;\r\n            }\r\n        });\r\n\r\n\tvar MaskManager = function(maskManager, elem){\r\n\t\tvar _maskManager = maskManager;\r\n\t\tvar _elem = elem;\r\n\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\tvar i, len = maskManager.viewData.length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t}\r\n\r\n\t\tvar maskFunction = function(name){\r\n\t\t\ti = 0;\r\n\t\t    while(i<len){\r\n\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t            return _masksInterfaces[i];\r\n\t\t        }\r\n\t\t        i += 1;\r\n\t\t    }\r\n\t\t};\r\n\t\treturn maskFunction;\r\n\t};\r\n\treturn MaskManager;\r\n}());\r\n\r\nvar ExpressionPropertyInterface = (function() {\r\n\r\n    var defaultUnidimensionalValue = {pv:0, v:0, mult: 1}\r\n    var defaultMultidimensionalValue = {pv:[0,0,0], v:[0,0,0], mult: 1}\r\n\r\n    function completeProperty(expressionValue, property, type) {\r\n        Object.defineProperty(expressionValue, 'velocity', {\r\n            get: function(){\r\n                return property.getVelocityAtTime(property.comp.currentFrame);\r\n            }\r\n        });\r\n        expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\r\n        expressionValue.key = function(pos) {\r\n            if (!expressionValue.numKeys) {\r\n                return 0;\r\n            } else {\r\n                var value = '';\r\n                if ('s' in property.keyframes[pos-1]) {\r\n                    value = property.keyframes[pos-1].s;\r\n                } else if ('e' in property.keyframes[pos-2]) {\r\n                    value = property.keyframes[pos-2].e;\r\n                } else {\r\n                    value = property.keyframes[pos-2].s;\r\n                }\r\n                var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);\r\n                valueProp.time = property.keyframes[pos-1].t / property.elem.comp.globalData.frameRate;\r\n                return valueProp;\r\n            }\r\n        };\r\n        expressionValue.valueAtTime = property.getValueAtTime;\r\n        expressionValue.speedAtTime = property.getSpeedAtTime;\r\n        expressionValue.velocityAtTime = property.getVelocityAtTime;\r\n        expressionValue.propertyGroup = property.propertyGroup;\r\n    }\r\n\r\n    function UnidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultUnidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var val = property.pv * mult;\r\n        var expressionValue = new Number(val);\r\n        expressionValue.value = val;\r\n        completeProperty(expressionValue, property, 'unidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            val = property.v * mult;\r\n            if(expressionValue.value !== val) {\r\n                expressionValue = new Number(val);\r\n                expressionValue.value = val;\r\n                completeProperty(expressionValue, property, 'unidimensional');\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    function MultidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultMultidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var len = property.pv.length;\r\n        var expressionValue = createTypedArray('float32', len);\r\n        var arrValue = createTypedArray('float32', len);\r\n        expressionValue.value = arrValue;\r\n        completeProperty(expressionValue, property, 'multidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            for (var i = 0; i < len; i += 1) {\r\n                expressionValue[i] = arrValue[i] = property.v[i] * mult;\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    //TODO: try to avoid using this getter\r\n    function defaultGetter() {\r\n        return defaultUnidimensionalValue;\r\n    }\r\n    \r\n    return function(property) {\r\n        if(!property) {\r\n            return defaultGetter;\r\n        } else if (property.propType === 'unidimensional') {\r\n            return UnidimensionalPropertyInterface(property);\r\n        } else {\r\n            return MultidimensionalPropertyInterface(property);\r\n        }\r\n    }\r\n}());\r\n\r\n(function(){\r\n\r\n    var TextExpressionSelectorProp = (function(){\r\n\r\n        function getValueProxy(index,total){\r\n            this.textIndex = index+1;\r\n            this.textTotal = total;\r\n            this.v = this.getValue() * this.mult;\r\n            return this.v;\r\n        }\r\n\r\n        return function TextExpressionSelectorProp(elem,data){\r\n            this.pv = 1;\r\n            this.comp = elem.comp;\r\n            this.elem = elem;\r\n            this.mult = 0.01;\r\n            this.propType = 'textSelector';\r\n            this.textTotal = data.totalChars;\r\n            this.selectorValue = 100;\r\n            this.lastValue = [1,1,1];\r\n            this.k = true;\r\n            this.x = true;\r\n            this.getValue = ExpressionManager.initiateExpression.bind(this)(elem,data,this);\r\n            this.getMult = getValueProxy;\r\n            this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;\r\n            if(this.kf){\r\n                this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);\r\n            } else {\r\n                this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);\r\n            }\r\n            this.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        };\r\n    }());\r\n\r\n\tvar propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n\tTextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n\t    if(data.t === 1){\r\n\t        return new TextExpressionSelectorProp(elem, data,arr);\r\n\t    } else {\r\n\t        return propertyGetTextProp(elem,data,arr);\r\n\t    }\r\n\t};\r\n}());\r\nfunction SliderEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction AngleEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction ColorEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction PointEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction LayerIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction MaskIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction CheckboxEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction NoValueEffect(){\r\n    this.p = {};\r\n}\r\nfunction EffectsManager(){}\r\nfunction EffectsManager(data,element){\r\n    var effects = data.ef || [];\r\n    this.effectElements = [];\r\n    var i,len = effects.length;\r\n    var effectItem;\r\n    for(i=0;i<len;i++) {\r\n        effectItem = new GroupEffect(effects[i],element);\r\n        this.effectElements.push(effectItem);\r\n    }\r\n}\r\n\r\nfunction GroupEffect(data,element){\r\n    this.init(data,element);\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], GroupEffect);\r\n\r\nGroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\r\n\r\nGroupEffect.prototype.init = function(data,element){\r\n    this.data = data;\r\n    this.effectElements = [];\r\n    this.initDynamicPropertyContainer(element);\r\n    var i, len = this.data.ef.length;\r\n    var eff, effects = this.data.ef;\r\n    for(i=0;i<len;i+=1){\r\n        eff = null;\r\n        switch(effects[i].ty){\r\n            case 0:\r\n                eff = new SliderEffect(effects[i],element,this);\r\n                break;\r\n            case 1:\r\n                eff = new AngleEffect(effects[i],element,this);\r\n                break;\r\n            case 2:\r\n                eff = new ColorEffect(effects[i],element,this);\r\n                break;\r\n            case 3:\r\n                eff = new PointEffect(effects[i],element,this);\r\n                break;\r\n            case 4:\r\n            case 7:\r\n                eff = new CheckboxEffect(effects[i],element,this);\r\n                break;\r\n            case 10:\r\n                eff = new LayerIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 11:\r\n                eff = new MaskIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 5:\r\n                eff = new EffectsManager(effects[i],element,this);\r\n                break;\r\n            //case 6:\r\n            default:\r\n                eff = new NoValueEffect(effects[i],element,this);\r\n                break;\r\n        }\r\n        if(eff) {\r\n            this.effectElements.push(eff);\r\n        }\r\n    }\r\n};\r\n\r\n    var lottiejs = {};\r\n\r\n    var _isFrozen = false;\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n\r\n    lottiejs.play = animationManager.play;\r\n    lottiejs.pause = animationManager.pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = animationManager.togglePause;\r\n    lottiejs.setSpeed = animationManager.setSpeed;\r\n    lottiejs.setDirection = animationManager.setDirection;\r\n    lottiejs.stop = animationManager.stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = animationManager.registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = animationManager.resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = animationManager.goToAndStop;\r\n    lottiejs.destroy = animationManager.destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.freeze = animationManager.freeze;\r\n    lottiejs.unfreeze = animationManager.unfreeze;\r\n    lottiejs.getRegisteredAnimations = animationManager.getRegisteredAnimations;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.5.2';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"lottie\",staticClass:\"lottie\",class:_vm.className})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vueLottieWeb.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 19c8ec35f51e2eccbc3e","<template>\n    <div class=\"lottie\" :class=\"className\" ref=\"lottie\"></div>\n</template>\n\n<script>\nimport lottie from 'lottie-web';\n\nexport default {\n    name: \"vue-lottie-web\",\n    data() {\n        return {\n            instance: false\n        }\n    },\n\n    // 父级注册lottie动画参数\n    // getLottieInstance 为子组件抛出动画对象的事件 由父组件获取使用\n    props: {\n        className: {\n            type: String,\n            default: ''\n        },\n\n        renderer: {\n            type: String,\n            default: 'canvas'\n        },\n        loop: {\n            type: Boolean,\n            default: true\n        },\n        autoplay: {\n            type: Boolean,\n            default: true\n        },\n\n        animationData: {\n            type: Object | String,\n            default: ''\n        },\n        path: {\n            type: String,\n            default: ''\n        }\n    },\n\n    methods: {\n        // 扩展方法\n        extendMethods(instance) {\n            // 自定义重播动画方法\n            instance.customReplay = () => {\n                instance.stop();\n                setTimeout(() => {\n                    instance.play();\n                });\n            }\n        },\n        // 透传注册事件\n        transEvents(instance) {\n            const events = ['onComplete', 'onLoopComplete', 'onEnterFrame', 'onSegmentStart'];\n\n            events.forEach(keyName => {\n                instance[keyName] = e => this.$emit(keyName, e);\n            })\n        }\n    },\n\n    mounted() {\n        // 获取lottie参数 生成对象 并且扩展方法\n        const {renderer, loop, autoplay, animationData, path} = this;\n\n        const paramsInfo = {\n            container: this.$refs.lottie,\n            renderer,\n            autoplay,\n            loop\n        }\n\n        if (animationData) {\n            paramsInfo.animationData = animationData;\n        } else if (path) {\n            paramsInfo.path = path;\n        } else {\n            throw new Error(\"Check Lottie Component's Props\");\n        }\n\n        // lottie实例生成\n        this.instance = lottie.loadAnimation(paramsInfo);\n\n        // 自定义扩展方法与透传注册事件\n        this.extendMethods(this.instance);\n        this.transEvents(this.instance);\n\n        // 抛出getLottieInstance事件 父节点获取动画对象\n        this.$emit('getLottieInstance', this.instance);\n    }\n}\n</script>\n\n<style>\n/*清除空节点照成canvas底部的空高度*/\n.lottie {\n    font-size: 0;\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// src/VueLottieWeb/VueLottieWeb.vue","import Lottie from './VueLottieWeb';\n\n// Vue.js 的插件应当有一个公开方法 install 。第一个参数是 Vue 构造器，第二个参数是一个可选的选项对象\n// 参考：https://cn.vuejs.org/v2/guide/plugins.html#%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6\n\n//注册组件\nLottie.install = Vue => Vue.component(Lottie.name, Lottie);\n\nif (typeof window !== 'undefined' && window.Vue) {\n    Vue.use(Lottie);\n}\n\nexport default Lottie;\n\n\n// WEBPACK FOOTER //\n// ./src/VueLottieWeb/index.js","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-681021d8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./VueLottieWeb.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./VueLottieWeb.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./VueLottieWeb.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-681021d8\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./VueLottieWeb.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/VueLottieWeb/VueLottieWeb.vue\n// module id = 2\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-681021d8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./VueLottieWeb.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"6a3dd40a\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-681021d8\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/VueLottieWeb/VueLottieWeb.vue\n// module id = 3\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".lottie{font-size:0}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-681021d8\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/VueLottieWeb/VueLottieWeb.vue\n// module id = 4\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 5\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/addStylesClient.js\n// module id = 6\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/listToStyles.js\n// module id = 7\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = 8\n// module chunks = 0","(typeof navigator !== \"undefined\") && (function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nvar createElementID = (function(){\r\n    var _count = 0;\r\n    return function createID() {\r\n        return '__lottie_element_' + ++_count\r\n    }\r\n}())\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\nfunction DynamicPropertyContainer(){};\r\nDynamicPropertyContainer.prototype = {\r\n\taddDynamicProperty: function(prop) {\r\n\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t        this.dynamicProperties.push(prop);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    \tthis._isAnimated = true;\r\n\t    }\r\n\t},\r\n\titerateDynamicProperties: function(){\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf) {\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t},\r\n\tinitDynamicPropertyContainer: function(container){\r\n\t    this.container = container;\r\n\t    this.dynamicProperties = [];\r\n\t    this._mdf = false;\r\n\t    this._isAnimated = false;\r\n\t}\r\n}\r\nvar getBlendMode = (function() {\r\n\r\n\tvar blendModeEnums = {\r\n        0:'source-over',\r\n        1:'multiply',\r\n        2:'screen',\r\n        3:'overlay',\r\n        4:'darken',\r\n        5:'lighten',\r\n        6:'color-dodge',\r\n        7:'color-burn',\r\n        8:'hard-light',\r\n        9:'soft-light',\r\n        10:'difference',\r\n        11:'exclusion',\r\n        12:'hue',\r\n        13:'saturation',\r\n        14:'color',\r\n        15:'luminosity'\r\n    }\r\n\r\n\treturn function(mode) {\r\n\t\treturn blendModeEnums[mode] || '';\r\n\t}\r\n}())\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        if(!sz && sz !== 0) {\r\n            sz = 1;\r\n        }\r\n        if(sx === 1 && sy === 1 && sz === 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        var _p = this.props;\r\n        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function roundMatrixProperty(val) {\r\n        var v = 10000;\r\n        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n            return _rnd(val * v) / v;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var props = this.props;\r\n        var _a = roundMatrixProperty(props[0]);\r\n        var _b = roundMatrixProperty(props[1]);\r\n        var _c = roundMatrixProperty(props[4]);\r\n        var _d = roundMatrixProperty(props[5]);\r\n        var _e = roundMatrixProperty(props[12]);\r\n        var _f = roundMatrixProperty(props[13]);\r\n        return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.001 && det1 < 0.001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed && len){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (pt1, pt2, pt3, pt4){\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(!storedData[bezierName]){\r\n                var curveSegments = defaultCurveSegments;\r\n                var k, i, len;\r\n                var ptCoord,perc,addedLength = 0;\r\n                var ptDistance;\r\n                var point,lastPoint = null;\r\n                if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                    curveSegments = 2;\r\n                }\r\n                var bezierData = new BezierData(curveSegments);\r\n                len = pt3.length;\r\n                for (k = 0; k < curveSegments; k += 1) {\r\n                    point = createSizedArray(len);\r\n                    perc = k / (curveSegments - 1);\r\n                    ptDistance = 0;\r\n                    for (i = 0; i < len; i += 1){\r\n                        ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                        point[i] = ptCoord;\r\n                        if(lastPoint !== null){\r\n                            ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                        }\r\n                    }\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                    bezierData.points[k] = new PointData(ptDistance, point);\r\n                    lastPoint = point;\r\n                }\r\n                bezierData.segmentLength = addedLength;\r\n                storedData[bezierName] = bezierData;\r\n            }\r\n            return storedData[bezierName];\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3;\r\n        var t0t0u0_3 = t0*t0*u0*3;\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(this.checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.isLoaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        //tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.setAttribute('font-family', fontData.fFamily);\r\n        tHelper.setAttribute('font-style', fontData.fStyle);\r\n        tHelper.setAttribute('font-weight', fontData.fWeight);\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.setAttribute('class', fontData.fClass);\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;\r\n        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n        return tHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.isLoaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.isLoaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        var _pendingFonts = len;\r\n        for(i=0; i<len; i+= 1){\r\n            var shouldLoadFont = true;\r\n            var loadedSelector;\r\n            var j;\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n                _pendingFonts -= 1;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"'+ fontArr[i].fFamily +'\"], style[f-origin=\"3\"][f-family=\"'+ fontArr[i].fFamily +'\"]');\r\n\r\n                if (loadedSelector.length > 0) {\r\n                    shouldLoadFont = false;\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var s = createTag('style');\r\n                    s.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    s.setAttribute('f-origin', fontArr[i].origin);\r\n                    s.setAttribute('f-family', fontArr[i].fFamily);\r\n                    s.type = \"text/css\";\r\n                    s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                    defs.appendChild(s);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var l = createTag('link');\r\n                    l.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    l.setAttribute('f-origin', fontArr[i].origin);\r\n                    l.type = \"text/css\";\r\n                    l.rel = \"stylesheet\";\r\n                    l.href = fontArr[i].fPath;\r\n                    document.body.appendChild(l);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (fontArr[i].fPath === loadedSelector[j].src) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var sc = createTag('link');\r\n                    sc.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    sc.setAttribute('f-origin', fontArr[i].origin);\r\n                    sc.setAttribute('rel','stylesheet');\r\n                    sc.setAttribute('href',fontArr[i].fPath);\r\n                    defs.appendChild(sc);\r\n                }\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            fontArr[i].cache = {};\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        if (_pendingFonts === 0) {\r\n            this.isLoaded = true;\r\n        } else {\r\n            //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\r\n            //Adding this timeout seems to fix it\r\n           setTimeout(this.checkLoadedFonts.bind(this), 100);\r\n        }\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size) {\r\n        var fontData = this.getFontByName(fontName);\r\n        var index = char.charCodeAt(0);\r\n        if(!fontData.cache[index + 1]) {\r\n            var tHelper = fontData.helper;\r\n            //Canvas version\r\n            //fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n            //SVG version\r\n            //console.log(tHelper.getBBox().width)\r\n            if (char === ' ') {\r\n                tHelper.textContent = '|' + char + '|';\r\n                var doubleSize = tHelper.getComputedTextLength();\r\n                tHelper.textContent = '||';\r\n                var singleSize = tHelper.getComputedTextLength();\r\n                fontData.cache[index + 1] = (doubleSize - singleSize)/100;\r\n            } else {\r\n                tHelper.textContent = char;\r\n                fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;\r\n            }\r\n        }\r\n        return fontData.cache[index + 1] * size;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return this.fonts[0];\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.isLoaded;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.isLoaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n    Font.prototype.checkLoadedFonts = checkLoadedFonts;\r\n    Font.prototype.loaded = loaded;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n    var math_abs = Math.abs;\r\n\r\n    function interpolateValue(frameNum, caching) {\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if (this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', this.pv.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length - 1, flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while (flag) {\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i + 1];\r\n            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if ((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if (i < len - 1){\r\n                i += 1;\r\n            } else {\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen, perc, jLen, j, fnc;\r\n        var nextKeyTime = nextKeyData.t - offsetTime;\r\n        var keyTime = keyData.t - offsetTime;\r\n        var endValue;\r\n        if (keyData.to) {\r\n            if (!keyData.bezierData) {\r\n                keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if (frameNum >= nextKeyTime || frameNum < keyTime) {\r\n                var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for (k = 0; k < kLen; k += 1) {\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                // caching._lastKeyframeIndex = -1;\r\n            } else {\r\n                if (keyData.__fnct) {\r\n                    fnc = keyData.__fnct;\r\n                } else {\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while (flag) {\r\n                    addedLength += bezierData.points[j].partialLength;\r\n                    if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\r\n                        segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if (j < jLen - 1){\r\n                        j += 1;\r\n                    } else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastKeyframeIndex = i;\r\n            }\r\n        } else {\r\n            var outX, outY, inX, inY, keyValue;\r\n            len = keyData.s.length;\r\n            endValue = nextKeyData.s || keyData.e;\r\n            if (this.sh && keyData.h !== 1) {\r\n                if (frameNum >= nextKeyTime) {\r\n                    newValue[0] = endValue[0];\r\n                    newValue[1] = endValue[1];\r\n                    newValue[2] = endValue[2];\r\n                } else if (frameNum <= keyTime) {\r\n                    newValue[0] = keyData.s[0];\r\n                    newValue[1] = keyData.s[1];\r\n                    newValue[2] = keyData.s[2];\r\n                } else {\r\n                    var quatStart = createQuaternion(keyData.s);\r\n                    var quatEnd = createQuaternion(endValue);\r\n                    var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\r\n                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n                }\r\n                \r\n            } else {\r\n                for(i = 0; i < len; i += 1) {\r\n                    if (keyData.h !== 1) {\r\n                        if (frameNum >= nextKeyTime) {\r\n                            perc = 1;\r\n                        } else if(frameNum < keyTime) {\r\n                            perc = 0;\r\n                        } else {\r\n                            if(keyData.o.x.constructor === Array) {\r\n                                if (!keyData.__fnct) {\r\n                                    keyData.__fnct = [];\r\n                                }\r\n                                if (!keyData.__fnct[i]) {\r\n                                    outX = (typeof keyData.o.x[i] === 'undefined') ? keyData.o.x[0] : keyData.o.x[i];\r\n                                    outY = (typeof keyData.o.y[i] === 'undefined') ? keyData.o.y[0] : keyData.o.y[i];\r\n                                    inX = (typeof keyData.i.x[i] === 'undefined') ? keyData.i.x[0] : keyData.i.x[i];\r\n                                    inY = (typeof keyData.i.y[i] === 'undefined') ? keyData.i.y[0] : keyData.i.y[i];\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct[i] = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct[i];\r\n                                }\r\n                            } else {\r\n                                if (!keyData.__fnct) {\r\n                                    outX = keyData.o.x;\r\n                                    outY = keyData.o.y;\r\n                                    inX = keyData.i.x;\r\n                                    inY = keyData.i.y;\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct;\r\n                                }\r\n                            }\r\n                            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime ));\r\n                        }\r\n                    }\r\n\r\n                    endValue = nextKeyData.s || keyData.e;\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\r\n\r\n                    if (len === 1) {\r\n                        newValue = keyValue;\r\n                    } else {\r\n                        newValue[i] = keyValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    //based on @Toji's https://github.com/toji/gl-matrix/\r\n    function slerp(a, b, t) {\r\n        var out = [];\r\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\r\n        var omega, cosom, sinom, scale0, scale1;\r\n\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    function quaternionToEuler(out, quat) {\r\n        var qx = quat[0];\r\n        var qy = quat[1];\r\n        var qz = quat[2];\r\n        var qw = quat[3];\r\n        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n        out[0] = heading/degToRads;\r\n        out[1] = attitude/degToRads;\r\n        out[2] = bank/degToRads;\r\n    }\r\n\r\n    function createQuaternion(values) {\r\n        var heading = values[0] * degToRads;\r\n        var attitude = values[1] * degToRads;\r\n        var bank = values[2] * degToRads;\r\n        var c1 = Math.cos(heading / 2);\r\n        var c2 = Math.cos(attitude / 2);\r\n        var c3 = Math.cos(bank / 2);\r\n        var s1 = Math.sin(heading / 2);\r\n        var s2 = Math.sin(attitude / 2);\r\n        var s3 = Math.sin(bank / 2);\r\n        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n        return [x,y,z,w];\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            if(this._caching.lastFrame >= frameNum) {\r\n                this._caching._lastKeyframeIndex = -1;\r\n                this._caching.lastIndex = 0;\r\n            }\r\n\r\n            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n            this.pv = renderResult;\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function setVValue(val) {\r\n        var multipliedValue;\r\n        if(this.propType === 'unidimensional') {\r\n            multipliedValue = val * this.mult;\r\n            if(math_abs(this.v - multipliedValue) > 0.00001) {\r\n                this.v = multipliedValue;\r\n                this._mdf = true;\r\n            }\r\n        } else {\r\n            var i = 0, len = this.v.length;\r\n            while (i < len) {\r\n                multipliedValue = val[i] * this.mult;\r\n                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\r\n                    this.v[i] = multipliedValue;\r\n                    this._mdf = true;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }        \r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = this._isFirstFrame;\r\n        var multipliedValue;\r\n        var i, len = this.effectsSequence.length;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this._isFirstFrame = false;\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    function ValueProperty(elem, data, mult, container){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.effectsSequence = [];\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult, container) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = data.k[i] * this.mult;\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this._isFirstFrame = true;\r\n        this.effectsSequence = [];\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult, container) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.v = initFrame;\r\n        this.pv = initFrame;\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        for (i = 0; i < arrLen; i += 1) {\r\n            this.v[i] = initFrame;\r\n            this.pv[i] = initFrame;\r\n        }\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, container) {\r\n        var p;\r\n        if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult, container);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.effectsSequence.length){\r\n            container.addDynamicProperty(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var _mdf = this._mdf;\r\n        this.iterateDynamicProperties();\r\n        this._mdf = this._mdf || _mdf;\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.sk) {\r\n            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        if(this._isDirty) {\r\n            this.precalculateMatrix();\r\n            this._isDirty = false;\r\n        }\r\n\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.cloneFromProps(this.pre.props);\r\n            if (this.appliedTransformations < 1) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.appliedTransformations < 2) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk && this.appliedTransformations < 3) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r && this.appliedTransformations < 4) {\r\n                this.v.rotate(-this.r.v);\r\n            } else if (!this.r && this.appliedTransformations < 4){\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented) {\r\n                var v1,v2, frameRate = this.elem.globalData.frameRate;\r\n                if(this.p && this.p.keyframes && this.p.getValueAtTime) {\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\r\n                    }\r\n                } else if(this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\r\n                    v1 = [];\r\n                    v2 = [];\r\n                    var px = this.px, py = this.py, frameRate;\r\n                    if (px._caching.lastFrame+px.offsetTime <= px.keyframes[0].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate,0);\r\n                    } else if(px._caching.lastFrame+px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate),0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate),0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                    } else {\r\n                        v1 = [px.pv, py.pv];\r\n                        v2[0] = px.getValueAtTime((px._caching.lastFrame+px.offsetTime - 0.01) / frameRate,px.offsetTime);\r\n                        v2[1] = py.getValueAtTime((py._caching.lastFrame+py.offsetTime - 0.01) / frameRate,py.offsetTime);\r\n                    }\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p && this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function precalculateMatrix() {\r\n        if(!this.a.k) {\r\n            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            this.appliedTransformations = 1;\r\n        } else {\r\n            return;\r\n        }\r\n        if(!this.s.effectsSequence.length) {\r\n            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            this.appliedTransformations = 2;\r\n        } else {\r\n            return;\r\n        }\r\n        if(this.sk) {\r\n            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n                this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n            this.appliedTransformations = 3;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.r) {\r\n            if(!this.r.effectsSequence.length) {\r\n                this.pre.rotate(-this.r.v);\r\n                this.appliedTransformations = 4;\r\n            } else {\r\n                return;\r\n            }\r\n        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            this.appliedTransformations = 4;\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function addDynamicProperty(prop) {\r\n        this._addDynamicProperty(prop);\r\n        this.elem.addDynamicProperty(prop);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    function TransformProperty(elem,data,container){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        //Precalculated matrix with non animated properties\r\n        this.pre = new Matrix();\r\n        this.appliedTransformations = 0;\r\n        this.initDynamicPropertyContainer(container || elem);\r\n        if(data.p && data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p || {k:[0,0,0]},1,0,this);\r\n        }\r\n        if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        } else {\r\n            this.r = PropertyFactory.getProp(elem, data.r || {k: 0}, 0, degToRads, this);\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n        }\r\n        this.a = PropertyFactory.getProp(elem,data.a || {k:[0,0,0]},1,0,this);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:[100,100,100]},1,0.01,this);\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        this._isDirty = true;\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype = {\r\n        applyToMatrix: applyToMatrix,\r\n        getValue: processKeys,\r\n        precalculateMatrix: precalculateMatrix,\r\n        autoOrient: autoOrient\r\n    }\r\n\r\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n    function getTransformProperty(elem,data,container){\r\n        return new TransformProperty(elem,data,container);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    var i;\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n        var kf = this.keyframes;\r\n        if(frameNum < kf[0].t-this.offsetTime){\r\n            keyPropS = kf[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){\r\n            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\r\n            /*if(kf[kf.length - 1].s){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            }*/\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = kf.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = kf[i];\r\n                nextKeyData = kf[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                previousValue.i[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                previousValue.o[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                previousValue.v[j][k] = vertexValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            this.interpolateShape(frameNum, this.pv, this._caching);\r\n            ////\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n    }\r\n\r\n    function shapesEqual(shape1, shape2) {\r\n        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n            return false;\r\n        }\r\n        var i, len = shape1._length;\r\n        for(i = 0; i < len; i += 1) {\r\n            if(shape1.v[i][0] !== shape2.v[i][0] \r\n            || shape1.v[i][1] !== shape2.v[i][1] \r\n            || shape1.o[i][0] !== shape2.o[i][0] \r\n            || shape1.o[i][1] !== shape2.o[i][1] \r\n            || shape1.i[i][0] !== shape2.i[i][0] \r\n            || shape1.i[i][1] !== shape2.i[i][1]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function setVValue(newPath) {\r\n        if(!shapesEqual(this.v, newPath)) {\r\n            this.v = shape_pool.clone(newPath);\r\n            this.localShapeCollection.releaseShapes();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this._mdf = true;\r\n            this.paths = this.localShapeCollection;\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }\r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = false;\r\n        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\r\n        var i, len = this.effectsSequence.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    };\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.container = elem;\r\n        this.elem = elem;\r\n        this.data = data;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n        this.effectsSequence = [];\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.setVValue = setVValue;\r\n    ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\r\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n\r\n        EllShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function (){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n\r\n                if(this._mdf){\r\n                    this.convertEllToPath();\r\n                }\r\n            },\r\n            convertEllToPath: function() {\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n                var _cw = this.d !== 3;\r\n                var _v = this.v;\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        extendPrototype([DynamicPropertyContainer], EllShapeProperty);\r\n\r\n        return EllShapeProperty;\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function StarShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n                this.convertToPath = this.convertStarToPath;\r\n            } else {\r\n                this.convertToPath = this.convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertToPath();\r\n            }\r\n        };\r\n\r\n        StarShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function() {\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertToPath();\r\n                }\r\n            },\r\n            convertStarToPath: function() {\r\n                var numPts = Math.floor(this.pt.v)*2;\r\n                var angle = Math.PI*2/numPts;\r\n                /*this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts;*/\r\n                var longFlag = true;\r\n                var longRad = this.or.v;\r\n                var shortRad = this.ir.v;\r\n                var longRound = this.os.v;\r\n                var shortRound = this.is.v;\r\n                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n                currentAng += this.r.v;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    rad = longFlag ? longRad : shortRad;\r\n                    roundness = longFlag ? longRound : shortRound;\r\n                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                    /*this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts;*/\r\n                    longFlag = !longFlag;\r\n                    currentAng += angle*dir;\r\n                }\r\n            },\r\n            convertPolygonToPath: function() {\r\n                var numPts = Math.floor(this.pt.v);\r\n                var angle = Math.PI*2/numPts;\r\n                var rad = this.or.v;\r\n                var roundness = this.os.v;\r\n                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n                var i, currentAng = -Math.PI/ 2;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                currentAng += this.r.v;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                    currentAng += angle*dir;\r\n                }\r\n                this.paths.length = 0;\r\n                this.paths[0] = this.v;\r\n            }\r\n\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], StarShapeProperty);\r\n\r\n        return StarShapeProperty;\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n\r\n         function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n\r\n        RectShapeProperty.prototype = {\r\n            convertRectToPath: function (){\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n                var round = bm_min(v0,v1,this.r.v);\r\n                var cPoint = round*(1-roundCorner);\r\n                this.v._length = 0;\r\n\r\n                if(this.d === 2 || this.d === 1) {\r\n                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                    }\r\n                }else{\r\n                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                    }\r\n                }\r\n            },\r\n            getValue: function(frameNum){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertRectToPath();\r\n                }\r\n\r\n            },\r\n            reset: resetShape\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], RectShapeProperty);\r\n\r\n        return RectShapeProperty;\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data){\r\n        return new modifiers[nm](elem, data);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n        if(this._isAnimated) {\r\n            data.setAsAnimated();\r\n        }\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data){\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;\r\n        e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        s = Math.round(s * 10000) * 0.0001;\r\n        e = Math.round(e * 10000) * 0.0001;\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\r\n                            if (lastShapeInCollection.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\r\n            //Don't remove this even if it's losing cached info.\r\n            this.shapes[i].pathsData.length = 0;\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c && lengths.length) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n    this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n    this.so = PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);\r\n    this.eo = PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = !!this.dynamicProperties.length;\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.frameId = -1;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":1,\"ix\":6,\"k\":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, container) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    this.initDynamicPropertyContainer(container);\r\n    var i, len = data.length || 0, prop;\r\n    for(i = 0; i < len; i += 1) {\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n        this.k = prop.k || this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(!this.k){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || forceRender;\r\n    if (this._mdf) {\r\n        var i = 0, len = this.dataProps.length;\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\r\nfunction GradientProperty(elem,data,container){\r\n    this.data = data;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this.initDynamicPropertyContainer(container);\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n    this.k = this.prop.k;\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\r\nvar buildShapeString = function(pathNodes, length, closed, mat) {\r\n\tif(length === 0) {\r\n            return '';\r\n        }\r\n        var _o = pathNodes.o;\r\n        var _i = pathNodes.i;\r\n        var _v = pathNodes.v;\r\n        var i, shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n        for(i = 1; i < length; i += 1) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n}\r\nvar ImagePreloader = (function(){\r\n\r\n    var proxyImage = (function(){\r\n        var canvas = createTag('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = 1;\r\n        var ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = '#FF0000';\r\n        ctx.fillRect(0, 0, 1, 1);\r\n        return canvas;\r\n    }())\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData, assetsPath, original_path) {\r\n        var path = '';\r\n        if (assetData.e) {\r\n            path = assetData.p;\r\n        } else if(assetsPath) {\r\n            var imagePath = assetData.p;\r\n            if (imagePath.indexOf('images/') !== -1) {\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = assetsPath + imagePath;\r\n        } else {\r\n            path = original_path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function createImageData(assetData) {\r\n        var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n        var img = createTag('img');\r\n        img.crossOrigin = 'anonymous';\r\n        img.addEventListener('load', this._imageLoaded.bind(this), false);\r\n        img.addEventListener('error', function() {\r\n            ob.img = proxyImage;\r\n            this._imageLoaded();\r\n        }.bind(this), false);\r\n        img.src = path;\r\n        var ob = {\r\n            img: img,\r\n            assetData: assetData\r\n        }\r\n        return ob;\r\n    }\r\n\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        var i, len = assets.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!assets[i].layers){\r\n                this.totalImages += 1;\r\n                this.images.push(this._createImageData(assets[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function getImage(assetData) {\r\n        var i = 0, len = this.images.length;\r\n        while (i < len) {\r\n            if (this.images[i].assetData === assetData) {\r\n                return this.images[i].img;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n        this.images.length = 0;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.totalImages === this.loadedAssets;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.loaded = loaded;\r\n        this.destroy = destroy;\r\n        this.getImage = getImage;\r\n        this._createImageData = createImageData;\r\n        this._imageLoaded = imageLoaded;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n        this.images = [];\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar assetLoader = (function(){\r\n\r\n\tfunction formatResponse(xhr) {\r\n\t\tif(xhr.response && typeof xhr.response === 'object') {\r\n\t\t\treturn xhr.response;\r\n\t\t} else if(xhr.response && typeof xhr.response === 'string') {\r\n\t\t\treturn JSON.parse(xhr.response);\r\n\t\t} else if(xhr.responseText) {\r\n\t\t\treturn JSON.parse(xhr.responseText);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadAsset(path, callback, errorCallback) {\r\n\t\tvar response;\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', path, true);\r\n\t\t// set responseType after calling open or IE will break.\r\n\t\ttry {\r\n\t\t    // This crashes on Android WebView prior to KitKat\r\n\t\t    xhr.responseType = \"json\";\r\n\t\t} catch (err) {}\r\n\t    xhr.send();\r\n\t    xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState == 4) {\r\n\t            if(xhr.status == 200){\r\n\t            \tresponse = formatResponse(xhr);\r\n\t            \tcallback(response);\r\n\t            }else{\r\n\t                try{\r\n\t            \t\tresponse = formatResponse(xhr);\r\n\t            \t\tcallback(response);\r\n\t                }catch(err){\r\n\t                \tif(errorCallback) {\r\n\t                \t\terrorCallback(err);\r\n\t                \t}\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t}\r\n\treturn {\r\n\t\tload: loadAsset\r\n\t}\r\n}())\r\n\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n    this._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n    this.initDynamicPropertyContainer(elem);\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var bezierData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[i + 1]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[0]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\r\n    //\r\n    if(documentData.j === 2 || documentData.j === 1) {\r\n        var animatorJustifyOffset = 0;\r\n        var animatorFirstCharOffset = 0;\r\n        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n        var lastIndex = 0;\r\n        var isNewLine = true;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            if (letters[i].n) {\r\n                if(animatorJustifyOffset) {\r\n                    animatorJustifyOffset += animatorFirstCharOffset;\r\n                }\r\n                while (lastIndex < i) {\r\n                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n                    lastIndex += 1;\r\n                }\r\n                animatorJustifyOffset = 0;\r\n                isNewLine = true;\r\n            } else {\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.t.propType) {\r\n                        if (isNewLine && documentData.j === 2) {\r\n                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n                        }\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n                        if (mult.length) {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n                        } else {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n                        }\r\n                    }\r\n                }\r\n                isNewLine = false;\r\n            }\r\n        }\r\n        if(animatorJustifyOffset) {\r\n            animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while(lastIndex < i) {\r\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n            lastIndex += 1;\r\n        }\r\n    }\r\n    //\r\n\r\n    for( i = 0; i < len; i += 1) {\r\n\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n                    if(xPos !== 0 || documentData.j !== 0) {\r\n                        if(this._hasMaskedPath) {\r\n                            if(mult.length) {\r\n                                currentLength += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                currentLength += animatorProps.t.v*mult;\r\n                            }\r\n                        }else{\r\n                            if(mult.length) {\r\n                                xPos += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                xPos += animatorProps.t.v*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\r\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = false;\r\n    this.data = data;\r\n\tthis.elem = elem;\r\n    this.comp = this.elem.comp;\r\n\tthis.keysIndex = 0;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n    this.effectsSequence = [];\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: this.defaultBoxWidth,\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:null,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0,\r\n        __complete: false\r\n\r\n\t};\r\n    this.copyData(this.currentData, this.data.d.k[0].s);\r\n\r\n    if(!this.searchProperty()) {\r\n        this.completeTextData(this.currentData);\r\n    }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0,0];\r\n\r\nTextProperty.prototype.copyData = function(obj, data) {\r\n    for(var s in data) {\r\n        if(data.hasOwnProperty(s)) {\r\n            obj[s] = data[s];\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n    if(!data.__complete) {\r\n        this.completeTextData(data);\r\n    }\r\n    this.currentData = data;\r\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n    this._mdf = true;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n    return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function() {\r\n    this.kf = this.data.d.k.length > 1;\r\n    if(this.kf) {\r\n        this.addEffect(this.getKeyframeValue.bind(this));\r\n    }\r\n    return this.kf;\r\n}\r\n\r\nTextProperty.prototype.addEffect = function(effectFunction) {\r\n\tthis.effectsSequence.push(effectFunction);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_finalValue) {\r\n    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n        return;\r\n    }\r\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\r\n    var currentValue = this.currentData;\r\n    var currentIndex = this.keysIndex;\r\n    if(this.lock) {\r\n        this.setCurrentData(this.currentData);\r\n        return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var multipliedValue;\r\n    var i, len = this.effectsSequence.length;\r\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\r\n    for(i = 0; i < len; i += 1) {\r\n        //Checking if index changed to prevent creating a new object every time the expression updates.\r\n        if(currentIndex !== this.keysIndex) {\r\n            finalValue = this.effectsSequence[i](finalValue, finalValue.t);\r\n        } else {\r\n            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\r\n        }\r\n    }\r\n    if(currentValue !== finalValue) {\r\n        this.setCurrentData(finalValue);\r\n    }\r\n    this.pv = this.v = this.currentData;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n}\r\n\r\nTextProperty.prototype.getKeyframeValue = function() {\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n        this.keysIndex = i;\r\n    }\r\n    return this.data.d.k[this.keysIndex].s;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var charCode;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                charCode = finalText[i].charCodeAt(0);\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(charCode === 13 || charCode === 3){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        charCode = currentChar.charCodeAt(0);\r\n        if (currentChar === ' '){\r\n            val = '\\u00A0';\r\n        } else if (charCode === 13 || charCode === 3) {\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.copyData({}, this.data.d.k[index].s);\r\n    dData = this.copyData(dData, newData);\r\n    this.data.d.k[index].s = dData;\r\n    this.recalculate(index);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = 0;\r\n    this._isFirstFrame = true;\r\n    this.getValue(dData);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n\r\n    function TextSelectorProp(elem,data){\r\n        this._currentTextLength = -1;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.initDynamicPropertyContainer(elem);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    TextSelectorProp.prototype = {\r\n        getMult: function(ind) {\r\n            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n                this.getValue();\r\n            }\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<0.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        },\r\n        getValue: function(newCharsFlag) {\r\n            this.iterateDynamicProperties();\r\n            this._mdf = newCharsFlag || this._mdf;\r\n            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = this._currentTextLength;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n    }\r\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    }\r\n}\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var ariaLabel = '';\r\n    if (config && config.title) {\r\n        var titleElement = createNS('title');\r\n        var titleId = createElementID();\r\n        titleElement.setAttribute('id', titleId);\r\n        titleElement.textContent = config.title;\r\n        this.svgElement.appendChild(titleElement);\r\n        ariaLabel += titleId;\r\n    }\r\n    if (config && config.description) {\r\n        var descElement = createNS('desc');\r\n        var descId = createElementID();\r\n        descElement.setAttribute('id', descId);\r\n        descElement.textContent = config.description;\r\n        this.svgElement.appendChild(descElement);\r\n        ariaLabel += ' ' + descId;\r\n    }\r\n    if (ariaLabel) {\r\n        this.svgElement.setAttribute('aria-labelledby', ariaLabel)\r\n    }\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n    this.rendererType = 'svg';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n        this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.setupGlobalData(animData, defs);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = createElementID();\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction CanvasRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.renderConfig = {\r\n        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n        context: (config && config.context) || null,\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n    if (this.animationItem.wrapper) {\r\n        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n    }\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1,\r\n        _mdf: false,\r\n        renderConfig: this.renderConfig,\r\n        currentGlobalAlpha: -1\r\n    };\r\n    this.contextData = new CVContextData();\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.transformMat = new Matrix();\r\n    this.completeLayers = false;\r\n    this.rendererType = 'canvas';\r\n}\r\nextendPrototype([BaseRenderer],CanvasRenderer);\r\n\r\nCanvasRenderer.prototype.createShape = function (data) {\r\n    return new CVShapeElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createText = function (data) {\r\n    return new CVTextElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createImage = function (data) {\r\n    return new CVImageElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createComp = function (data) {\r\n    return new CVCompElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createSolid = function (data) {\r\n    return new CVSolidElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nCanvasRenderer.prototype.ctxTransform = function(props){\r\n    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n        return;\r\n    }\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n        return;\r\n    }\r\n    this.transformMat.cloneFromProps(props);\r\n    var cProps = this.contextData.cTr.props;\r\n    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n    var trProps = this.contextData.cTr.props;\r\n    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n};\r\n\r\nCanvasRenderer.prototype.ctxOpacity = function(op){\r\n    /*if(op === 1){\r\n        return;\r\n    }*/\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n        return;\r\n    }\r\n    this.contextData.cO *= op < 0 ? 0 : op;\r\n    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {\r\n        this.canvasContext.globalAlpha = this.contextData.cO;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.reset = function(){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    this.contextData.reset();\r\n};\r\n\r\nCanvasRenderer.prototype.save = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.save();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.save();\r\n    }\r\n    var props = this.contextData.cTr.props;\r\n    if(this.contextData._length <= this.contextData.cArrPos) {\r\n        this.contextData.duplicate();\r\n    }\r\n    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n    for (i = 0; i < 16; i += 1) {\r\n        arr[i] = props[i];\r\n    }\r\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n    this.contextData.cArrPos += 1;\r\n};\r\n\r\nCanvasRenderer.prototype.restore = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.restore();\r\n        this.globalData.blendMode = 'source-over';\r\n    }\r\n    this.contextData.cArrPos -= 1;\r\n    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n    var i,arr = this.contextData.cTr.props;\r\n    for(i=0;i<16;i+=1){\r\n        arr[i] = popped[i];\r\n    }\r\n    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n    this.contextData.cO = popped;\r\n    if(this.globalData.currentGlobalAlpha !== popped) {\r\n        this.canvasContext.globalAlpha = popped;\r\n        this.globalData.currentGlobalAlpha = popped;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.configAnimation = function(animData){\r\n    if(this.animationItem.wrapper){\r\n        this.animationItem.container = createTag('canvas');\r\n        this.animationItem.container.style.width = '100%';\r\n        this.animationItem.container.style.height = '100%';\r\n        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n        this.canvasContext = this.animationItem.container.getContext('2d');\r\n        if(this.renderConfig.className) {\r\n            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n        }\r\n    }else{\r\n        this.canvasContext = this.renderConfig.context;\r\n    }\r\n    this.data = animData;\r\n    this.layers = animData.layers;\r\n    this.transformCanvas = {\r\n        w: animData.w,\r\n        h:animData.h,\r\n        sx:0,\r\n        sy:0,\r\n        tx:0,\r\n        ty:0\r\n    };\r\n    this.setupGlobalData(animData, document.body);\r\n    this.globalData.canvasContext = this.canvasContext;\r\n    this.globalData.renderer = this;\r\n    this.globalData.isDashed = false;\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.transformCanvas = this.transformCanvas;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n\r\n    this.updateContainerSize();\r\n};\r\n\r\nCanvasRenderer.prototype.updateContainerSize = function () {\r\n    this.reset();\r\n    var elementWidth,elementHeight;\r\n    if(this.animationItem.wrapper && this.animationItem.container){\r\n        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n    }else{\r\n        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n    }\r\n    var elementRel,animationRel;\r\n    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n        var fillType = par[1] || 'meet';\r\n        var pos = par[0] || 'xMidYMid';\r\n        var xPos = pos.substr(0,4);\r\n        var yPos = pos.substr(4);\r\n        elementRel = elementWidth/elementHeight;\r\n        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        }else{\r\n            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n        }\r\n\r\n        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.tx = 0;\r\n        }\r\n        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.ty = 0;\r\n        }\r\n\r\n    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }else{\r\n        this.transformCanvas.sx = this.renderConfig.dpr;\r\n        this.transformCanvas.sy = this.renderConfig.dpr;\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }\r\n    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\r\n    this.ctxTransform(this.transformCanvas.props);\r\n    this.canvasContext.beginPath();\r\n    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n    this.canvasContext.closePath();\r\n    this.canvasContext.clip();\r\n\r\n    this.renderFrame(this.renderedFrame, true);\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function () {\r\n    if(this.renderConfig.clearCanvas) {\r\n        this.animationItem.wrapper.innerHTML = '';\r\n    }\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = len - 1; i >= 0; i-=1) {\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.globalData.canvasContext = null;\r\n    this.animationItem.container = null;\r\n    this.destroyed = true;\r\n};\r\n\r\nCanvasRenderer.prototype.renderFrame = function(num, forceRender){\r\n    if((this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) || this.destroyed || num === -1){\r\n        return;\r\n    }\r\n    this.renderedFrame = num;\r\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n    this.globalData.frameId += 1;\r\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n\r\n     // console.log('--------');\r\n     // console.log('NEW: ',num);\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n\r\n    for (i = 0; i < len; i++) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        if(this.renderConfig.clearCanvas === true){\r\n            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n        }else{\r\n            this.save();\r\n        }\r\n        for (i = len - 1; i >= 0; i-=1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n        if(this.renderConfig.clearCanvas !== true){\r\n            this.restore();\r\n        }\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.buildItem = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n    elements[pos] = element;\r\n    element.initExpressions();\r\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\r\n};\r\n\r\nCanvasRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.hide = function(){\r\n    this.animationItem.container.style.display = 'none';\r\n};\r\n\r\nCanvasRenderer.prototype.show = function(){\r\n    this.animationItem.container.style.display = 'block';\r\n};\r\n\r\nfunction HybridRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.renderConfig = {\r\n        className: (config && config.className) || '',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.pendingElements = [];\r\n    this.elements = [];\r\n    this.threeDElements = [];\r\n    this.destroyed = false;\r\n    this.camera = null;\r\n    this.supports3d = true;\r\n    this.rendererType = 'html';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],HybridRenderer);\r\n\r\nHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\r\nHybridRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newDOMElement = element.getBaseElement();\r\n    if(!newDOMElement){\r\n        return;\r\n    }\r\n    var layer = this.layers[pos];\r\n    if(!layer.ddd || !this.supports3d){\r\n        if(this.threeDElements) {\r\n            this.addTo3dContainer(newDOMElement,pos);\r\n        } else {\r\n            var i = 0;\r\n            var nextDOMElement, nextLayer, tmpDOMElement;\r\n            while(i<pos){\r\n                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n                    nextLayer = this.elements[i];\r\n                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n                    nextDOMElement = tmpDOMElement || nextDOMElement;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(nextDOMElement){\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n                }\r\n            } else {\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.appendChild(newDOMElement);\r\n                }\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        this.addTo3dContainer(newDOMElement,pos);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createShape = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGShapeElement(data, this.globalData, this);\r\n    }\r\n    return new HShapeElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createText = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGTextElement(data, this.globalData, this);\r\n    }\r\n    return new HTextElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createCamera = function (data) {\r\n    this.camera = new HCameraElement(data, this.globalData, this);\r\n    return this.camera;\r\n};\r\n\r\nHybridRenderer.prototype.createImage = function (data) {\r\n    if(!this.supports3d){\r\n        return new IImageElement(data, this.globalData, this);\r\n    }\r\n    return new HImageElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createComp = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGCompElement(data, this.globalData, this);\r\n    }\r\n    return new HCompElement(data, this.globalData, this);\r\n\r\n};\r\n\r\nHybridRenderer.prototype.createSolid = function (data) {\r\n    if(!this.supports3d){\r\n        return new ISolidElement(data, this.globalData, this);\r\n    }\r\n    return new HSolidElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len) {\r\n        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n            return this.threeDElements[i].perspectiveElem;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createThreeDContainer = function(pos, type){\r\n    var perspectiveElem = createTag('div');\r\n    styleDiv(perspectiveElem);\r\n    var container = createTag('div');\r\n    styleDiv(container);\r\n    if(type === '3d') {\r\n        perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n        perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    }\r\n    \r\n    perspectiveElem.appendChild(container);\r\n    //this.resizerElem.appendChild(perspectiveElem);\r\n    var threeDContainerData = {\r\n        container:container,\r\n        perspectiveElem:perspectiveElem,\r\n        startPos: pos,\r\n        endPos: pos,\r\n        type: type\r\n    };\r\n    this.threeDElements.push(threeDContainerData);\r\n    return threeDContainerData;\r\n};\r\n\r\nHybridRenderer.prototype.build3dContainers = function(){\r\n    var i, len = this.layers.length;\r\n    var lastThreeDContainerData;\r\n    var currentContainer = '';\r\n    for(i=0;i<len;i+=1){\r\n        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n            if(currentContainer !== '3d'){\r\n                currentContainer = '3d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'3d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        } else {\r\n            if(currentContainer !== '2d'){\r\n                currentContainer = '2d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'2d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        }\r\n    }\r\n    len = this.threeDElements.length;\r\n    for(i = len - 1; i >= 0; i --) {\r\n        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len){\r\n        if(pos <= this.threeDElements[i].endPos){\r\n            var j = this.threeDElements[i].startPos;\r\n            var nextElement;\r\n            while(j<pos){\r\n                if(this.elements[j] && this.elements[j].getBaseElement){\r\n                    nextElement = this.elements[j].getBaseElement();\r\n                }\r\n                j += 1;\r\n            }\r\n            if(nextElement){\r\n                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n            } else {\r\n                this.threeDElements[i].container.appendChild(elem);\r\n            }\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.configAnimation = function(animData){\r\n    var resizerElem = createTag('div');\r\n    var wrapper = this.animationItem.wrapper;\r\n    resizerElem.style.width = animData.w+'px';\r\n    resizerElem.style.height = animData.h+'px';\r\n    this.resizerElem = resizerElem;\r\n    styleDiv(resizerElem);\r\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n    if(this.renderConfig.className) {\r\n      resizerElem.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    wrapper.appendChild(resizerElem);\r\n\r\n    resizerElem.style.overflow = 'hidden';\r\n    var svg = createNS('svg');\r\n    svg.setAttribute('width','1');\r\n    svg.setAttribute('height','1');\r\n    styleDiv(svg);\r\n    this.resizerElem.appendChild(svg);\r\n    var defs = createNS('defs');\r\n    svg.appendChild(defs);\r\n    this.data = animData;\r\n    //Mask animation\r\n    this.setupGlobalData(animData, svg);\r\n    this.globalData.defs = defs;\r\n    this.layers = animData.layers;\r\n    this.layerElement = this.resizerElem;\r\n    this.build3dContainers();\r\n    this.updateContainerSize();\r\n};\r\n\r\nHybridRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.animationItem.container = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        this.elements[i].destroy();\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nHybridRenderer.prototype.updateContainerSize = function () {\r\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n    var elementRel = elementWidth/elementHeight;\r\n    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n    var sx,sy,tx,ty;\r\n    if(animationRel>elementRel){\r\n        sx = elementWidth/(this.globalData.compSize.w);\r\n        sy = elementWidth/(this.globalData.compSize.w);\r\n        tx = 0;\r\n        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n    }else{\r\n        sx = elementHeight/(this.globalData.compSize.h);\r\n        sy = elementHeight/(this.globalData.compSize.h);\r\n        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n        ty = 0;\r\n    }\r\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n};\r\n\r\nHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\r\nHybridRenderer.prototype.hide = function(){\r\n    this.resizerElem.style.display = 'none';\r\n};\r\n\r\nHybridRenderer.prototype.show = function(){\r\n    this.resizerElem.style.display = 'block';\r\n};\r\n\r\nHybridRenderer.prototype.initItems = function(){\r\n    this.buildAllItems();\r\n    if(this.camera){\r\n        this.camera.setup();\r\n    } else {\r\n        var cWidth = this.globalData.compSize.w;\r\n        var cHeight = this.globalData.compSize.h;\r\n        var i, len = this.threeDElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n        }\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = createTag('div');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction MaskElement(data,element,globalData) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = createElementID();\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w || 0);\r\n            rect.setAttribute('height', this.element.comp.data.h || 0);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n                elem: path,\r\n                lastPath: ''\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n            filterID = createElementID();\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','erode');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n    if (this.viewData.length) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n    var finalMat = this.element.finalTransform.mat;\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    addDynamicProperty: function(prop) {\r\n        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n            this.dynamicProperties.push(prop);\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n        //list of animated components\r\n        this.renderableComponents = [];\r\n    },\r\n    addRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) === -1) {\r\n            this.renderableComponents.push(component);\r\n        }\r\n    },\r\n    removeRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) !== -1) {\r\n            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n        }\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        var i, len = this.renderableComponents.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n        }\r\n        /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.createRenderableComponents();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                var elem = this.baseElement || this.layerElement;\r\n                elem.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    var elem = this.baseElement || this.layerElement;\r\n                    elem.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = data.hd === true;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n    //TODO find if there are some cases where _isAnimated can be false. \r\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n    this._isAnimated = !!shape.k;\r\n    // TODO: commenting this for now since all shapes are animated\r\n    var i = 0, len = transformers.length;\r\n    while(i < len) {\r\n    \tif(transformers[i].mProps.dynamicProperties.length) {\r\n    \t\tthis._isAnimated = true;\r\n    \t\tbreak;\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function() {\r\n    this._isAnimated = true;\r\n}\r\nfunction SVGTransformData(mProps, op, container) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op,\r\n\t\tcontainer: container\r\n\t};\r\n\tthis.elements = [];\r\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\r\nfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\r\nfunction SVGFillStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\r\nfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.getValue = this.iterateDynamicProperties;\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);\r\n    this.g = new GradientProperty(elem,data.g,this);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = createElementID();\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = createElementID();\r\n        var maskId = createElementID();\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\r\nfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n    this.initGradientData(elem, data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nvar SVGElementsRenderer = (function() {\r\n\tvar _identityMatrix = new Matrix();\r\n\tvar _matrixHelper = new Matrix();\r\n\r\n\tvar ob = {\r\n\t\tcreateRenderFunction: createRenderFunction\r\n\t}\r\n\r\n\tfunction createRenderFunction(data) {\r\n\t    var ty = data.ty;\r\n\t    switch(data.ty) {\r\n\t        case 'fl':\r\n\t        return renderFill;\r\n\t        case 'gf':\r\n\t        return renderGradient;\r\n\t        case 'gs':\r\n\t        return renderGradientStroke;\r\n\t        case 'st':\r\n\t        return renderStroke;\r\n\t        case 'sh':\r\n\t        case 'el':\r\n\t        case 'rc':\r\n\t        case 'sr':\r\n\t        return renderPath;\r\n\t        case 'tr':\r\n\t        return renderContentTransform;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderContentTransform(styleData, itemData, isFirstFrame) {\r\n\t    if(isFirstFrame || itemData.transform.op._mdf){\r\n\t        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);\r\n\t    }\r\n\t    if(isFirstFrame || itemData.transform.mProps._mdf){\r\n\t        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderPath(styleData, itemData, isFirstFrame) {\r\n\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t    var lvl = itemData.lvl;\r\n\t    var paths, mat, props, iterations, k;\r\n\t    for(l=0;l<lLen;l+=1){\r\n\t        redraw = itemData.sh._mdf || isFirstFrame;\r\n\t        if(itemData.styles[l].lvl < lvl){\r\n\t            mat = _matrixHelper.reset();\r\n\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t            k = itemData.transformers.length-1;\r\n\t            while(!redraw && iterations > 0) {\r\n\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t                iterations --;\r\n\t                k --;\r\n\t            }\r\n\t            if(redraw) {\r\n\t                iterations = lvl - itemData.styles[l].lvl;\r\n\t                k = itemData.transformers.length-1;\r\n\t                while(iterations > 0) {\r\n\t                    props = itemData.transformers[k].mProps.v.props;\r\n\t                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t                    iterations --;\r\n\t                    k --;\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            mat = _identityMatrix;\r\n\t        }\r\n\t        paths = itemData.sh.paths;\r\n\t        jLen = paths._length;\r\n\t        if(redraw){\r\n\t            pathStringTransformed = '';\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                pathNodes = paths.shapes[j];\r\n\t                if(pathNodes && pathNodes._length){\r\n\t                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t                }\r\n\t            }\r\n\t            itemData.caches[l] = pathStringTransformed;\r\n\t        } else {\r\n\t            pathStringTransformed = itemData.caches[l];\r\n\t        }\r\n\t        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\r\n\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderFill (styleData,itemData, isFirstFrame){\r\n\t    var styleElem = itemData.style;\r\n\r\n\t    if(itemData.c._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderGradientStroke (styleData, itemData, isFirstFrame) {\r\n\t    renderGradient(styleData, itemData, isFirstFrame);\r\n\t    renderStroke(styleData, itemData, isFirstFrame);\r\n\t}\r\n\r\n\tfunction renderGradient(styleData, itemData, isFirstFrame) {\r\n\t    var gfill = itemData.gf;\r\n\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n\t    if (itemData.o._mdf || isFirstFrame) {\r\n\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t    }\r\n\t    if (itemData.s._mdf || isFirstFrame) {\r\n\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t        }\r\n\t    }\r\n\t    var stops, i, len, stop;\r\n\t    if (itemData.g._cmdf || isFirstFrame) {\r\n\t        stops = itemData.cst;\r\n\t        var cValues = itemData.g.c;\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1){\r\n\t            stop = stops[i];\r\n\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t        }\r\n\t    }\r\n\t    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n\t        var oValues = itemData.g.o;\r\n\t        if(itemData.g._collapsable) {\r\n\t            stops = itemData.cst;\r\n\t        } else {\r\n\t            stops = itemData.ost;\r\n\t        }\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            stop = stops[i];\r\n\t            if(!itemData.g._collapsable) {\r\n\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t            }\r\n\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t        }\r\n\t    }\r\n\t    if (styleData.t === 1) {\r\n\t        if (itemData.e._mdf  || isFirstFrame) {\r\n\t            gfill.setAttribute('x2', pt2[0]);\r\n\t            gfill.setAttribute('y2', pt2[1]);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        var rad;\r\n\t        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            gfill.setAttribute('r', rad);\r\n\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t                itemData.of.setAttribute('r', rad);\r\n\t            }\r\n\t        }\r\n\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n\t            if (!rad) {\r\n\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            }\r\n\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t            var dist = rad * percent;\r\n\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t            gfill.setAttribute('fx', x);\r\n\t            gfill.setAttribute('fy', y);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('fx', x);\r\n\t                itemData.of.setAttribute('fy', y);\r\n\t            }\r\n\t        }\r\n\t        //gfill.setAttribute('fy','200');\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderStroke(styleData, itemData, isFirstFrame) {\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t    }\r\n\t    if(itemData.c && (itemData.c._mdf || isFirstFrame)){\r\n\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t    }\r\n\t    if(itemData.w._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        if(styleElem.msElem){\r\n\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        }\r\n\t    }\r\n\t};\r\n\r\n\treturn ob;\r\n}())\r\nfunction ShapeTransformManager() {\r\n\tthis.sequences = {};\r\n\tthis.sequenceList = [];\r\n    this.transform_key_count = 0;\r\n}\r\n\r\nShapeTransformManager.prototype = {\r\n\taddTransformSequence: function(transforms) {\r\n\t\tvar i, len = transforms.length;\r\n\t\tvar key = '_';\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tkey += transforms[i].transform.key + '_';\r\n\t\t}\r\n\t\tvar sequence = this.sequences[key];\r\n\t\tif(!sequence) {\r\n\t\t\tsequence = {\r\n\t\t\t\ttransforms: [].concat(transforms),\r\n\t\t\t\tfinalTransform: new Matrix(),\r\n\t\t\t\t_mdf: false\r\n\t\t\t};\r\n\t\t\tthis.sequences[key] = sequence;\r\n\t\t\tthis.sequenceList.push(sequence);\r\n\t\t}\r\n\t\treturn sequence;\r\n\t},\r\n\tprocessSequence: function(sequence, isFirstFrame) {\r\n\t\tvar i = 0, len = sequence.transforms.length, _mdf = isFirstFrame;\r\n\t\twhile (i < len && !isFirstFrame) {\r\n\t\t\tif (sequence.transforms[i].transform.mProps._mdf) {\r\n\t\t\t\t_mdf = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti += 1\r\n\t\t}\r\n\t\tif (_mdf) {\r\n\t\t\tvar props;\r\n\t\t\tsequence.finalTransform.reset();\r\n\t\t\tfor (i = len - 1; i >= 0; i -= 1) {\r\n\t\t        props = sequence.transforms[i].transform.mProps.v.props;\r\n\t\t        sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsequence._mdf = _mdf;\r\n\t\t\r\n\t},\r\n\tprocessSequences: function(isFirstFrame) {\r\n\t\tvar i, len = this.sequenceList.length;\r\n\t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\tthis.processSequence(this.sequenceList[i], isFirstFrame);\r\n\t\t}\r\n\r\n\t},\r\n\tgetNewKey: function() {\r\n\t\treturn '_' + this.transform_key_count++;\r\n\t}\r\n}\r\nfunction CVShapeData(element, data, styles, transformsManager) {\r\n    this.styledShapes = [];\r\n    this.tr = [0,0,0,0,0,0];\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);\r\n    var i , len = styles.length,styledShape;\r\n    for (i = 0; i < len; i += 1) {\r\n        if (!styles[i].closed) {\r\n            styledShape = {\r\n                transforms: transformsManager.addTransformSequence(styles[i].transforms),\r\n                trNodes: []\r\n            }\r\n            this.styledShapes.push(styledShape);\r\n            styles[i].elements.push(styledShape);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\r\nfunction BaseElement(){\r\n}\r\n\r\nBaseElement.prototype = {\r\n    checkMasks: function(){\r\n        if(!this.data.hasMask){\r\n            return false;\r\n        }\r\n        var i = 0, len = this.data.masksProperties.length;\r\n        while(i<len) {\r\n            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n                return true;\r\n            }\r\n            i += 1;\r\n        }\r\n        return false;\r\n    },\r\n    initExpressions: function(){\r\n        this.layerInterface = LayerExpressionInterface(this);\r\n        if(this.data.hasMask && this.maskManager) {\r\n            this.layerInterface.registerMaskInterface(this.maskManager);\r\n        }\r\n        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n        this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n        if(this.data.ty === 0 || this.data.xt){\r\n            this.compInterface = CompExpressionInterface(this);\r\n        } else if(this.data.ty === 4){\r\n            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n            this.layerInterface.content = this.layerInterface.shapeInterface;\r\n        } else if(this.data.ty === 5){\r\n            this.layerInterface.textInterface = TextExpressionInterface(this);\r\n            this.layerInterface.text = this.layerInterface.textInterface;\r\n        }\r\n    },\r\n    setBlendMode: function(){\r\n        var blendModeValue = getBlendMode(this.data.bm);\r\n        var elem = this.baseElement || this.layerElement;\r\n\r\n        elem.style['mix-blend-mode'] = blendModeValue;\r\n    },\r\n    initBaseData: function(data, globalData, comp){\r\n        this.globalData = globalData;\r\n        this.comp = comp;\r\n        this.data = data;\r\n        this.layerId = createElementID();\r\n        \r\n        //Stretch factor for old animations missing this property.\r\n        if(!this.data.sr){\r\n            this.data.sr = 1;\r\n        }\r\n        // effects manager\r\n        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        \r\n    },\r\n    getType: function(){\r\n        return this.type;\r\n    }\r\n    ,sourceRectAtTime: function(){}\r\n}\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = createElementID();\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = createElementID();\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                // This solution doesn't work on Android when meta tag with viewport attribute is set\r\n                /*var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);*/\r\n                ////\r\n                var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);\r\n                ////\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = createElementID();\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    createRenderableComponents: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    isShapeInAnimatedModifiers: function(data) {\r\n        var i = 0, len = this.shapeModifiers.length;\r\n        while(i < len) {\r\n            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].sh.reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'bevel'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var elements = this.processedElements;\r\n        var i = 0, len = elements.length;\r\n        while (i < len) {\r\n            if (elements[i].elem === elem) {\r\n                return elements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var elements = this.processedElements;\r\n        var i = elements.length;\r\n        while(i) {\r\n            i -= 1;\r\n            if (elements[i].elem === elem) {\r\n                elements[i].pos = pos;\r\n                return;\r\n            }\r\n        }\r\n        elements.push(new ProcessedElement(elem, pos));\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n        this.textProperty._mdf = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    //This iteration needs to be backwards because of how expressions connect between each other\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n    this.sourceRect = {top:0,left:0,width:this.assetData.w,height:this.assetData.h};\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nIImageElement.prototype.sourceRectAtTime = function() {\r\n\treturn this.sourceRect;\r\n}\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n    this.layerElement.setAttribute('arial-label', documentData.t);\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = !!this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape && tSpan) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function(){\r\n    var i, len = this.shapes.length, shape;\r\n    var j, jLen = this.stylesList.length;\r\n    var style, count = 0;\r\n    var tempShapes = [];\r\n    var areAnimated = false;\r\n    for(j = 0; j < jLen; j += 1) {\r\n        style = this.stylesList[j];\r\n        areAnimated = false;\r\n        tempShapes.length = 0;\r\n        for(i = 0; i < len; i += 1) {\r\n            shape = this.shapes[i];\r\n            if(shape.styles.indexOf(style) !== -1) {\r\n                tempShapes.push(shape);\r\n                areAnimated = shape._isAnimated || areAnimated;\r\n            }\r\n        }\r\n        if(tempShapes.length > 1 && areAnimated) {\r\n            this.setShapesAsAnimated(tempShapes);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function(shapes){\r\n    var i, len = shapes.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        shapes[i].setAsAnimated();\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(' + locationHref + '#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        elementData.gr.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, container) {\r\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);\r\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function(data, element) {\r\n    var i = 0, len = this.animatedContents.length;\r\n    while(i < len) {\r\n        if(this.animatedContents[i].element === element) {\r\n            return;\r\n        }\r\n        i += 1;\r\n    }\r\n    this.animatedContents.push({\r\n        fn: SVGElementsRenderer.createRenderFunction(data),\r\n        element: element,\r\n        data: data\r\n    });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], container);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape();\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function() {\r\n    var i, len = this.animatedContents.length;\r\n    var animatedContent;\r\n    for(i = 0; i < len; i += 1) {\r\n        animatedContent = this.animatedContents[i];\r\n        if((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\r\n            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapesData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = createElementID();\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        while (elemChildren[0]) {\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.paths[i].m === -1) {\r\n            continue;\r\n        }\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = createElementID();\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        var useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var elements = this.elem.comp.elements;\r\n    var i = 0, len = elements.length;\r\n    while (i < len) {\r\n    \tif (elements[i] && elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = createElementID();\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n    if (this.filters.length) {\r\n        elem.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nfunction CVContextData() {\r\n\tthis.saved = [];\r\n    this.cArrPos = 0;\r\n    this.cTr = new Matrix();\r\n    this.cO = 1;\r\n    var i, len = 15;\r\n    this.savedOp = createTypedArray('float32', len);\r\n    for(i=0;i<len;i+=1){\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = len;\r\n}\r\n\r\nCVContextData.prototype.duplicate = function() {\r\n\tvar newLength = this._length * 2;\r\n\tvar currentSavedOp = this.savedOp;\r\n    this.savedOp = createTypedArray('float32', newLength);\r\n    this.savedOp.set(currentSavedOp);\r\n    var i = 0;\r\n    for(i = this._length; i < newLength; i += 1) {\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = newLength;\r\n};\r\n\r\nCVContextData.prototype.reset = function() {\r\n\tthis.cArrPos = 0;\r\n\tthis.cTr.reset();\r\n    this.cO = 1;\r\n};\r\nfunction CVBaseElement(){\r\n}\r\n\r\nCVBaseElement.prototype = {\r\n    createElements: function(){},\r\n    initRendererElement: function(){},\r\n    createContainerElements: function(){\r\n        this.canvasContext = this.globalData.canvasContext;\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n    },\r\n    createContent: function(){},\r\n    setBlendMode: function(){\r\n        var globalData = this.globalData;\r\n        if(globalData.blendMode !== this.data.bm) {\r\n            globalData.blendMode = this.data.bm;\r\n            var blendModeValue = getBlendMode(this.data.bm);\r\n            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new CVMaskElement(this.data, this);\r\n    },\r\n    hideElement: function(){\r\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n            this.hidden = true;\r\n        }\r\n    },\r\n    showElement: function(){\r\n        if (this.isInRange && !this.isTransparent){\r\n            this.hidden = false;\r\n            this._isFirstFrame = true;\r\n            this.maskManager._isFirstFrame = true;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        if (this.hidden || this.data.hd) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.setBlendMode();\r\n        this.globalData.renderer.save();\r\n        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n        this.renderInnerContent();\r\n        this.globalData.renderer.restore();\r\n        if(this.maskManager.hasMasks) {\r\n            this.globalData.renderer.restore(true);\r\n        }\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.canvasContext = null;\r\n        this.data = null;\r\n        this.globalData = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\nCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\r\nfunction CVImageElement(data, globalData, comp){\r\n    this.failed = false;\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.img = globalData.imageLoader.getImage(this.assetData);\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\r\nCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVImageElement.prototype.createContent = function(){\r\n\r\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\r\n        var canvas = createTag('canvas');\r\n        canvas.width = this.assetData.w;\r\n        canvas.height = this.assetData.h;\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imgW = this.img.width;\r\n        var imgH = this.img.height;\r\n        var imgRel = imgW / imgH;\r\n        var canvasRel = this.assetData.w/this.assetData.h;\r\n        var widthCrop, heightCrop;\r\n        var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\r\n        if((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\r\n            heightCrop = imgH;\r\n            widthCrop = heightCrop*canvasRel;\r\n        } else {\r\n            widthCrop = imgW;\r\n            heightCrop = widthCrop/canvasRel;\r\n        }\r\n        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n        this.img = canvas;\r\n    }\r\n\r\n};\r\n\r\nCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n    if (this.failed) {\r\n        return;\r\n    }\r\n    this.canvasContext.drawImage(this.img, 0, 0);\r\n};\r\n\r\nCVImageElement.prototype.destroy = function(){\r\n    this.img = null;\r\n};\r\nfunction CVCompElement(data, globalData, comp) {\r\n    this.completeLayers = false;\r\n    this.layers = data.layers;\r\n    this.pendingElements = [];\r\n    this.elements = createSizedArray(this.layers.length);\r\n    this.initElement(data, globalData, comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\r\nCVCompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nCVCompElement.prototype.destroy = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.layers = null;\r\n    this.elements = null;\r\n};\r\n\r\nfunction CVMaskElement(data,element){\r\n    this.data = data;\r\n    this.element = element;\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.viewData = createSizedArray(this.masksProperties.length);\r\n    var i, len = this.masksProperties.length, hasMasks = false;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            hasMasks = true;\r\n        }\r\n        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n    }\r\n    this.hasMasks = hasMasks;\r\n    if(hasMasks) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nCVMaskElement.prototype.renderFrame = function () {\r\n    if(!this.hasMasks){\r\n        return;\r\n    }\r\n    var transform = this.element.finalTransform.mat;\r\n    var ctx = this.element.canvasContext;\r\n    var i, len = this.masksProperties.length;\r\n    var pt,pts,data;\r\n    ctx.beginPath();\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if (this.masksProperties[i].inv) {\r\n                ctx.moveTo(0, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, 0);\r\n            }\r\n            data = this.viewData[i].v;\r\n            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n            ctx.moveTo(pt[0], pt[1]);\r\n            var j, jLen = data._length;\r\n            for (j = 1; j < jLen; j++) {\r\n                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n            }\r\n            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n        }\r\n    }\r\n    this.element.globalData.renderer.save(true);\r\n    ctx.clip();\r\n};\r\n\r\nCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\r\nCVMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n};\r\nfunction CVShapeElement(data, globalData, comp) {\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this.transformsManager = new ShapeTransformManager();\r\n    this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\r\nCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\r\nCVShapeElement.prototype.transformHelper = {opacity:1,_opMdf:false};\r\n\r\nCVShapeElement.prototype.dashResetter = [];\r\n\r\nCVShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n};\r\n\r\nCVShapeElement.prototype.createStyleElement = function(data, transforms) {\r\n    var styleElem = {\r\n        data: data,\r\n        type: data.ty,\r\n        preTransforms: this.transformsManager.addTransformSequence(transforms),\r\n        transforms: [],\r\n        elements: [],\r\n        closed: data.hd === true\r\n    };\r\n    var elementData = {};\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n        if(!elementData.c.k){\r\n            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n        }\r\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,this);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,this);\r\n        elementData.h = PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);\r\n        elementData.a = PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);\r\n        elementData.g = new GradientProperty(this,data.g,this);\r\n    }\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n        if(data.lj == 1) {\r\n            styleElem.ml = data.ml;\r\n        }\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n        if(!elementData.w.k){\r\n            styleElem.wi = elementData.w.v;\r\n        }\r\n        if(data.d){\r\n            var d = new DashProperty(this,data.d,'canvas', this);\r\n            elementData.d = d;\r\n            if(!elementData.d.k){\r\n                styleElem.da = elementData.d.dashArray;\r\n                styleElem.do = elementData.d.dashoffset[0];\r\n            }\r\n        }\r\n    } else {\r\n        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n    }\r\n    this.stylesList.push(styleElem);\r\n    elementData.style = styleElem;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createTransformElement = function(data) {\r\n    var elementData = {\r\n        transform : {\r\n            opacity: 1,\r\n            _opMdf:false,\r\n            key: this.transformsManager.getNewKey(),\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n        }\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createShapeElement = function(data) {\r\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\r\n    \r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.reloadShapes = function() {\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n    len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n};\r\n\r\nCVShapeElement.prototype.addTransformToStyleList = function(transform) {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.push(transform);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.removeTransformFromStyleList = function() {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.pop();\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.closeStyles = function(styles) {\r\n    var i, len = styles.length, j, jLen;\r\n    for (i = 0; i < len; i += 1) {\r\n        styles[i].closed = true;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, shouldRender, transforms){\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], processedPos, modifier, currentTransform;\r\n    var ownTransforms = [].concat(transforms);\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._shouldRender = shouldRender;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st'|| arr[i].ty == 'gf'|| arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            \r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, shouldRender, ownTransforms);\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                currentTransform = this.createTransformElement(arr[i]);\r\n                itemsData[i] = currentTransform;\r\n            }\r\n            ownTransforms.push(itemsData[i]);\r\n            this.addTransformToStyleList(itemsData[i]);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i]);\r\n            }\r\n            \r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        } else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                shouldRender = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    this.removeTransformFromStyleList();\r\n    this.closeStyles(ownStyles);\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderInnerContent = function() {\r\n    this.transformHelper.opacity = 1;\r\n    this.transformHelper._opMdf = false;\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n};\r\n\r\nCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n    var props, groupMatrix;\r\n    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n        groupTransform.opacity = parentTransform.opacity;\r\n        groupTransform.opacity *= groupTransform.op.v;\r\n        groupTransform._opMdf = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.drawLayer = function() {\r\n    var i, len = this.stylesList.length;\r\n    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n    for(i=0;i<len;i+=1){\r\n        currentStyle = this.stylesList[i];\r\n        type = currentStyle.type;\r\n\r\n        //Skipping style when\r\n        //Stroke width equals 0\r\n        //style should not be rendered (extra unused repeaters)\r\n        //current opacity equals 0\r\n        //global opacity equals 0\r\n        if(((type === 'st' || type === 'gs') && currentStyle.wi === 0) || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0){\r\n            continue;\r\n        }\r\n        renderer.save();\r\n        elems = currentStyle.elements;\r\n        if(type === 'st' || type === 'gs'){\r\n            ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\r\n            ctx.lineWidth = currentStyle.wi;\r\n            ctx.lineCap = currentStyle.lc;\r\n            ctx.lineJoin = currentStyle.lj;\r\n            ctx.miterLimit = currentStyle.ml || 0;\r\n        } else {\r\n            ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\r\n        }\r\n        renderer.ctxOpacity(currentStyle.coOp);\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.beginPath();\r\n        }\r\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\r\n        jLen = elems.length;\r\n        for(j=0;j<jLen;j+=1){\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.beginPath();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(currentStyle.da);\r\n                    ctx.lineDashOffset = currentStyle.do;\r\n                }\r\n            }\r\n            nodes = elems[j].trNodes;\r\n            kLen = nodes.length;\r\n\r\n            for(k=0;k<kLen;k+=1){\r\n                if(nodes[k].t == 'm'){\r\n                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n                }else if(nodes[k].t == 'c'){\r\n                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n                }else{\r\n                    ctx.closePath();\r\n                }\r\n            }\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.stroke();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(this.dashResetter);\r\n                }\r\n            }\r\n        }\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.fill(currentStyle.r);\r\n        }\r\n        renderer.restore();\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n    var i, len = items.length - 1;\r\n    var groupTransform;\r\n    groupTransform = parentTransform;\r\n    for(i=len;i>=0;i-=1){\r\n        if(items[i].ty == 'tr'){\r\n            groupTransform = data[i].transform;\r\n            this.renderShapeTransform(parentTransform, groupTransform);\r\n        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(items[i].ty == 'fl'){\r\n            this.renderFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'st'){\r\n            this.renderStroke(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gf' || items[i].ty == 'gs'){\r\n            this.renderGradientFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gr'){\r\n            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n        }else if(items[i].ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n    if(isMain){\r\n        this.drawLayer();\r\n    }\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStyledShape = function(styledShape, shape){\r\n    if(this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\r\n        var shapeNodes = styledShape.trNodes;\r\n        var paths = shape.paths;\r\n        var i, len, j, jLen = paths._length;\r\n        shapeNodes.length = 0;\r\n        var groupTransformMat = styledShape.transforms.finalTransform;\r\n        for (j = 0; j < jLen; j += 1) {\r\n            var pathNodes = paths.shapes[j];\r\n            if(pathNodes && pathNodes.v){\r\n                len = pathNodes._length;\r\n                for (i = 1; i < len; i += 1) {\r\n                    if (i === 1) {\r\n                        shapeNodes.push({\r\n                            t: 'm',\r\n                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                        });\r\n                    }\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n                    });\r\n                }\r\n                if (len === 1) {\r\n                    shapeNodes.push({\r\n                        t: 'm',\r\n                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                    });\r\n                }\r\n                if (pathNodes.c && len) {\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n                    });\r\n                    shapeNodes.push({\r\n                        t: 'z'\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        styledShape.trNodes = shapeNodes;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    if(pathData.hd !== true && pathData._shouldRender) {\r\n        var i, len = itemData.styledShapes.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\r\n        }\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n\r\n    if (itemData.c._mdf || this._isFirstFrame) {\r\n        styleElem.co = 'rgb(' \r\n        + bm_floor(itemData.c.v[0]) + ',' \r\n        + bm_floor(itemData.c.v[1]) + ',' \r\n        + bm_floor(itemData.c.v[2]) + ')';\r\n    }\r\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\r\n        styleElem.coOp = itemData.o.v * groupTransform.opacity;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderGradientFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    if(!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))) {\r\n        var ctx = this.globalData.canvasContext;\r\n        var grd;\r\n        var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n        if (styleData.t === 1) {\r\n            grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\r\n        } else {\r\n            var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\r\n        }\r\n\r\n        var i, len = styleData.g.p;\r\n        var cValues = itemData.g.c;\r\n        var opacity = 1;\r\n\r\n        for (i = 0; i < len; i += 1){\r\n            if(itemData.g._hasOpacity && itemData.g._collapsable) {\r\n                opacity = itemData.g.o[i*2 + 1];\r\n            }\r\n            grd.addColorStop(cValues[i * 4] / 100,'rgba('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ',' + opacity + ')');\r\n        }\r\n        styleElem.grd = grd;\r\n    }\r\n    styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if(d && (d._mdf  || this._isFirstFrame)){\r\n        styleElem.da = d.dashArray;\r\n        styleElem.do = d.dashoffset[0];\r\n    }\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.wi = itemData.w.v;\r\n    }\r\n};\r\n\r\n\r\nCVShapeElement.prototype.destroy = function(){\r\n    this.shapesData = null;\r\n    this.globalData = null;\r\n    this.canvasContext = null;\r\n    this.stylesList.length = 0;\r\n    this.itemsData.length = 0;\r\n};\r\n\r\n\r\nfunction CVSolidElement(data, globalData, comp) {\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\r\nCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVSolidElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.fillStyle = this.data.sc;\r\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n    //\r\n};\r\nfunction CVTextElement(data, globalData, comp){\r\n    this.textSpans = [];\r\n    this.yOffset = 0;\r\n    this.fillColorAnim = false;\r\n    this.strokeColorAnim = false;\r\n    this.strokeWidthAnim = false;\r\n    this.stroke = false;\r\n    this.fill = false;\r\n    this.justifyOffset = 0;\r\n    this.currentRender = null;\r\n    this.renderType = 'canvas';\r\n    this.values = {\r\n        fill: 'rgba(0,0,0,0)',\r\n        stroke: 'rgba(0,0,0,0)',\r\n        sWidth: 0,\r\n        fValue: ''\r\n    };\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\r\nCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\r\nCVTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\r\n    var hasFill = false;\r\n    if(documentData.fc) {\r\n        hasFill = true;\r\n        this.values.fill = this.buildColor(documentData.fc);\r\n    }else{\r\n        this.values.fill = 'rgba(0,0,0,0)';\r\n    }\r\n    this.fill = hasFill;\r\n    var hasStroke = false;\r\n    if(documentData.sc){\r\n        hasStroke = true;\r\n        this.values.stroke = this.buildColor(documentData.sc);\r\n        this.values.sWidth = documentData.sw;\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    var matrixHelper = this.mHelper;\r\n    this.stroke = hasStroke;\r\n    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n    len = documentData.finalText.length;\r\n    //this.tHelper.font = this.values.fValue;\r\n    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var cnt = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = charData && charData.data || {};\r\n        matrixHelper.reset();\r\n        if(singleShape && letters[i].n) {\r\n            xPos = -trackingOffset;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            firstLine = false;\r\n        }\r\n\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        jLen = shapes.length;\r\n        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n        if(singleShape){\r\n            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        }\r\n        commands = createSizedArray(jLen);\r\n        for(j=0;j<jLen;j+=1){\r\n            kLen = shapes[j].ks.k.i.length;\r\n            pathNodes = shapes[j].ks.k;\r\n            pathArr = [];\r\n            for(k=1;k<kLen;k+=1){\r\n                if(k==1){\r\n                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n                }\r\n                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n            }\r\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n            commands[j] = pathArr;\r\n        }\r\n        if(singleShape){\r\n            xPos += letters[i].l;\r\n            xPos += trackingOffset;\r\n        }\r\n        if(this.textSpans[cnt]){\r\n            this.textSpans[cnt].elem = commands;\r\n        } else {\r\n            this.textSpans[cnt] = {elem: commands};\r\n        }\r\n        cnt +=1;\r\n    }\r\n};\r\n\r\nCVTextElement.prototype.renderInnerContent = function(){\r\n    var ctx = this.canvasContext;\r\n    var finalMat = this.finalTransform.mat.props;\r\n    ctx.font = this.values.fValue;\r\n    ctx.lineCap = 'butt';\r\n    ctx.lineJoin = 'miter';\r\n    ctx.miterLimit = 4;\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    }\r\n\r\n    var  i,len, j, jLen, k, kLen;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter;\r\n    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            continue;\r\n        }\r\n        renderedLetter = renderedLetters[i];\r\n        if(renderedLetter){\r\n            this.globalData.renderer.save();\r\n            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n        }\r\n        if(this.fill){\r\n            if(renderedLetter && renderedLetter.fc){\r\n                if(lastFill !== renderedLetter.fc){\r\n                    lastFill = renderedLetter.fc;\r\n                    ctx.fillStyle = renderedLetter.fc;\r\n                }\r\n            }else if(lastFill !== this.values.fill){\r\n                lastFill = this.values.fill;\r\n                ctx.fillStyle = this.values.fill;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.fill();\r\n            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n        }\r\n        if(this.stroke){\r\n            if(renderedLetter && renderedLetter.sw){\r\n                if(lastStrokeW !== renderedLetter.sw){\r\n                    lastStrokeW = renderedLetter.sw;\r\n                    ctx.lineWidth = renderedLetter.sw;\r\n                }\r\n            }else if(lastStrokeW !== this.values.sWidth){\r\n                lastStrokeW = this.values.sWidth;\r\n                ctx.lineWidth = this.values.sWidth;\r\n            }\r\n            if(renderedLetter && renderedLetter.sc){\r\n                if(lastStroke !== renderedLetter.sc){\r\n                    lastStroke = renderedLetter.sc;\r\n                    ctx.strokeStyle = renderedLetter.sc;\r\n                }\r\n            }else if(lastStroke !== this.values.stroke){\r\n                lastStroke = this.values.stroke;\r\n                ctx.strokeStyle = this.values.stroke;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.stroke();\r\n            ///ctx.strokeText(letters[i].val,0,0);\r\n        }\r\n        if(renderedLetter) {\r\n            this.globalData.renderer.restore();\r\n        }\r\n    }\r\n};\r\nfunction CVEffects() {\r\n\r\n}\r\nCVEffects.prototype.renderFrame = function(){};\r\nfunction HBaseElement(data,globalData,comp){}\r\nHBaseElement.prototype = {\r\n    checkBlendMode: function(){},\r\n    initRendererElement: function(){\r\n        this.baseElement = createTag(this.data.tg || 'div');\r\n        if(this.data.hasMask) {\r\n            this.svgElement = createNS('svg');\r\n            this.layerElement = createNS('g');\r\n            this.maskedElement = this.layerElement;\r\n            this.svgElement.appendChild(this.layerElement);\r\n            this.baseElement.appendChild(this.svgElement);\r\n        } else {\r\n            this.layerElement = this.baseElement;\r\n        }\r\n        styleDiv(this.baseElement);\r\n    },\r\n    createContainerElements: function(){\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n        this.transformedElement = this.baseElement;\r\n        this.maskedElement = this.layerElement;\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n    },\r\n    renderElement: function() {\r\n        if(this.finalTransform._matMdf){\r\n            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n        }\r\n        if(this.finalTransform._opMdf){\r\n            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        //If it is exported as hidden (data.hd === true) no need to render\r\n        //If it is not visible no need to render\r\n        if (this.data.hd || this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.renderElement();\r\n        this.renderInnerContent();\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.layerElement = null;\r\n        this.transformedElement = null;\r\n        if(this.matteElement) {\r\n            this.matteElement = null;\r\n        }\r\n        if(this.maskManager) {\r\n            this.maskManager.destroy();\r\n            this.maskManager = null;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    addEffects: function(){\r\n    },\r\n    setMatte: function(){}\r\n};\r\nHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\nHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\nHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\r\nfunction HSolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\r\nHSolidElement.prototype.createContent = function(){\r\n    var rect;\r\n    if(this.data.hasMask){\r\n        rect = createNS('rect');\r\n        rect.setAttribute('width',this.data.sw);\r\n        rect.setAttribute('height',this.data.sh);\r\n        rect.setAttribute('fill',this.data.sc);\r\n        this.svgElement.setAttribute('width',this.data.sw);\r\n        this.svgElement.setAttribute('height',this.data.sh);\r\n    } else {\r\n        rect = createTag('div');\r\n        rect.style.width = this.data.sw + 'px';\r\n        rect.style.height = this.data.sh + 'px';\r\n        rect.style.backgroundColor = this.data.sc;\r\n    }\r\n    this.layerElement.appendChild(rect);\r\n};\r\n\r\nfunction HCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = !data.hasMask;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\nHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\r\nHCompElement.prototype.createContainerElements = function(){\r\n    this._createBaseContainerElements();\r\n    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n    if(this.data.hasMask){\r\n        this.svgElement.setAttribute('width',this.data.w);\r\n        this.svgElement.setAttribute('height',this.data.h);\r\n        this.transformedElement = this.baseElement;\r\n    } else {\r\n        this.transformedElement = this.layerElement;\r\n    }\r\n};\r\n\r\nHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n    var j = 0;\r\n    var nextElement;\r\n    while(j<pos){\r\n        if(this.elements[j] && this.elements[j].getBaseElement){\r\n            nextElement = this.elements[j].getBaseElement();\r\n        }\r\n        j += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(elem, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(elem);\r\n    }\r\n}\r\n\r\nfunction HShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.shapesContainer = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n}\r\nextendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\nHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\r\nHShapeElement.prototype.createContent = function(){\r\n    var cont;\r\n    this.baseElement.style.fontSize = 0;\r\n    if (this.data.hasMask) {\r\n        this.layerElement.appendChild(this.shapesContainer);\r\n        cont = this.svgElement;\r\n    } else {\r\n        cont = createNS('svg');\r\n        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n        cont.setAttribute('width',size.w);\r\n        cont.setAttribute('height',size.h);\r\n        cont.appendChild(this.shapesContainer);\r\n        this.layerElement.appendChild(cont);\r\n    }\r\n\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n    this.filterUniqueShapes();\r\n    this.shapeCont = cont;\r\n};\r\n\r\nHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n    var i, len = transformers.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n    }\r\n    return point;\r\n}\r\n\r\nHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n    var shape = item.sh.v;\r\n    var transformers = item.transformers;\r\n    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n    if (len <= 1) {\r\n        return;\r\n    }\r\n    for (i = 0; i < len - 1; i += 1) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n    if(shape.c) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n    var bounds = this.shapeBoundingBox;\r\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n}\r\n\r\nHShapeElement.prototype.shapeBoundingBox = {\r\n    left:0,\r\n    right:0,\r\n    top:0,\r\n    bottom:0,\r\n}\r\n\r\nHShapeElement.prototype.tempBoundingBox = {\r\n    x:0,\r\n    xMax:0,\r\n    y:0,\r\n    yMax:0,\r\n    width:0,\r\n    height:0\r\n}\r\n\r\nHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\r\n    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\r\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\r\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n      c = 3 * p1[i] - 3 * p0[i];\r\n\r\n      b = b | 0;\r\n      a = a | 0;\r\n      c = c | 0;\r\n\r\n      if (a === 0) {\r\n\r\n        if (b === 0) {\r\n          continue;\r\n        }\r\n\r\n        t = -c / b;\r\n\r\n        if (0 < t && t < 1) {\r\n          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n        }\r\n        continue;\r\n      }\r\n\r\n      b2ac = b * b - 4 * c * a;\r\n\r\n      if (b2ac < 0) {\r\n        continue;\r\n      }\r\n\r\n      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\r\n      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\r\n    }\r\n\r\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n  };\r\n\r\n  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n    return bm_pow(1-t, 3) * p0[i]\r\n        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n        + bm_pow(t, 3) * p3[i];\r\n  }\r\n\r\nHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n    var i, len = itemsData.length, path;\r\n    for(i = 0; i < len; i += 1) {\r\n        if(itemsData[i] && itemsData[i].sh) {\r\n            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n        } else if(itemsData[i] && itemsData[i].it) {\r\n            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n        }\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.currentBoxContains = function(box) {\r\n    return this.currentBBox.x <= box.x \r\n    && this.currentBBox.y <= box.y \r\n    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width\r\n    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height\r\n}\r\n\r\nHShapeElement.prototype.renderInnerContent = function() {\r\n    this._renderShapeFrame();\r\n\r\n    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n        var tempBoundingBox = this.tempBoundingBox;\r\n        var max = 999999;\r\n        tempBoundingBox.x = max;\r\n        tempBoundingBox.xMax = -max;\r\n        tempBoundingBox.y = max;\r\n        tempBoundingBox.yMax = -max;\r\n        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n        //var tempBoundingBox = this.shapeCont.getBBox();\r\n        if(this.currentBoxContains(tempBoundingBox)) {\r\n            return;\r\n        }\r\n        var changed = false;\r\n        if(this.currentBBox.w !== tempBoundingBox.width){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n            changed = true;\r\n        }\r\n        if(this.currentBBox.h !== tempBoundingBox.height){\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n            changed = true;\r\n        }\r\n        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.currentBBox.x = tempBoundingBox.x;\r\n            this.currentBBox.y = tempBoundingBox.y;\r\n\r\n            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n\r\n};\r\nfunction HTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.textPaths = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n    this.renderType = 'svg';\r\n    this.isMasked = false;\r\n    this.initElement(data,globalData,comp);\r\n\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\r\nHTextElement.prototype.createContent = function(){\r\n    this.isMasked = this.checkMasks();\r\n    if(this.isMasked){\r\n        this.renderType = 'svg';\r\n        this.compW = this.comp.data.w;\r\n        this.compH = this.comp.data.h;\r\n        this.svgElement.setAttribute('width',this.compW);\r\n        this.svgElement.setAttribute('height',this.compH);\r\n        var g = createNS('g');\r\n        this.maskedElement.appendChild(g);\r\n        this.innerElem = g;\r\n    } else {\r\n        this.renderType = 'html';\r\n        this.innerElem = this.layerElement;\r\n    }\r\n\r\n    this.checkParenting();\r\n\r\n};\r\n\r\nHTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n    var innerElemStyle = this.innerElem.style;\r\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n    if(documentData.sc){\r\n        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(!this.globalData.fontManager.chars){\r\n        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n        if(fontData.fClass){\r\n            this.innerElem.className = fontData.fClass;\r\n        } else {\r\n            innerElemStyle.fontFamily = fontData.fFamily;\r\n            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n            innerElemStyle.fontStyle = fStyle;\r\n            innerElemStyle.fontWeight = fWeight;\r\n        }\r\n    }\r\n    var i, len;\r\n\r\n    var letters = documentData.l;\r\n    len = letters.length;\r\n    var tSpan,tParent,tCont;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '';\r\n    var cnt = 0;\r\n    for (i = 0;i < len ;i += 1) {\r\n        if(this.globalData.fontManager.chars){\r\n            if(!this.textPaths[cnt]){\r\n                tSpan = createNS('path');\r\n                tSpan.setAttribute('stroke-linecap', 'butt');\r\n                tSpan.setAttribute('stroke-linejoin','round');\r\n                tSpan.setAttribute('stroke-miterlimit','4');\r\n            } else {\r\n                tSpan = this.textPaths[cnt];\r\n            }\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tCont = tParent.children[0];\r\n                } else {\r\n\r\n                    tParent = createTag('div');\r\n                    tCont = createNS('svg');\r\n                    tCont.appendChild(tSpan);\r\n                    styleDiv(tParent);\r\n                }\r\n            }\r\n        }else{\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tSpan = this.textPaths[cnt];\r\n                } else {\r\n                    tParent = createTag('span');\r\n                    styleDiv(tParent);\r\n                    tSpan = createTag('span');\r\n                    styleDiv(tSpan);\r\n                    tParent.appendChild(tSpan);\r\n                }\r\n            } else {\r\n                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n            }\r\n        }\r\n        //tSpan.setAttribute('visibility', 'hidden');\r\n        if(this.globalData.fontManager.chars){\r\n            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n            var shapeData;\r\n            if(charData){\r\n                shapeData = charData.data;\r\n            } else {\r\n                shapeData = null;\r\n            }\r\n            matrixHelper.reset();\r\n            if(shapeData && shapeData.shapes){\r\n                shapes = shapeData.shapes[0].it;\r\n                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n                tSpan.setAttribute('d',shapeStr);\r\n            }\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                if(shapeData && shapeData.shapes){\r\n\r\n                    //document.body.appendChild is needed to get exact measure of shape\r\n                    document.body.appendChild(tCont);\r\n                    var boundingBox = tCont.getBBox();\r\n                    tCont.setAttribute('width',boundingBox.width + 2);\r\n                    tCont.setAttribute('height',boundingBox.height + 2);\r\n                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\r\n                    letters[i].yOffset = boundingBox.y-1;\r\n\r\n                } else{\r\n                    tCont.setAttribute('width',1);\r\n                    tCont.setAttribute('height',1);\r\n                }\r\n                    tParent.appendChild(tCont);\r\n            }else{\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }else{\r\n            tSpan.textContent = letters[i].val;\r\n            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                //\r\n                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n            } else {\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }\r\n        //\r\n        if(!this.isMasked){\r\n            this.textSpans[cnt] = tParent;\r\n        }else{\r\n            this.textSpans[cnt] = tSpan;\r\n        }\r\n        this.textSpans[cnt].style.display = 'block';\r\n        this.textPaths[cnt] = tSpan;\r\n        cnt += 1;\r\n    }\r\n    while(cnt < this.textSpans.length){\r\n        this.textSpans[cnt].style.display = 'none';\r\n        cnt += 1;\r\n    }\r\n};\r\n\r\nHTextElement.prototype.renderInnerContent = function() {\r\n\r\n    if(this.data.singleShape){\r\n        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n            return;\r\n        } else {\r\n            // Todo Benchmark if using this is better than getBBox\r\n             if(this.isMasked && this.finalTransform._matMdf){\r\n                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n             }\r\n        }\r\n    }\r\n\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n        return;\r\n    }\r\n    var  i,len, count = 0;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter, textSpan, textPath;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            count += 1;\r\n            continue;\r\n        }\r\n        textSpan = this.textSpans[i];\r\n        textPath = this.textPaths[i];\r\n        renderedLetter = renderedLetters[count];\r\n        count += 1;\r\n        if(renderedLetter._mdf.m) {\r\n            if(!this.isMasked){\r\n                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n            }else{\r\n                textSpan.setAttribute('transform',renderedLetter.m);\r\n            }\r\n        }\r\n        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n        textSpan.style.opacity = renderedLetter.o;\r\n        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n        }\r\n        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n            textPath.setAttribute('stroke',renderedLetter.sc);\r\n        }\r\n        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n            textPath.setAttribute('fill',renderedLetter.fc);\r\n            textPath.style.color = renderedLetter.fc;\r\n        }\r\n    }\r\n\r\n    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n        var boundingBox = this.innerElem.getBBox();\r\n\r\n        if(this.currentBBox.w !== boundingBox.width){\r\n            this.currentBBox.w = boundingBox.width;\r\n            this.svgElement.setAttribute('width',boundingBox.width);\r\n        }\r\n        if(this.currentBBox.h !== boundingBox.height){\r\n            this.currentBBox.h = boundingBox.height;\r\n            this.svgElement.setAttribute('height',boundingBox.height);\r\n        }\r\n\r\n        var margin = 1;\r\n        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n            this.currentBBox.w = boundingBox.width + margin*2;\r\n            this.currentBBox.h = boundingBox.height + margin*2;\r\n            this.currentBBox.x = boundingBox.x - margin;\r\n            this.currentBBox.y = boundingBox.y - margin;\r\n\r\n            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n};\r\nfunction HImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\r\n\r\nHImageElement.prototype.createContent = function(){\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    var img = new Image();\r\n\r\n    if(this.data.hasMask){\r\n        this.imageElem = createNS('image');\r\n        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n        this.layerElement.appendChild(this.imageElem);\r\n        this.baseElement.setAttribute('width',this.assetData.w);\r\n        this.baseElement.setAttribute('height',this.assetData.h);\r\n    } else {\r\n        this.layerElement.appendChild(img);\r\n    }\r\n    img.src = assetPath;\r\n    if(this.data.ln){\r\n        this.baseElement.setAttribute('id',this.data.ln);\r\n    }\r\n};\r\nfunction HCameraElement(data,globalData,comp){\r\n    this.initFrame();\r\n    this.initBaseData(data,globalData,comp);\r\n    this.initHierarchy();\r\n    var getProp = PropertyFactory.getProp;\r\n    this.pe = getProp(this,data.pe,0,0,this);\r\n    if(data.ks.p.s){\r\n        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n    }else{\r\n        this.p = getProp(this,data.ks.p,1,0,this);\r\n    }\r\n    if(data.ks.a){\r\n        this.a = getProp(this,data.ks.a,1,0,this);\r\n    }\r\n    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n        var i,len = data.ks.or.k.length;\r\n        for(i=0;i<len;i+=1){\r\n            data.ks.or.k[i].to = null;\r\n            data.ks.or.k[i].ti = null;\r\n        }\r\n    }\r\n    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n    this.or.sh = true;\r\n    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n    this.mat = new Matrix();\r\n    this._prevMat = new Matrix();\r\n    this._isFirstFrame = true;\r\n    \r\n    // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\r\n    this.finalTransform = {\r\n        mProp: this\r\n    };\r\n}\r\nextendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\r\nHCameraElement.prototype.setup = function() {\r\n    var i, len = this.comp.threeDElements.length, comp;\r\n    for(i=0;i<len;i+=1){\r\n        //[perspectiveElem,container]\r\n        comp = this.comp.threeDElements[i];\r\n        if(comp.type === '3d') {\r\n            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n        }\r\n    }\r\n};\r\n\r\nHCameraElement.prototype.createElements = function(){\r\n};\r\n\r\nHCameraElement.prototype.hide = function(){\r\n};\r\n\r\nHCameraElement.prototype.renderFrame = function(){\r\n    var _mdf = this._isFirstFrame;\r\n    var i, len;\r\n    if(this.hierarchy){\r\n        len = this.hierarchy.length;\r\n        for(i=0;i<len;i+=1){\r\n            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n        }\r\n    }\r\n    if(_mdf || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n        this.mat.reset();\r\n\r\n        if(this.hierarchy){\r\n            var mat;\r\n            len = this.hierarchy.length - 1;\r\n            for (i = len; i >= 0; i -= 1) {\r\n                /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                console.log(mat)\r\n                this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n                console.log(this.mat.props)*/\r\n                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n                this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\r\n                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n            }\r\n        }\r\n\r\n        if(this.p){\r\n            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n        }else{\r\n            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n        }\r\n        if(this.a){\r\n            var diffVector = [this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];\r\n            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\r\n        }\r\n        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n        this.mat.translate(0,0,this.pe.v);\r\n\r\n\r\n        \r\n\r\n        var hasMatrixChanged = !this._prevMat.equals(this.mat);\r\n        if((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\r\n            len = this.comp.threeDElements.length;\r\n            var comp;\r\n            for(i=0;i<len;i+=1){\r\n                comp = this.comp.threeDElements[i];\r\n                if(comp.type === '3d') {\r\n                    if(hasMatrixChanged) {\r\n                        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n                    }\r\n                    if(this.pe._mdf) {\r\n                        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n                    }\r\n                }\r\n            }\r\n            this.mat.clone(this._prevMat);\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nHCameraElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nHCameraElement.prototype.destroy = function(){\r\n};\r\nHCameraElement.prototype.getBaseElement = function(){return null;};\r\nfunction HEffects() {\r\n}\r\nHEffects.prototype.renderFrame = function(){};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n    var _isFrozen = false;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function getRegisteredAnimations() {\r\n        var i, len = registeredAnimations.length;\r\n        var animations = [];\r\n        for(i = 0; i < len; i += 1) {\r\n            animations.push(registeredAnimations[i].animation);\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(playingAnimationsNum && !_isFrozen) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function activate(){\r\n        if(!_isFrozen && playingAnimationsNum){\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function freeze() {\r\n        _isFrozen = true;\r\n    }\r\n\r\n    function unfreeze() {\r\n        _isFrozen = false;\r\n        activate();\r\n    }\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    moduleOb.freeze = freeze;\r\n    moduleOb.unfreeze = unfreeze;\r\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = createElementID();\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this._completedLoop = false;\r\n    this.projectInterface = ProjectInterface();\r\n    this.imagePreloader = new ImagePreloader();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    this.assetsPath = params.assetsPath;\r\n    if(params.animationData){\r\n        this.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n\r\n        assetLoader.load(params.path, this.configAnimation.bind(this), function() {\r\n            this.trigger('data_failed');\r\n        }.bind(this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.totalFrames;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    assetLoader.load(segmentPath, this.includeLayers.bind(this), function() {\r\n        this.trigger('data_failed');\r\n    }.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.totalFrames;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.imagesLoaded = function() {\r\n    this.trigger('loaded_images');\r\n    this.checkLoaded()\r\n}\r\n\r\nAnimationItem.prototype.preloadImages = function() {\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\r\n}\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    if(!this.renderer){\r\n        return;\r\n    }\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.preloadImages();\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    this.waitForFontsLoaded();\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = function(){\r\n    if(!this.renderer) {\r\n        return;\r\n    }\r\n    if(this.renderer.globalData.fontManager.loaded()){\r\n        this.checkLoaded();\r\n    }else{\r\n        setTimeout(this.waitForFontsLoaded.bind(this),20);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {\r\n        this.isLoaded = true;\r\n        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function() {\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this), 0);\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this._completedLoop = false;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue >  this.totalFrames ? nextValue % this.totalFrames : 0)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this._completedLoop = true;\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                if(!this._completedLoop) {\r\n                    this._completedLoop = true;\r\n                } else {\r\n                    this.trigger('loopComplete');\r\n                }\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr, forceFlag) {\r\n    if (forceFlag) {\r\n        this.segments.length = 0;\r\n    }\r\n    if (typeof arr[0] === 'object') {\r\n        var i, len = arr.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.segments.push(arr[i]);\r\n        }\r\n    } else {\r\n        this.segments.push(arr);\r\n    }\r\n    if (this.segments.length && forceFlag) {\r\n        this.adjustSegment(this.segments.shift(), 0);\r\n    }\r\n    if (this.isPaused) {\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if (forceFlag) {\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset) {\r\n    if (this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if ((name && this.name != name) || !this.renderer) {\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.imagePreloader.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(assetData.e) {\r\n        path = assetData.p;\r\n    } else if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nvar Expressions = (function(){\r\n    var ob = {};\r\n    ob.initExpressions = initExpressions;\r\n\r\n\r\n    function initExpressions(animation){\r\n\r\n    \tvar stackCount = 0;\r\n    \tvar registers = [];\r\n\r\n    \tfunction pushExpression() {\r\n\t\t\tstackCount += 1;\r\n    \t}\r\n\r\n    \tfunction popExpression() {\r\n\t\t\tstackCount -= 1;\r\n\t\t\tif (stackCount === 0) {\r\n\t\t\t\treleaseInstances();\r\n\t\t\t}\r\n    \t}\r\n\r\n    \tfunction registerExpressionProperty(expression) {\r\n    \t\tif (registers.indexOf(expression) === -1) {\r\n\t\t\t\tregisters.push(expression)\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction releaseInstances() {\r\n    \t\tvar i, len = registers.length;\r\n    \t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\t\tregisters[i].release();\r\n    \t\t}\r\n    \t\tregisters.length = 0;\r\n    \t}\r\n\r\n        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n        animation.renderer.globalData.pushExpression = pushExpression;\r\n        animation.renderer.globalData.popExpression = popExpression;\r\n        animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\r\n    }\r\n   return ob;\r\n}());\r\n\r\nexpressionsPlugin = Expressions;\r\n\r\nvar ExpressionManager = (function(){\r\n    'use strict';\r\n    var ob = {};\r\n    var Math = BMMath;\r\n    var window = null;\r\n    var document = null;\r\n\r\n    function $bm_isInstanceOfArray(arr) {\r\n        return arr.constructor === Array || arr.constructor === Float32Array;\r\n    }\r\n\r\n    function isNumerable(tOfV, v) {\r\n        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\r\n    }\r\n\r\n    function $bm_neg(a){\r\n        var tOfA = typeof a;\r\n        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n            return -a;\r\n        }\r\n        if($bm_isInstanceOfArray(a)){\r\n            var i, lenA = a.length;\r\n            var retArr = [];\r\n            for(i=0;i<lenA;i+=1){\r\n                retArr[i] = -a[i];\r\n            }\r\n            return retArr;\r\n        }\r\n        if (a.propType) {\r\n            return a.v;\r\n        }\r\n    }\r\n\r\n    var easeInBez = BezierFactory.getBezierEasing(0.333,0,.833,.833, 'easeIn').get;\r\n    var easeOutBez = BezierFactory.getBezierEasing(0.167,0.167,.667,1, 'easeOut').get;\r\n    var easeInOutBez = BezierFactory.getBezierEasing(.33,0,.667,1, 'easeInOut').get;\r\n\r\n    function sum(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(tOfA === 'string' || tOfB === 'string'){\r\n            return a + b;\r\n        }\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a + b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] + b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a + b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            \r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] + b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n    var add = sum;\r\n\r\n    function sub(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            if(tOfA === 'string') {\r\n                a = parseInt(a);\r\n            }\r\n            if(tOfB === 'string') {\r\n                b = parseInt(b);\r\n            }\r\n            return a - b;\r\n        }\r\n        if( $bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] - b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) &&  $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a - b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] - b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function mul(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a * b;\r\n        }\r\n\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] * b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a * b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function div(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a / b;\r\n        }\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] / b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a / b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n    function mod(a,b) {\r\n        if(typeof a === 'string') {\r\n            a = parseInt(a);\r\n        }\r\n        if(typeof b === 'string') {\r\n            b = parseInt(b);\r\n        }\r\n        return a % b;\r\n    }\r\n    var $bm_sum = sum;\r\n    var $bm_sub = sub;\r\n    var $bm_mul = mul;\r\n    var $bm_div = div;\r\n    var $bm_mod = mod;\r\n\r\n    function clamp(num, min, max) {\r\n        if(min > max){\r\n            var mm = max;\r\n            max = min;\r\n            min = mm;\r\n        }\r\n        return Math.min(Math.max(num, min), max);\r\n    }\r\n\r\n    function radiansToDegrees(val) {\r\n        return val/degToRads;\r\n    }\r\n    var radians_to_degrees = radiansToDegrees;\r\n\r\n    function degreesToRadians(val) {\r\n        return val*degToRads;\r\n    }\r\n    var degrees_to_radians = radiansToDegrees;\r\n\r\n    var helperLengthArray = [0,0,0,0,0,0];\r\n\r\n    function length(arr1, arr2) {\r\n        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n            arr2 = arr2 || 0;\r\n            return Math.abs(arr1 - arr2);\r\n        }\r\n        if(!arr2) {\r\n            arr2 = helperLengthArray;\r\n        }\r\n        var i, len = Math.min(arr1.length, arr2.length);\r\n        var addedLength = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n        }\r\n        return Math.sqrt(addedLength);\r\n    }\r\n\r\n    function normalize(vec) {\r\n        return div(vec, length(vec));\r\n    }\r\n\r\n    function rgbToHsl(val) {\r\n        var r = val[0]; var g = val[1]; var b = val[2];\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min){\r\n            h = s = 0; // achromatic\r\n        }else{\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max){\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l,val[3]];\r\n    }\r\n\r\n    function hue2rgb(p, q, t){\r\n        if(t < 0) t += 1;\r\n        if(t > 1) t -= 1;\r\n        if(t < 1/6) return p + (q - p) * 6 * t;\r\n        if(t < 1/2) return q;\r\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    }\r\n\r\n    function hslToRgb(val){\r\n        var h = val[0];\r\n        var s = val[1];\r\n        var l = val[2];\r\n\r\n        var r, g, b;\r\n\r\n        if(s === 0){\r\n            r = g = b = l; // achromatic\r\n        }else{\r\n\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return [r, g , b, val[3]];\r\n    }\r\n\r\n    function linear(t, tMin, tMax, value1, value2){\r\n        if(value1 === undefined || value2 === undefined){\r\n            value1 = tMin;\r\n            value2 = tMax;\r\n            tMin = 0;\r\n            tMax = 1;\r\n        }\r\n        if(tMax < tMin) {\r\n            var _tMin = tMax;\r\n            tMax = tMin;\r\n            tMin = _tMin;\r\n        }\r\n        if(t <= tMin) {\r\n            return value1;\r\n        }else if(t >= tMax){\r\n            return value2;\r\n        }\r\n        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n        if(!value1.length){\r\n            return value1 + (value2-value1)*perc;\r\n        }\r\n        var i, len = value1.length;\r\n        var arr = createTypedArray('float32', len);\r\n        for(i=0;i<len;i+=1){\r\n            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n        }\r\n        return arr;\r\n    }\r\n    function random(min,max){\r\n        if(max === undefined){\r\n            if(min === undefined){\r\n                min = 0;\r\n                max = 1;\r\n            } else {\r\n                max = min;\r\n                min = undefined;\r\n            }\r\n        }\r\n        if(max.length){\r\n            var i, len = max.length;\r\n            if(!min){\r\n                min = createTypedArray('float32', len);\r\n            }\r\n            var arr = createTypedArray('float32', len);\r\n            var rnd = BMMath.random();\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n            }\r\n            return arr;\r\n        }\r\n        if(min === undefined){\r\n            min = 0;\r\n        }\r\n        var rndm = BMMath.random();\r\n        return min + rndm*(max-min);\r\n    }\r\n\r\n    function createPath(points, inTangents, outTangents, closed) {\r\n        var i, len = points.length;\r\n        var path = shape_pool.newElement();\r\n        path.setPathData(!!closed, len);\r\n        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n        for(i = 0; i < len; i += 1) {\r\n            inVertexPoint = (inTangents && inTangents[i]) ? inTangents[i] : arrPlaceholder;\r\n            outVertexPoint = (outTangents && outTangents[i]) ? outTangents[i] : arrPlaceholder;\r\n            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function initiateExpression(elem,data,property){\r\n        var val = data.x;\r\n        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n        var _needsRandom = val.indexOf('random') !== -1;\r\n        var elemType = elem.data.ty;\r\n        var transform,$bm_transform,content,effect;\r\n        var thisProperty = property;\r\n        thisProperty.valueAtTime = thisProperty.getValueAtTime;\r\n        Object.defineProperty(thisProperty, 'value', {\r\n            get: function() {\r\n                return thisProperty.v\r\n            }\r\n        })\r\n        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n        elem.comp.displayStartTime = 0;\r\n        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        var width = elem.data.sw ? elem.data.sw : 0;\r\n        var height = elem.data.sh ? elem.data.sh : 0;\r\n        var name = elem.data.nm;\r\n        var loopIn, loop_in, loopOut, loop_out, smooth;\r\n        var toWorld,fromWorld,fromComp,toComp,fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer,thisComp,mask,valueAtTime,velocityAtTime;\r\n        var __expression_functions = [];\r\n        if(data.xf) {\r\n            var i, len = data.xf.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\r\n            }\r\n        }\r\n\r\n        var scoped_bm_rt;\r\n        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n        var numKeys = property.kf ? data.k.length : 0;\r\n\r\n        var active = !this.data || this.data.hd !== true;\r\n\r\n        var wiggle = function wiggle(freq,amp){\r\n            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n            var addedAmps = createTypedArray('float32', len);\r\n            freq = 5;\r\n            var iterations = Math.floor(time*freq);\r\n            i = 0;\r\n            j = 0;\r\n            while(i<iterations){\r\n                //var rnd = BMMath.random();\r\n                for(j=0;j<len;j+=1){\r\n                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n                    //addedAmps[j] += -amp + amp*2*rnd;\r\n                }\r\n                i += 1;\r\n            }\r\n            //var rnd2 = BMMath.random();\r\n            var periods = time*freq;\r\n            var perc = periods - Math.floor(periods);\r\n            var arr = createTypedArray('float32', len);\r\n            if(len>1){\r\n                for(j=0;j<len;j+=1){\r\n                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n                }\r\n                return arr;\r\n            } else {\r\n                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n            }\r\n        }.bind(this);\r\n\r\n        if(thisProperty.loopIn) {\r\n            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n            loop_in = loopIn;\r\n        }\r\n\r\n        if(thisProperty.loopOut) {\r\n            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n            loop_out = loopOut;\r\n        }\r\n\r\n        if(thisProperty.smooth) {\r\n            smooth = thisProperty.smooth.bind(thisProperty);\r\n        }\r\n\r\n        function loopInDuration(type,duration){\r\n            return loopIn(type,duration,true);\r\n        }\r\n\r\n        function loopOutDuration(type,duration){\r\n            return loopOut(type,duration,true);\r\n        }\r\n\r\n        if(this.getValueAtTime) {\r\n            valueAtTime = this.getValueAtTime.bind(this);\r\n        }\r\n\r\n        if(this.getVelocityAtTime) {\r\n            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n        }\r\n\r\n        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\r\n        function lookAt(elem1,elem2){\r\n            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n            return [yaw,pitch,0];\r\n        }\r\n\r\n        function easeOut(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function easeIn(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function ease(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function applyEase(fn, t, tMin, tMax, val1, val2) {\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n            var mult = fn(t);\r\n            if($bm_isInstanceOfArray(val1)) {\r\n                var i, len = val1.length;\r\n                var arr = createTypedArray('float32', len);\r\n                for (i = 0; i < len; i += 1) {\r\n                    arr[i] = (val2[i] - val1[i]) * mult + val1[i];\r\n                }\r\n                return arr;\r\n            } else {\r\n                return (val2 - val1) * mult + val1;\r\n            }\r\n        }\r\n\r\n        function nearestKey(time){\r\n            var i, len = data.k.length,index,keyTime;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                index = 0;\r\n                keyTime = 0;\r\n            } else {\r\n                index = -1;\r\n                time *= elem.comp.globalData.frameRate;\r\n                if (time < data.k[0].t) {\r\n                    index = 1;\r\n                    keyTime = data.k[0].t;\r\n                } else {\r\n                    for(i=0;i<len-1;i+=1){\r\n                        if(time === data.k[i].t){\r\n                            index = i + 1;\r\n                            keyTime = data.k[i].t;\r\n                            break;\r\n                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n                                index = i + 2;\r\n                                keyTime = data.k[i+1].t;\r\n                            } else {\r\n                                index = i + 1;\r\n                                keyTime = data.k[i].t;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(index === -1){\r\n                        index = i + 1;\r\n                        keyTime = data.k[i].t;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            var ob = {};\r\n            ob.index = index;\r\n            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n            return ob;\r\n        }\r\n\r\n        function key(ind){\r\n            var ob, i, len;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                throw new Error('The property has no keyframe at index ' + ind);\r\n            }\r\n            ind -= 1;\r\n            ob = {\r\n                time: data.k[ind].t/elem.comp.globalData.frameRate,\r\n                value: []\r\n            };\r\n            var arr;\r\n            if(ind === data.k.length - 1 && !data.k[ind].h){\r\n                arr = (data.k[ind].s || data.k[ind].s === 0) ? data.k[ind-1].s : data.k[ind].e;\r\n            }else{\r\n                arr = data.k[ind].s;\r\n            }\r\n            len = arr.length;\r\n            for(i=0;i<len;i+=1){\r\n                ob[i] = arr[i];\r\n                ob.value[i] = arr[i]\r\n            }\r\n            return ob;\r\n        }\r\n\r\n        function framesToTime(frames, fps) { \r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return frames / fps;\r\n        }\r\n\r\n        function timeToFrames(t, fps) {\r\n            if (!t && t !== 0) {\r\n                t = time;\r\n            }\r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return t * fps;\r\n        }\r\n\r\n        function seedRandom(seed){\r\n            BMMath.seedrandom(randSeed + seed);\r\n        }\r\n\r\n        function sourceRectAtTime() {\r\n            return elem.sourceRectAtTime();\r\n        }\r\n\r\n        function substring(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substring(init)\r\n                }\r\n                return value.substring(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        function substr(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substr(init)\r\n                }\r\n                return value.substr(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        var time, velocity, value, text, textIndex, textTotal, selectorValue;\r\n        var index = elem.data.ind;\r\n        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n        var parent;\r\n        var randSeed = Math.floor(Math.random()*1000000);\r\n        var globalData = elem.globalData;\r\n        function executeExpression(_value) {\r\n            // globalData.pushExpression();\r\n            value = _value;\r\n            if (_needsRandom) {\r\n                seedRandom(randSeed);\r\n            }\r\n            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n                return value;\r\n            }\r\n            if(this.propType === 'textSelector'){\r\n                textIndex = this.textIndex;\r\n                textTotal = this.textTotal;\r\n                selectorValue = this.selectorValue;\r\n            }\r\n            if (!thisLayer) {\r\n                text = elem.layerInterface.text;\r\n                thisLayer = elem.layerInterface;\r\n                thisComp = elem.comp.compInterface;\r\n                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n                toComp = thisLayer.toComp.bind(thisLayer);\r\n                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n                fromCompToSurface = fromComp;\r\n            }\r\n            if (!transform) {\r\n                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n                $bm_transform = transform;\r\n                if(transform) {\r\n                    anchorPoint = transform.anchorPoint;\r\n                    /*position = transform.position;\r\n                    rotation = transform.rotation;\r\n                    scale = transform.scale;*/\r\n                }\r\n            }\r\n            \r\n            if (elemType === 4 && !content) {\r\n                content = thisLayer(\"ADBE Root Vectors Group\");\r\n            }\r\n            if (!effect) {\r\n                effect = thisLayer(4);\r\n            }\r\n            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n            if (hasParent && !parent) {\r\n                parent = elem.hierarchy[0].layerInterface;\r\n            }\r\n            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n            if (needsVelocity) {\r\n                velocity = velocityAtTime(time);\r\n            }\r\n            expression_function();\r\n            this.frameExpressionId = elem.globalData.frameId;\r\n\r\n\r\n            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n            if (scoped_bm_rt.propType === \"shape\") {\r\n                scoped_bm_rt = scoped_bm_rt.v;\r\n            }\r\n            // globalData.popExpression();\r\n            return scoped_bm_rt;\r\n        }\r\n        return executeExpression;\r\n    }\r\n\r\n    ob.initiateExpression = initiateExpression;\r\n    return ob;\r\n}());\r\nvar expressionHelpers = (function(){\r\n\r\n    function searchExpressions(elem,data,prop){\r\n        if(data.x){\r\n            prop.k = true;\r\n            prop.x = true;\r\n            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n        }\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getSpeedAtTime(frameNum) {\r\n        var delta = -0.01;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var speed = 0;\r\n        if(v1.length){\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                speed += Math.pow(v2[i] - v1[i], 2);\r\n            }\r\n            speed = Math.sqrt(speed) * 100;\r\n        } else {\r\n            speed = 0;\r\n        }\r\n        return speed;\r\n    }\r\n\r\n    function getVelocityAtTime(frameNum) {\r\n        if(this.vel !== undefined){\r\n            return this.vel;\r\n        }\r\n        var delta = -0.001;\r\n        //frameNum += this.elem.data.st;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var velocity;\r\n        if(v1.length){\r\n            velocity = createTypedArray('float32', v1.length);\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                //removing frameRate\r\n                //if needed, don't add it here\r\n                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n                velocity[i] = (v2[i] - v1[i])/delta;\r\n            }\r\n        } else {\r\n            velocity = (v2 - v1)/delta;\r\n        }\r\n        return velocity;\r\n    }\r\n\r\n    function getStaticValueAtTime() {\r\n        return this.pv;\r\n    }\r\n\r\n    function setGroupProperty(propertyGroup){\r\n        this.propertyGroup = propertyGroup;\r\n    }\r\n\r\n\treturn {\r\n\t\tsearchExpressions: searchExpressions,\r\n\t\tgetSpeedAtTime: getSpeedAtTime,\r\n\t\tgetVelocityAtTime: getVelocityAtTime,\r\n\t\tgetValueAtTime: getValueAtTime,\r\n\t\tgetStaticValueAtTime: getStaticValueAtTime,\r\n\t\tsetGroupProperty: setGroupProperty,\r\n\t}\r\n}());\r\n(function addPropertyDecorator() {\r\n\r\n    function loopOut(type,duration,durationFlag){\r\n        if(!this.k || !this.keyframes){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n        if(currentFrame<=lastKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, firstKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n                } else {\r\n                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n                }\r\n                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(iterations % 2 !== 0){\r\n                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n                    }\r\n                    return ret;\r\n                }\r\n                return (endV-initV)*repeats + current;\r\n            } else if(type === 'continue'){\r\n                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(lastValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n            }\r\n            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function loopIn(type,duration, durationFlag) {\r\n        if(!this.k){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var firstKeyFrame = keyframes[0].t;\r\n        if(currentFrame>=firstKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, lastKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                lastKeyFrame = keyframes[duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n                } else {\r\n                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n                }\r\n                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n                if(iterations % 2 === 0){\r\n                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return current-(endV-initV)*repeats;\r\n            } else if(type === 'continue'){\r\n                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(firstValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n            }\r\n            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function smooth(width, samples) {\r\n        if (!this.k){\r\n            return this.pv;\r\n        }\r\n        width = (width || 0.4) * 0.5;\r\n        samples = Math.floor(samples || 5);\r\n        if (samples <= 1) {\r\n            return this.pv;\r\n        }\r\n        var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\r\n        var initFrame = currentTime - width;\r\n        var endFrame = currentTime + width;\r\n        var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\r\n        var i = 0, j = 0;\r\n        var value;\r\n        if (this.pv.length) {\r\n            value = createTypedArray('float32', this.pv.length);\r\n        } else {\r\n            value = 0;\r\n        }\r\n        var sampleValue;\r\n        while (i < samples) {\r\n            sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\r\n            if(this.pv.length) {\r\n                for (j = 0; j < this.pv.length; j += 1) {\r\n                    value[j] += sampleValue[j];\r\n                }\r\n            } else {\r\n                value += sampleValue;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(this.pv.length) {\r\n            for (j = 0; j < this.pv.length; j += 1) {\r\n                value[j] /= samples;\r\n            }\r\n        } else {\r\n            value /= samples;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getTransformValueAtTime(time) {\r\n        console.warn('Transform at time not supported');\r\n    }\r\n\r\n    function getTransformStaticValueAtTime(time) {\r\n\r\n    }\r\n\r\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n        var prop = getTransformProperty(elem, data, container);\r\n        if(prop.dynamicProperties.length) {\r\n            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetProp = PropertyFactory.getProp;\r\n    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n        var prop = propertyGetProp(elem,data,type, mult, container);\r\n        //prop.getVelocityAtTime = getVelocityAtTime;\r\n        //prop.loopOut = loopOut;\r\n        //prop.loopIn = loopIn;\r\n        if(prop.kf){\r\n            prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        prop.loopOut = loopOut;\r\n        prop.loopIn = loopIn;\r\n        prop.smooth = smooth;\r\n        prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\r\n        prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\r\n        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n        prop.propertyIndex = data.ix;\r\n        var value = 0;\r\n        if(type !== 0) {\r\n            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n        }\r\n        prop._cachingAtTime = {\r\n            lastFrame: initialDefaultFrame,\r\n            lastIndex: 0,\r\n            value: value\r\n        };\r\n        expressionHelpers.searchExpressions(elem,data,prop);\r\n        if(prop.k){\r\n            container.addDynamicProperty(prop);\r\n        }\r\n\r\n        return prop;\r\n    };\r\n\r\n    function getShapeValueAtTime(frameNum) {\r\n        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n        if (!this._cachingAtTime) {\r\n            this._cachingAtTime = {\r\n                shapeValue: shape_pool.clone(this.pv),\r\n                lastIndex: 0,\r\n                lastTime: initialDefaultFrame\r\n            };\r\n        }\r\n        \r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastTime) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\r\n            this._cachingAtTime.lastTime = frameNum;\r\n            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n        }\r\n        return this._cachingAtTime.shapeValue;\r\n    }\r\n\r\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\r\n    function ShapeExpressions(){}\r\n    ShapeExpressions.prototype = {\r\n        vertices: function(prop, time){\r\n            if (this.k) {\r\n                this.getValue();\r\n            }\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            var i, len = shapePath._length;\r\n            var vertices = shapePath[prop];\r\n            var points = shapePath.v;\r\n            var arr = createSizedArray(len);\r\n            for(i = 0; i < len; i += 1) {\r\n                if(prop === 'i' || prop === 'o') {\r\n                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n                } else {\r\n                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n                }\r\n                \r\n            }\r\n            return arr;\r\n        },\r\n        points: function(time){\r\n            return this.vertices('v', time);\r\n        },\r\n        inTangents: function(time){\r\n            return this.vertices('i', time);\r\n        },\r\n        outTangents: function(time){\r\n            return this.vertices('o', time);\r\n        },\r\n        isClosed: function(){\r\n            return this.v.c;\r\n        },\r\n        pointOnPath: function(perc, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            if(!this._segmentsLength) {\r\n                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n            }\r\n\r\n            var segmentsLength = this._segmentsLength;\r\n            var lengths = segmentsLength.lengths;\r\n            var lengthPos = segmentsLength.totalLength * perc;\r\n            var i = 0, len = lengths.length;\r\n            var j = 0, jLen;\r\n            var accumulatedLength = 0, pt;\r\n            while(i < len) {\r\n                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n                    var initIndex = i;\r\n                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n                    break;\r\n                } else {\r\n                    accumulatedLength += lengths[i].addedLength;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(!pt){\r\n                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n            }\r\n            return pt;\r\n        },\r\n        vectorOnPath: function(perc, time, vectorType){\r\n            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n            var pt1 = this.pointOnPath(perc, time);\r\n            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n            var xLength = pt2[0] - pt1[0];\r\n            var yLength = pt2[1] - pt1[1];\r\n            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n            return unitVector;\r\n        },\r\n        tangentOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'tangent');\r\n        },\r\n        normalOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'normal');\r\n        },\r\n        setGroupProperty: expressionHelpers.setGroupProperty,\r\n        getValueAtTime: expressionHelpers.getStaticValueAtTime\r\n    };\r\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\r\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n        prop.propertyIndex = data.ix;\r\n        prop.lock = false;\r\n        if(type === 3){\r\n            expressionHelpers.searchExpressions(elem,data.pt,prop);\r\n        } else if(type === 4){\r\n            expressionHelpers.searchExpressions(elem,data.ks,prop);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    };\r\n}());\r\n(function addDecorator() {\r\n\r\n    function searchExpressions(){\r\n        if(this.data.d.x){\r\n            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n            this.addEffect(this.getExpressionValue.bind(this));\r\n            return true;\r\n        }\r\n    }\r\n\r\n    TextProperty.prototype.getExpressionValue = function(currentValue, text) {\r\n        var newValue = this.calculateExpression(text);\r\n        if(currentValue.t !== newValue) {\r\n            var newData = {};\r\n            this.copyData(newData, currentValue);\r\n            newData.t = newValue.toString();\r\n            newData.__complete = false;\r\n            return newData;\r\n        }\r\n        return currentValue;\r\n    }\r\n\r\n    TextProperty.prototype.searchProperty = function(){\r\n\r\n        var isKeyframed = this.searchKeyframes();\r\n        var hasExpressions = this.searchExpressions();\r\n        this.kf = isKeyframed || hasExpressions;\r\n        return this.kf;\r\n    };\r\n\r\n    TextProperty.prototype.searchExpressions = searchExpressions;\r\n    \r\n}());\r\nvar ShapeExpressionInterface = (function(){\r\n\r\n    function iterateElements(shapes,view, propertyGroup){\r\n        var arr = [];\r\n        var i, len = shapes ? shapes.length : 0;\r\n        for(i=0;i<len;i+=1){\r\n            if(shapes[i].ty == 'gr'){\r\n                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'fl'){\r\n                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'st'){\r\n                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tm'){\r\n                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tr'){\r\n                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'el'){\r\n                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'sr'){\r\n                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'sh'){\r\n                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rc'){\r\n                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rd'){\r\n                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rp'){\r\n                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n       var interfaces;\r\n       var interfaceFunction = function _interfaceFunction(value){\r\n           var i = 0, len = interfaces.length;\r\n            while(i<len){\r\n                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n                   return interfaces[i];\r\n                }\r\n                i+=1;\r\n            }\r\n            if(typeof value === 'number'){\r\n               return interfaces[value-1];\r\n            }\r\n       };\r\n       interfaceFunction.propertyGroup = function(val){\r\n           if(val === 1){\r\n               return interfaceFunction;\r\n           } else{\r\n               return propertyGroup(val-1);\r\n           }\r\n       };\r\n       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n       interfaceFunction.numProperties = interfaces.length;\r\n       interfaceFunction.propertyIndex = shape.cix;\r\n       interfaceFunction._name = shape.nm;\r\n\r\n       return interfaceFunction;\r\n   }\r\n\r\n    function groupInterfaceFactory(shape,view, propertyGroup){\r\n        var interfaceFunction = function _interfaceFunction(value){\r\n            switch(value){\r\n                case 'ADBE Vectors Group':\r\n                case 'Contents':\r\n                case 2:\r\n                    return interfaceFunction.content;\r\n                //Not necessary for now. Keeping them here in case a new case appears\r\n                //case 'ADBE Vector Transform Group':\r\n                //case 3:\r\n                default:\r\n                    return interfaceFunction.transform;\r\n            }\r\n        };\r\n        interfaceFunction.propertyGroup = function(val){\r\n            if(val === 1){\r\n                return interfaceFunction;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        };\r\n        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n        interfaceFunction.content = content;\r\n        interfaceFunction.transform = transformInterface;\r\n        Object.defineProperty(interfaceFunction, '_name', {\r\n            get: function(){\r\n                return shape.nm;\r\n            }\r\n        });\r\n        //interfaceFunction.content = interfaceFunction;\r\n        interfaceFunction.numProperties = shape.np;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.nm = shape.nm;\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function fillInterfaceFactory(shape,view,propertyGroup){\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(propertyGroup);\r\n        view.o.setGroupProperty(propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val === 1){\r\n                return ob;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        }\r\n        function _dashPropertyGroup(val){\r\n            if(val === 1){\r\n                return dashOb;\r\n            } else{\r\n                return _propertyGroup(val-1);\r\n            }\r\n        }\r\n        function addPropertyToDashOb(i) {\r\n            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n                get: ExpressionPropertyInterface(view.d.dataProps[i].p)\r\n            });\r\n        }\r\n        var i, len = shape.d ? shape.d.length : 0;\r\n        var dashOb = {};\r\n        for (i = 0; i < len; i += 1) {\r\n            addPropertyToDashOb(i);\r\n            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n                return interfaceFunction.strokeWidth;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            'strokeWidth': {\r\n                get: ExpressionPropertyInterface(view.w)\r\n            },\r\n            'dash': {\r\n                get: function() {\r\n                    return dashOb;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n        view.w.setGroupProperty(_propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function trimInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        view.s.setGroupProperty(_propertyGroup);\r\n        view.e.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n                return interfaceFunction.end;\r\n            }\r\n            if(val === shape.s.ix){\r\n                return interfaceFunction.start;\r\n            }\r\n            if(val === shape.o.ix){\r\n                return interfaceFunction.offset;\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'start': {\r\n                get: ExpressionPropertyInterface(view.s)\r\n            },\r\n            'end': {\r\n                get: ExpressionPropertyInterface(view.e)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function transformInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n        if(view.transform.mProps.sk){\r\n            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n        }\r\n        view.transform.op.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.a.ix === value || value === 'Anchor Point'){\r\n                return interfaceFunction.anchorPoint;\r\n            }\r\n            if(shape.o.ix === value || value === 'Opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n            if(shape.p.ix === value || value === 'Position'){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.s.ix === value || value === 'Scale'){\r\n                return interfaceFunction.scale;\r\n            }\r\n            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n                return interfaceFunction.skew;\r\n            }\r\n            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n                return interfaceFunction.skewAxis;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.o)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.p)\r\n            },\r\n            'anchorPoint': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.a)\r\n            },\r\n            'scale': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.s)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.r)\r\n            },\r\n            'skew': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sk)\r\n            },\r\n            'skewAxis': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sa)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.ty = 'tr';\r\n        interfaceFunction.mn = shape.mn;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.s.ix === value){\r\n                return interfaceFunction.size;\r\n            }\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function starInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.or.setGroupProperty(_propertyGroup);\r\n        prop.os.setGroupProperty(_propertyGroup);\r\n        prop.pt.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n        if(shape.ir){\r\n            prop.ir.setGroupProperty(_propertyGroup);\r\n            prop.is.setGroupProperty(_propertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.pt.ix === value){\r\n                return interfaceFunction.points;\r\n            }\r\n            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n                return interfaceFunction.outerRadius;\r\n            }\r\n            if(shape.os.ix === value){\r\n                return interfaceFunction.outerRoundness;\r\n            }\r\n            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n                return interfaceFunction.innerRadius;\r\n            }\r\n            if(shape.is && shape.is.ix === value){\r\n                return interfaceFunction.innerRoundness;\r\n            }\r\n\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'points': {\r\n                get: ExpressionPropertyInterface(prop.pt)\r\n            },\r\n            'outerRadius': {\r\n                get: ExpressionPropertyInterface(prop.or)\r\n            },\r\n            'outerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.os)\r\n            },\r\n            'innerRadius': {\r\n                get: ExpressionPropertyInterface(prop.ir)\r\n            },\r\n            'innerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.is)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function rectInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.roundness;\r\n            }\r\n            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n                return interfaceFunction.size;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'roundness': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.rd.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n                return interfaceFunction.radius;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'radius': {\r\n                get: ExpressionPropertyInterface(prop.rd)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.c.setGroupProperty(_propertyGroup);\r\n        prop.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.c.ix === value || 'Copies' === value){\r\n                return interfaceFunction.copies;\r\n            } else if(shape.o.ix === value || 'Offset' === value){\r\n                return interfaceFunction.offset;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'copies': {\r\n                get: ExpressionPropertyInterface(prop.c)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(prop.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function pathInterfaceFactory(shape,view,propertyGroup){\r\n        var prop = view.sh;\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        prop.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n                return interfaceFunction.path;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'path': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            'shape': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'ix': { value: shape.ix },\r\n            'mn': { value: shape.mn }\r\n        });\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return function(shapes,view,propertyGroup) {\r\n        var interfaces;\r\n        function _interfaceFunction(value){\r\n            if(typeof value === 'number'){\r\n                return interfaces[value-1];\r\n            } else {\r\n                var i = 0, len = interfaces.length;\r\n                while(i<len){\r\n                    if(interfaces[i]._name === value){\r\n                        return interfaces[i];\r\n                    }\r\n                    i+=1;\r\n                }\r\n            }\r\n        }\r\n        _interfaceFunction.propertyGroup = propertyGroup;\r\n        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n        _interfaceFunction.numProperties = interfaces.length;\r\n        return _interfaceFunction;\r\n    };\r\n}());\r\n\r\nvar TextExpressionInterface = (function(){\r\n\treturn function(elem){\r\n        var _prevValue, _sourceText;\r\n        function _thisLayerFunction(){\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n            get: function(){\r\n                elem.textProperty.getValue()\r\n                var stringValue = elem.textProperty.currentData.t;\r\n                if(stringValue !== _prevValue) {\r\n                    elem.textProperty.currentData.t = _prevValue;\r\n                    _sourceText = new String(stringValue);\r\n                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n                }\r\n                return _sourceText;\r\n            }\r\n        });\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar LayerExpressionInterface = (function (){\r\n    function toWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n        }\r\n        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n    }\r\n    function fromWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n    function fromComp(arr){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n\r\n    function sampleImage() {\r\n        return [1,1,1,1];\r\n    }\r\n\r\n\r\n    return function(elem){\r\n\r\n        var transformInterface;\r\n\r\n        function _registerMaskInterface(maskManager){\r\n            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n        }\r\n        function _registerEffectsInterface(effects){\r\n            _thisLayerFunction.effect = effects;\r\n        }\r\n\r\n        function _thisLayerFunction(name){\r\n            switch(name){\r\n                case \"ADBE Root Vectors Group\":\r\n                case \"Contents\":\r\n                case 2:\r\n                    return _thisLayerFunction.shapeInterface;\r\n                case 1:\r\n                case 6:\r\n                case \"Transform\":\r\n                case \"transform\":\r\n                case \"ADBE Transform Group\":\r\n                    return transformInterface;\r\n                case 4:\r\n                case \"ADBE Effect Parade\":\r\n                case \"effects\":\r\n                case \"Effects\":\r\n                    return _thisLayerFunction.effect;\r\n            }\r\n        }\r\n        _thisLayerFunction.toWorld = toWorld;\r\n        _thisLayerFunction.fromWorld = fromWorld;\r\n        _thisLayerFunction.toComp = toWorld;\r\n        _thisLayerFunction.fromComp = fromComp;\r\n        _thisLayerFunction.sampleImage = sampleImage;\r\n        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n        _thisLayerFunction._elem = elem;\r\n        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n        Object.defineProperties(_thisLayerFunction,{\r\n            hasParent: {\r\n                get: function(){\r\n                    return elem.hierarchy.length;\r\n                }\r\n            },\r\n            parent: {\r\n                get: function(){\r\n                    return elem.hierarchy[0].layerInterface;\r\n                }\r\n            },\r\n            rotation: getDescriptor(transformInterface, 'rotation'),\r\n            scale: getDescriptor(transformInterface, 'scale'),\r\n            position: getDescriptor(transformInterface, 'position'),\r\n            opacity: getDescriptor(transformInterface, 'opacity'),\r\n            anchorPoint: anchorPointDescriptor,\r\n            anchor_point: anchorPointDescriptor,\r\n            transform: {\r\n                get: function () {\r\n                    return transformInterface;\r\n                }\r\n            },\r\n            active: {\r\n                get: function(){\r\n                    return elem.isInRange;\r\n                }\r\n            }\r\n        });\r\n\r\n        _thisLayerFunction.startTime = elem.data.st;\r\n        _thisLayerFunction.index = elem.data.ind;\r\n        _thisLayerFunction.source = elem.data.refId;\r\n        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n        _thisLayerFunction.inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction.outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction._name = elem.data.nm;\r\n\r\n        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\n\r\nvar CompExpressionInterface = (function (){\r\n    return function(comp){\r\n        function _thisLayerFunction(name){\r\n            var i=0, len = comp.layers.length;\r\n            while(i<len){\r\n                if(comp.layers[i].nm === name || comp.layers[i].ind === name){\r\n                    return comp.elements[i].layerInterface;\r\n                }\r\n                i += 1;\r\n            }\r\n            return null;\r\n            //return {active:false};\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"_name\", { value:comp.data.nm });\r\n        _thisLayerFunction.layer = _thisLayerFunction;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\r\n        _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.frameDuration = 1/comp.globalData.frameRate;\r\n        _thisLayerFunction.displayStartTime = 0;\r\n        _thisLayerFunction.numLayers = comp.layers.length;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar TransformExpressionInterface = (function (){\r\n    return function(transform){\r\n        function _thisFunction(name){\r\n            switch(name){\r\n                case \"scale\":\r\n                case \"Scale\":\r\n                case \"ADBE Scale\":\r\n                case 6:\r\n                    return _thisFunction.scale;\r\n                case \"rotation\":\r\n                case \"Rotation\":\r\n                case \"ADBE Rotation\":\r\n                case \"ADBE Rotate Z\":\r\n                case 10:\r\n                    return _thisFunction.rotation;\r\n                case \"ADBE Rotate X\":\r\n                    return _thisFunction.xRotation;\r\n                case \"ADBE Rotate Y\":\r\n                    return _thisFunction.yRotation;\r\n                case \"position\":\r\n                case \"Position\":\r\n                case \"ADBE Position\":\r\n                case 2:\r\n                    return _thisFunction.position;\r\n                case 'ADBE Position_0':\r\n                    return _thisFunction.xPosition;\r\n                case 'ADBE Position_1':\r\n                    return _thisFunction.yPosition;\r\n                case 'ADBE Position_2':\r\n                    return _thisFunction.zPosition;\r\n                case \"anchorPoint\":\r\n                case \"AnchorPoint\":\r\n                case \"Anchor Point\":\r\n                case \"ADBE AnchorPoint\":\r\n                case 1:\r\n                    return _thisFunction.anchorPoint;\r\n                case \"opacity\":\r\n                case \"Opacity\":\r\n                case 11:\r\n                    return _thisFunction.opacity;\r\n            }\r\n        }\r\n\r\n        Object.defineProperty(_thisFunction, \"rotation\", {\r\n            get: ExpressionPropertyInterface(transform.r || transform.rz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rz || transform.r)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rx)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n            get: ExpressionPropertyInterface(transform.ry)\r\n        });\r\n        Object.defineProperty(_thisFunction, \"scale\", {\r\n            get: ExpressionPropertyInterface(transform.s)\r\n        });\r\n\r\n        if(transform.p) {\r\n            var _transformFactory = ExpressionPropertyInterface(transform.p);\r\n        }\r\n        Object.defineProperty(_thisFunction, \"position\", {\r\n            get: function () {\r\n                if(transform.p) {\r\n                    return _transformFactory();\r\n                } else {\r\n                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n            get: ExpressionPropertyInterface(transform.px)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n            get: ExpressionPropertyInterface(transform.py)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n            get: ExpressionPropertyInterface(transform.pz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n            get: ExpressionPropertyInterface(transform.a)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"opacity\", {\r\n            get: ExpressionPropertyInterface(transform.o)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skew\", {\r\n            get: ExpressionPropertyInterface(transform.sk)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n            get: ExpressionPropertyInterface(transform.sa)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"orientation\", {\r\n            get: ExpressionPropertyInterface(transform.or)\r\n        });\r\n\r\n        return _thisFunction;\r\n    };\r\n}());\r\nvar ProjectInterface = (function (){\r\n\r\n    function registerComposition(comp){\r\n        this.compositions.push(comp);\r\n    }\r\n\r\n    return function(){\r\n        function _thisProjectFunction(name){\r\n            var i = 0, len = this.compositions.length;\r\n            while(i<len){\r\n                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n                    if(this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\r\n                        this.compositions[i].prepareFrame(this.currentFrame);\r\n                    }\r\n                    return this.compositions[i].compInterface;\r\n                }\r\n                i+=1;\r\n            }\r\n        }\r\n\r\n        _thisProjectFunction.compositions = [];\r\n        _thisProjectFunction.currentFrame = 0;\r\n\r\n        _thisProjectFunction.registerComposition = registerComposition;\r\n\r\n\r\n\r\n        return _thisProjectFunction;\r\n    };\r\n}());\r\nvar EffectsExpressionInterface = (function (){\r\n    var ob = {\r\n        createEffectsInterface: createEffectsInterface\r\n    };\r\n\r\n    function createEffectsInterface(elem, propertyGroup){\r\n        if(elem.effectsManager){\r\n\r\n            var effectElements = [];\r\n            var effectsData = elem.data.ef;\r\n            var i, len = elem.effectsManager.effectElements.length;\r\n            for(i=0;i<len;i+=1){\r\n                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n            }\r\n\r\n            return function(name){\r\n                var effects = elem.data.ef || [], i = 0, len = effects.length;\r\n                while(i<len) {\r\n                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                        return effectElements[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    function createGroupInterface(data,elements, propertyGroup, elem){\r\n        var effectElements = [];\r\n        var i, len = data.ef.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(data.ef[i].ty === 5){\r\n                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n            } else {\r\n                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n            }\r\n        }\r\n\r\n        function _propertyGroup(val) {\r\n            if(val === 1){\r\n               return groupInterface;\r\n            } else{\r\n               return propertyGroup(val-1);\r\n            }\r\n        }\r\n\r\n        var groupInterface = function(name){\r\n            var effects = data.ef, i = 0, len = effects.length;\r\n            while(i<len) {\r\n                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                    if(effects[i].ty === 5){\r\n                        return effectElements[i];\r\n                    } else {\r\n                        return effectElements[i]();\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return effectElements[0]();\r\n        };\r\n\r\n        groupInterface.propertyGroup = _propertyGroup;\r\n\r\n        if(data.mn === 'ADBE Color Control'){\r\n            Object.defineProperty(groupInterface, 'color', {\r\n                get: function(){\r\n                    return effectElements[0]();\r\n                }\r\n            });\r\n        }\r\n        Object.defineProperty(groupInterface, 'numProperties', {\r\n            get: function(){\r\n                return data.np;\r\n            }\r\n        });\r\n        groupInterface.active = groupInterface.enabled = data.en !== 0;\r\n        return groupInterface;\r\n    }\r\n\r\n    function createValueInterface(element, type, elem, propertyGroup){\r\n        var expressionProperty = ExpressionPropertyInterface(element.p);\r\n        function interfaceFunction(){\r\n            if(type === 10){\r\n                return elem.comp.compInterface(element.p.v);\r\n            }\r\n            return expressionProperty();\r\n        }\r\n\r\n        if(element.p.setGroupProperty) {\r\n            element.p.setGroupProperty(propertyGroup);\r\n        }\r\n\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return ob;\r\n\r\n}());\r\nvar MaskManagerInterface = (function(){\r\n\r\n\tfunction MaskInterface(mask, data){\r\n\t\tthis._mask = mask;\r\n\t\tthis._data = data;\r\n\t}\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n        get: function(){\r\n                if(this._mask.prop.k){\r\n                    this._mask.prop.getValue();\r\n                }\r\n                return this._mask.prop;\r\n            }\r\n        });\r\n\r\n\tvar MaskManager = function(maskManager, elem){\r\n\t\tvar _maskManager = maskManager;\r\n\t\tvar _elem = elem;\r\n\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\tvar i, len = maskManager.viewData.length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t}\r\n\r\n\t\tvar maskFunction = function(name){\r\n\t\t\ti = 0;\r\n\t\t    while(i<len){\r\n\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t            return _masksInterfaces[i];\r\n\t\t        }\r\n\t\t        i += 1;\r\n\t\t    }\r\n\t\t};\r\n\t\treturn maskFunction;\r\n\t};\r\n\treturn MaskManager;\r\n}());\r\n\r\nvar ExpressionPropertyInterface = (function() {\r\n\r\n    var defaultUnidimensionalValue = {pv:0, v:0, mult: 1}\r\n    var defaultMultidimensionalValue = {pv:[0,0,0], v:[0,0,0], mult: 1}\r\n\r\n    function completeProperty(expressionValue, property, type) {\r\n        Object.defineProperty(expressionValue, 'velocity', {\r\n            get: function(){\r\n                return property.getVelocityAtTime(property.comp.currentFrame);\r\n            }\r\n        });\r\n        expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\r\n        expressionValue.key = function(pos) {\r\n            if (!expressionValue.numKeys) {\r\n                return 0;\r\n            } else {\r\n                var value = '';\r\n                if ('s' in property.keyframes[pos-1]) {\r\n                    value = property.keyframes[pos-1].s;\r\n                } else if ('e' in property.keyframes[pos-2]) {\r\n                    value = property.keyframes[pos-2].e;\r\n                } else {\r\n                    value = property.keyframes[pos-2].s;\r\n                }\r\n                var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);\r\n                valueProp.time = property.keyframes[pos-1].t / property.elem.comp.globalData.frameRate;\r\n                return valueProp;\r\n            }\r\n        };\r\n        expressionValue.valueAtTime = property.getValueAtTime;\r\n        expressionValue.speedAtTime = property.getSpeedAtTime;\r\n        expressionValue.velocityAtTime = property.getVelocityAtTime;\r\n        expressionValue.propertyGroup = property.propertyGroup;\r\n    }\r\n\r\n    function UnidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultUnidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var val = property.pv * mult;\r\n        var expressionValue = new Number(val);\r\n        expressionValue.value = val;\r\n        completeProperty(expressionValue, property, 'unidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            val = property.v * mult;\r\n            if(expressionValue.value !== val) {\r\n                expressionValue = new Number(val);\r\n                expressionValue.value = val;\r\n                completeProperty(expressionValue, property, 'unidimensional');\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    function MultidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultMultidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var len = property.pv.length;\r\n        var expressionValue = createTypedArray('float32', len);\r\n        var arrValue = createTypedArray('float32', len);\r\n        expressionValue.value = arrValue;\r\n        completeProperty(expressionValue, property, 'multidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            for (var i = 0; i < len; i += 1) {\r\n                expressionValue[i] = arrValue[i] = property.v[i] * mult;\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    //TODO: try to avoid using this getter\r\n    function defaultGetter() {\r\n        return defaultUnidimensionalValue;\r\n    }\r\n    \r\n    return function(property) {\r\n        if(!property) {\r\n            return defaultGetter;\r\n        } else if (property.propType === 'unidimensional') {\r\n            return UnidimensionalPropertyInterface(property);\r\n        } else {\r\n            return MultidimensionalPropertyInterface(property);\r\n        }\r\n    }\r\n}());\r\n\r\n(function(){\r\n\r\n    var TextExpressionSelectorProp = (function(){\r\n\r\n        function getValueProxy(index,total){\r\n            this.textIndex = index+1;\r\n            this.textTotal = total;\r\n            this.v = this.getValue() * this.mult;\r\n            return this.v;\r\n        }\r\n\r\n        return function TextExpressionSelectorProp(elem,data){\r\n            this.pv = 1;\r\n            this.comp = elem.comp;\r\n            this.elem = elem;\r\n            this.mult = 0.01;\r\n            this.propType = 'textSelector';\r\n            this.textTotal = data.totalChars;\r\n            this.selectorValue = 100;\r\n            this.lastValue = [1,1,1];\r\n            this.k = true;\r\n            this.x = true;\r\n            this.getValue = ExpressionManager.initiateExpression.bind(this)(elem,data,this);\r\n            this.getMult = getValueProxy;\r\n            this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;\r\n            if(this.kf){\r\n                this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);\r\n            } else {\r\n                this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);\r\n            }\r\n            this.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        };\r\n    }());\r\n\r\n\tvar propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n\tTextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n\t    if(data.t === 1){\r\n\t        return new TextExpressionSelectorProp(elem, data,arr);\r\n\t    } else {\r\n\t        return propertyGetTextProp(elem,data,arr);\r\n\t    }\r\n\t};\r\n}());\r\nfunction SliderEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction AngleEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction ColorEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction PointEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction LayerIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction MaskIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction CheckboxEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction NoValueEffect(){\r\n    this.p = {};\r\n}\r\nfunction EffectsManager(){}\r\nfunction EffectsManager(data,element){\r\n    var effects = data.ef || [];\r\n    this.effectElements = [];\r\n    var i,len = effects.length;\r\n    var effectItem;\r\n    for(i=0;i<len;i++) {\r\n        effectItem = new GroupEffect(effects[i],element);\r\n        this.effectElements.push(effectItem);\r\n    }\r\n}\r\n\r\nfunction GroupEffect(data,element){\r\n    this.init(data,element);\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], GroupEffect);\r\n\r\nGroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\r\n\r\nGroupEffect.prototype.init = function(data,element){\r\n    this.data = data;\r\n    this.effectElements = [];\r\n    this.initDynamicPropertyContainer(element);\r\n    var i, len = this.data.ef.length;\r\n    var eff, effects = this.data.ef;\r\n    for(i=0;i<len;i+=1){\r\n        eff = null;\r\n        switch(effects[i].ty){\r\n            case 0:\r\n                eff = new SliderEffect(effects[i],element,this);\r\n                break;\r\n            case 1:\r\n                eff = new AngleEffect(effects[i],element,this);\r\n                break;\r\n            case 2:\r\n                eff = new ColorEffect(effects[i],element,this);\r\n                break;\r\n            case 3:\r\n                eff = new PointEffect(effects[i],element,this);\r\n                break;\r\n            case 4:\r\n            case 7:\r\n                eff = new CheckboxEffect(effects[i],element,this);\r\n                break;\r\n            case 10:\r\n                eff = new LayerIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 11:\r\n                eff = new MaskIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 5:\r\n                eff = new EffectsManager(effects[i],element,this);\r\n                break;\r\n            //case 6:\r\n            default:\r\n                eff = new NoValueEffect(effects[i],element,this);\r\n                break;\r\n        }\r\n        if(eff) {\r\n            this.effectElements.push(eff);\r\n        }\r\n    }\r\n};\r\n\r\n    var lottiejs = {};\r\n\r\n    var _isFrozen = false;\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n\r\n    lottiejs.play = animationManager.play;\r\n    lottiejs.pause = animationManager.pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = animationManager.togglePause;\r\n    lottiejs.setSpeed = animationManager.setSpeed;\r\n    lottiejs.setDirection = animationManager.setDirection;\r\n    lottiejs.stop = animationManager.stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = animationManager.registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = animationManager.resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = animationManager.goToAndStop;\r\n    lottiejs.destroy = animationManager.destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.freeze = animationManager.freeze;\r\n    lottiejs.unfreeze = animationManager.unfreeze;\r\n    lottiejs.getRegisteredAnimations = animationManager.getRegisteredAnimations;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.5.2';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lottie-web/build/player/lottie.js\n// module id = 9\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"lottie\",staticClass:\"lottie\",class:_vm.className})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-681021d8\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/VueLottieWeb/VueLottieWeb.vue\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}