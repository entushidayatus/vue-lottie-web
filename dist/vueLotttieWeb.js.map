{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vueLotttieWeb.js","webpack:///webpack/bootstrap 091cd834ddfe2dd72486","webpack:///src/VueLottieWeb/VueLottieWeb.vue","webpack:///./src/VueLottieWeb/index.js","webpack:///./src/VueLottieWeb/VueLottieWeb.vue","webpack:///./src/VueLottieWeb/VueLottieWeb.vue?4d69","webpack:///./src/VueLottieWeb/VueLottieWeb.vue?193d","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/lottie-web/build/player/lottie.js","webpack:///./src/VueLottieWeb/VueLottieWeb.vue?8872"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_lottie_web__","__WEBPACK_IMPORTED_MODULE_0_lottie_web___default","data","instance","props","className","type","String","default","renderer","loop","Boolean","autoplay","animationData","path","methods","extendMethods","customReplay","stop","setTimeout","play","transEvents","_this","forEach","keyName","e","$emit","mounted","paramsInfo","container","$refs","lottie","Error","a","loadAnimation","value","__WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__","Lottie","install","Vue","component","injectStyle","ssrContext","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueLottieWeb_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c29e0614_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueLottieWeb_vue__","normalizeComponent","__vue_styles__","Component","content","locals","push","cssWithMappingToString","item","useSourceMap","cssMapping","btoa","sourceMapping","toComment","concat","sources","map","source","sourceRoot","join","sourceMap","unescape","encodeURIComponent","JSON","stringify","list","toString","mediaQuery","alreadyImportedModules","length","id","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","createStyleElement","styleElement","document","createElement","head","appendChild","obj","update","remove","querySelector","ssrIdKey","isProduction","noop","parentNode","removeChild","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","css","media","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","options","ssrId","firstChild","hasDocument","DEBUG","listToStyles","getElementsByTagName","navigator","test","userAgent","toLowerCase","parentId","_isProduction","_options","newList","mayRemove","textStore","replacement","filter","newStyles","part","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","render","staticRenderFns","_compiled","functional","_scopeId","hook","context","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","existing","beforeCreate","_injectStyles","h","__WEBPACK_AMD_DEFINE_RESULT__","undefined","window","ProjectInterface","roundValues","flag","bm_rnd","Math","round","val","styleDiv","element","style","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","t","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","HSVtoRGB","v","r","g","b","q","floor","RGBtoHSV","max","min","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","BaseEvent","createSizedArray","len","Array","apply","createNS","createElementNS","svgNS","createTag","DynamicPropertyContainer","extendPrototype","destination","sourcePrototype","attr","getDescriptor","prop","getOwnPropertyDescriptor","createProxyFunction","ProxyFunction","bezFunction","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","diffDist","dist1","sqrt","pow","dist2","dist3","getSegmentsLength","shapeData","segmentsLength","segments_length_pool","newElement","closed","pathV","pathO","pathI","_length","lengths","totalLength","getBezierLength","addedLength","BezierData","segmentLength","points","PointData","partial","point","partialLength","getDistancePerc","perc","bezierData","percents","initPos","bm_floor","lengthPos","lPerc","dir","getPointInSegment","pt1","pt2","pt3","pt4","percent","t1","u1","getNewSegment","startPerc","endPerc","t0","u0","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","bezier_segment_points","k","ptCoord","ptDistance","curveSegments","defaultCurveSegments","lastPoint","lengthData","bezier_length_pool","bm_pow","bm_sqrt","buildBezierData","storedData","bezierName","replace","createTypedArray","dataFunctionManager","completeLayers","layers","comps","fontManager","layerData","jLen","kLen","completed","tt","td","hasMask","maskProps","masksProperties","pt","convertPathsToAbsoluteValues","ty","findCompLayers","refId","completeShapes","shapes","completeText","__used","parse","arr","ks","it","checkVersion","minimum","animVersionString","animVersion","split","completeData","__complete","checkColors","checkText","checkChars","checkShapes","assets","singleShape","updateTextLayer","textLayer","documentData","iterateLayers","minimumVersion","chars","pathData","paths","__converted","iterateShapes","cl","moduleOb","ShapePath","_maxLength","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","DashProperty","elem","frameId","dataProps","dashStr","dashArray","dashoffset","initDynamicPropertyContainer","PropertyFactory","getProp","getValue","_isAnimated","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","TextAnimatorProperty","textData","renderType","_isFirstFrame","_hasMaskedPath","_frameId","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","defaultData","propType","textAnimator_animatables","degToRads","rx","ry","sk","sa","sw","sc","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","_mdf","TextProperty","initialDefaultFrame","pv","kf","comp","keysIndex","canResize","minimumFontSize","effectsSequence","currentData","ascent","boxWidth","defaultBoxWidth","fStyle","fWeight","justifyOffset","lh","lineWidths","ls","of","tr","sz","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","searchProperty","completeTextData","BaseRenderer","SVGRenderer","animationItem","config","renderedFrame","svgElement","ariaLabel","title","titleElement","titleId","createElementID","textContent","description","descElement","descId","defs","maskElement","layerElement","renderConfig","preserveAspectRatio","imagePreserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","globalData","frameNum","elements","pendingElements","destroyed","rendererType","CanvasRenderer","clearCanvas","dpr","wrapper","devicePixelRatio","currentGlobalAlpha","contextData","CVContextData","transformMat","Matrix","HybridRenderer","threeDElements","camera","supports3d","MaskElement","viewData","solidPath","rect","expansor","feMorph","x","properties","count","currentMasks","layerId","maskType","maskRef","mode","inv","w","filterID","expan","lastPath","lastOperator","filterId","lastRadius","mask","locationHref","createLayerSolidPath","op","ShapePropertyFactory","getShapeProp","invRect","drawPath","maskedElement","addRenderableComponent","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","pos","SVGStyleData","level","lvl","hd","pElem","msElem","SVGShapeData","transformers","shape","caches","lStr","sh","mProps","dynamicProperties","SVGTransformData","transform","SVGStrokeStyleData","styleOb","iterateDynamicProperties","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","ShapeTransformManager","sequences","sequenceList","transform_key_count","CVShapeData","transformsManager","styledShapes","styledShape","transforms","addTransformSequence","trNodes","BaseElement","NullElement","initFrame","initBaseData","initTransform","initHierarchy","SVGBaseElement","IShapeElement","ITextElement","ICompElement","IImageElement","assetData","getAssetData","initElement","sourceRect","width","height","ISolidElement","SVGCompElement","tm","frameRate","_placeholder","SVGTextElement","textSpans","SVGShapeElement","shapesData","stylesList","shapeModifiers","itemsData","processedElements","animatedContents","SVGTintFilter","filterManager","feColorMatrix","matrixFilter","effectElements","feMerge","feMergeNode","SVGFillFilter","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","SVGMatte3Effect","filterElem","matteElement","transformedElement","baseElement","SVGEffects","ef","filId","fil","filtersFactory","createFilter","filters","effectsManager","saved","cArrPos","cTr","cO","savedOp","CVBaseElement","CVImageElement","failed","img","imageLoader","getImage","CVCompElement","CVMaskElement","hasMasks","CVShapeElement","CVSolidElement","CVTextElement","stroke","fill","currentRender","values","sWidth","fValue","CVEffects","HBaseElement","HSolidElement","HCompElement","HShapeElement","shapesContainer","currentBBox","y","HTextElement","textPaths","isMasked","HImageElement","HCameraElement","pe","px","py","pz","z","or","to","ti","rz","mat","_prevMat","finalTransform","mProp","HEffects","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","EffectsManager","effects","effectItem","GroupEffect","init","setLocationHref","href","searchAnimations","standalone","animationManager","setSubframeRendering","subframeEnabled","params","setQuality","isNaN","inBrowser","installPlugin","plugin","expressionsPlugin","getFactory","checkReady","readyState","clearInterval","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","isSafari","cachedColors","bm_rounder","bm_abs","abs","bm_max","bm_min","blitter","BMMath","propertyNames","random","absArr","PI","roundCorner","_count","rgbToHex","hex","colorMap","triggerEvent","eventName","args","_cbs","addEventListener","callback","removeEventListener","splice","createRegularArray","Float32Array","Int16Array","Uint8ClampedArray","addDynamicProperty","indexOf","getBlendMode","blendModeEnums","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","reset","rotate","angle","mCos","_cos","mSin","_sin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","_tan","skewFromAxis","scale","setTransform","translate","tx","tz","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","applyToX","applyToY","applyToZ","inversePoint","determinant","inversePoints","pts","retPts","applyToTriplePoints","p0","p4","p5","p12","p13","applyToPointArray","applyToPointStringified","toCSS","cssValue","_rnd","roundMatrixProperty","to2dCSS","cos","sin","tan","pool","math","seedrandom","seed","key","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","chunks","startdenom","significance","overflow","int32","quick","double","S","pass","is_math_call","state","copy","rngname","global","keylen","me","slice","depth","result","typ","smear","stringseed","charCodeAt","nodecrypto","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","fromCharCode","BezierFactory","getBezierEasing","nm","str","beziers","bezEasing","BezierEasing","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","newtonRaphsonIterate","aGuessT","NEWTON_ITERATIONS","currentSlope","_mSampleValues","float32ArraySupported","kSplineTableSize","_precomputed","ob","kSampleStepSize","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","clearTimeout","bez","dataManager","FontManager","setUpNode","font","family","fontFamily","node","innerHTML","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","body","offsetWidth","checkLoadedFonts","fonts","loadedCount","loaded","fOrigin","origin","monoCase","sansCase","now","initTime","maxWaitingTime","isLoaded","createHelper","def","fontData","tHelper","fFamily","fClass","getContext","addFonts","fontArr","_pendingFonts","loadedSelector","shouldLoadFont","fPath","querySelectorAll","rel","src","helper","cache","addChars","found","ch","getCharData","char","console","warn","emptyChar","measureText","fontName","size","getFontByName","doubleSize","getComputedTextLength","singleSize","fName","getCombinedCharacterCodes","combinedCharacters","Font","typekitLoaded","interpolateValue","caching","newValue","offsetTime","keyData","nextKeyData","iterationIndex","lastIndex","keyframes","fnc","endValue","nextKeyTime","keyTime","ind","__fnct","segmentPerc","distanceInLine","lastFrame","_lastKeyframeIndex","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","quatStart","createQuaternion","quatEnd","time","quaternionToEuler","slerp","constructor","omega","cosom","sinom","scale0","scale1","az","aw","bx","by","bz","bw","acos","quat","qx","qy","qz","qw","heading","atan2","attitude","asin","bank","c3","s1","s2","s3","getValueAtCurrentTime","endTime","_caching","renderResult","setVValue","multipliedValue","mult","math_abs","processEffectsSequence","lock","finalValue","addEffect","effectFunction","ValueProperty","vel","MultiDimensionalProperty","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","arrLen","TransformPropertyFactory","applyToMatrix","processKeys","forceRender","_isDirty","precalculateMatrix","pre","appliedTransformations","autoOriented","v1","v2","getValueAtTime","autoOrient","_addDynamicProperty","TransformProperty","getTransformProperty","setPathData","setLength","point_pool","doubleArrayLength","setXYAt","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","cnt","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","interpolateShapeCurrentTime","resetShape","localShapeCollection","shapesEqual","shape1","shape2","shape_pool","releaseShapes","addShape","ShapeProperty","shapeCollection_pool","newShapeCollection","KeyframedShapeProperty","RectShapeProperty","EllShapeProperty","StarShapeProperty","getConstructorFunction","getKeyframedConstructorFunction","convertEllToPath","cPoint","s0","_cw","_v","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","os","rad","roundness","perimSegment","numPts","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","convertRectToPath","v0","ShapeModifiers","registerModifier","modifiers","getModifier","initModifierProperties","addShapeToModifier","setAsAnimated","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segments","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","_s","shapePaths","totalShapeLength","edges","newShapesData","addShapes","lastShapeInCollection","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","cont","unshift","resetElements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","comparePoints","buildShapeString","pathNodes","_o","_i","shapeString","ImagePreloader","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","getAssetsPath","assetsPath","original_path","imagePath","u","createImageData","crossOrigin","_imageLoaded","proxyImage","loadAssets","cb","images","_createImageData","setPath","setAssetsPath","destroy","canvas","ctx","fillStyle","fillRect","featureSupport","createAlphaToLuminanceFilter","assetLoader","formatResponse","xhr","response","responseText","loadAsset","errorCallback","XMLHttpRequest","open","responseType","err","send","onreadystatechange","status","load","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","animatorSelector","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","lineLength","letterM","letterP","defaultPropsArray","animatorJustifyOffset","animatorFirstCharOffset","justifyOffsetMult","isNewLine","getMult","anIndexes","totalChars","line","extra","an","animatorOffset","rot","atan","updated","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","currentIndex","textKeys","buildFinalText","text","charactersArray","charAt","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","charCode","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","_currentTextLength","finalS","finalE","xe","ne","textProperty","easer","tot","newCharsFlag","divisor","pool_factory","initialLength","_create","_release","_clone","pooling","create","cloned","shapeCollection","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","addPendingElement","searchExtraCompositions","xt","initExpressions","registerComposition","setupGlobalData","animData","fontsContainer","imagePreloader","fr","compSize","configAnimation","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","getBaseElement","nextElement","hide","show","ctxTransform","canvasContext","cProps","trProps","ctxOpacity","globalAlpha","restore","save","actionFlag","duplicate","blendMode","popped","mozTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","offsetHeight","elementRel","animationRel","par","fillType","substr","beginPath","closePath","clip","clearRect","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","tmpDOMElement","getThreeDContainerByPos","startPos","endPos","perspectiveElem","createThreeDContainer","webkitTransform","threeDContainerData","build3dContainers","lastThreeDContainerData","currentContainer","resizerElem","svg","setup","cWidth","cHeight","perspective","webkitPerspective","floatingContainer","isFirstFrame","finalMat","getMaskelement","pathString","pathShapeValue","_isParent","prepareProperties","isVisible","_matMdf","_opMdf","ao","renderTransform","globalToLocal","ptNew","initRenderable","isInRange","hidden","isTransparent","renderableComponents","removeRenderableComponent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","sourceRectAtTime","getLayerSize","initRendererElement","createContainerElements","createRenderableComponents","createContent","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","opFill","ms","ost","SVGElementsRenderer","createRenderFunction","renderFill","renderGradient","renderGradientStroke","renderStroke","renderPath","renderContentTransform","styleData","itemData","pathStringTransformed","redraw","iterations","lLen","_matrixHelper","_identityMatrix","styleElem","hasOpacity","attr1","attr2","cValues","oValues","ang","sequence","processSequence","processSequences","getNewKey","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","sr","getType","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","cp","clipId","cpGroup","renderableEffectsManager","addShapeToModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","elems","getElements","destroyElements","assetPath","pr","setAttributeNS","textContainer","buildTextContents","textArray","textContents","currentTextContent","usesGlyphs","tSpan","cachedSpansLength","tElement","justify","textBox","getBBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","elementData","gradientConstructor","lc","lj","ml","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","shapeProperty","fn","setElementStyles","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","animatedContent","colorBlack","colorWhite","opacity","initialize","groupPath","elemChildren","children","removeAttribute","pathMasker","dasharrayValue","getTotalLength","units","color1","color2","color3","tableR","tableG","tableB","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","col","_svgMatteSymbols","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","newLength","currentSavedOp","set","createElements","globalCompositeOperation","hideElement","showElement","widthCrop","heightCrop","imgW","imgH","imgRel","canvasRel","drawImage","parentMatrix","moveTo","lineTo","bezierCurveTo","transformHelper","dashResetter","preTransforms","co","wi","da","do","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","nodes","currentStyle","coOp","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","hasFill","hasStroke","commands","pathArr","lastFill","lastStroke","lastStrokeW","checkBlendMode","tg","addEffects","backgroundColor","_createBaseContainerElements","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","right","yMax","bottom","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","currentBoxContains","box","changed","compW","compH","innerElemStyle","strokeWidth","lineHeight","tParent","tCont","textPath","margin","Image","imageElem","mTransf","diffVector","mag","lookDir","lookLengthOnXZ","m_rotationX","m_rotationY","hasMatrixChanged","removeElement","ev","animItem","registeredAnimations","animation","isPaused","subtractPlayingCount","registerAnimation","AnimationItem","setupAnimation","setData","getRegisteredAnimations","animations","addPlayingCount","playingAnimationsNum","activate","setParams","setSpeed","setDirection","resume","nowTime","elapsedTime","advanceTime","_isFrozen","_stopped","first","pause","goToAndStop","isFrame","togglePause","animElements","getElementsByClassName","div","resize","freeze","unfreeze","currentRawFrame","frameMult","playSpeed","playDirection","playCount","animationID","timeCompleted","segmentPos","_idle","_completedLoop","animType","rendererSettings","parseInt","autoloadSegments","lastIndexOf","fileName","trigger","wrapperAttributes","attributes","getNamedItem","prerender","loadNextSegment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","updaFrameModifier","waitForFontsLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getDuration","Expressions","pushExpression","stackCount","popExpression","releaseInstances","registerExpressionProperty","expression","registers","ExpressionManager","$bm_isInstanceOfArray","isNumerable","tOfV","Number","$bm_neg","tOfA","lenA","retArr","sum","tOfB","lenB","sub","mul","mod","clamp","mm","radiansToDegrees","degreesToRadians","arr1","arr2","helperLengthArray","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","_tMin","rnd","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","loopInDuration","duration","loopIn","loopOutDuration","loopOut","lookAt","elem1","elem2","fVec","pitch","easeOut","val1","val2","applyEase","easeOutBez","easeIn","easeInBez","ease","easeInOutBez","nearestKey","framesToTime","frames","fps","timeToFrames","seedRandom","randSeed","substring","executeExpression","_value","_needsRandom","frameExpressionId","textIndex","textTotal","selectorValue","thisLayer","thisComp","toWorld","fromWorld","fromComp","toComp","fromCompToSurface","$bm_transform","anchorPoint","elemType","effect","hasParent","needsVelocity","velocity","velocityAtTime","expression_function","scoped_bm_rt","thisProperty","valueAtTime","frameDuration","displayStartTime","inPoint","outPoint","loop_in","loop_out","smooth","rotation","__expression_functions","xf","eval","numKeys","active","wiggle","freq","amp","addedAmps","periods","getVelocityAtTime","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","radians_to_degrees","degrees_to_radians","expressionHelpers","searchExpressions","_cachingAtTime","getSpeedAtTime","speed","getStaticValueAtTime","setGroupProperty","propertyGroup","durationFlag","lastKeyFrame","cycleDuration","firstKeyFrame","ret","initV","endV","current","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","samples","endFrame","sampleFrequency","sampleValue","getTransformValueAtTime","getTransformStaticValueAtTime","getShapeValueAtTime","shapeValue","ShapeExpressions","propertyGetProp","propertyIndex","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","tangentOnPath","normalOnPath","propertyGetShapeProp","trims","calculateExpression","getExpressionValue","isKeyframed","hasExpressions","iterateElements","view","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","pathInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","contentsInterfaceFactory","interfaces","interfaceFunction","_name","mn","numProperties","cix","transformInterface","transformInterfaceFactory","np","defineProperties","ExpressionPropertyInterface","_propertyGroup","_dashPropertyGroup","dashOb","dash","start","skewAxis","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_interfaceFunction","_thisLayerFunction","_sourceText","stringValue","_prevValue","toWorldMat","sampleImage","_registerMaskInterface","MaskManagerInterface","_registerEffectsInterface","TransformExpressionInterface","anchorPointDescriptor","anchor_point","startTime","pixelAspect","numLayers","_thisFunction","xRotation","yRotation","xPosition","yPosition","zPosition","_transformFactory","compositions","_thisProjectFunction","effectsData","createGroupInterface","groupInterface","createValueInterface","enabled","en","expressionProperty","MaskInterface","_mask","_data","_masksInterfaces","completeProperty","expressionValue","valueProp","assign","speedAtTime","UnidimensionalPropertyInterface","defaultUnidimensionalValue","MultidimensionalPropertyInterface","defaultMultidimensionalValue","arrValue","defaultGetter","TextExpressionSelectorProp","getValueProxy","total","propertyGetTextProp","eff","lottiejs","__getFactory","version","scripts","myScript","setInterval","_vm","_h","$createElement","_self","_c","ref","staticClass","class","esExports"],"mappings":"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","file":"vueLotttieWeb.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vueLotttieWeb\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vueLotttieWeb\"] = factory();\n\telse\n\t\troot[\"vueLotttieWeb\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vueLotttieWeb\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vueLotttieWeb\"] = factory();\n\telse\n\t\troot[\"vueLotttieWeb\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lottie_web__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lottie_web___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lottie_web__);\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    data: function data() {\n        return {\n            instance: false\n        };\n    },\n\n\n    // 父级注册lottie动画参数\n    // getLottieInstance 为子组件抛出动画对象的事件 由父组件获取使用\n    props: {\n        className: {\n            type: String,\n            default: ''\n        },\n\n        renderer: {\n            type: String,\n            default: 'canvas'\n        },\n        loop: {\n            type: Boolean,\n            default: true\n        },\n        autoplay: {\n            type: Boolean,\n            default: true\n        },\n\n        animationData: {\n            type: Object | String,\n            default: ''\n        },\n        path: {\n            type: String,\n            default: ''\n        }\n    },\n\n    methods: {\n        // 扩展方法\n        extendMethods: function extendMethods(instance) {\n            // 自定义重播动画方法\n            instance.customReplay = function () {\n                instance.stop();\n                setTimeout(function () {\n                    instance.play();\n                });\n            };\n        },\n\n        // 透传注册事件\n        transEvents: function transEvents(instance) {\n            var _this = this;\n\n            var events = ['onComplete', 'onLoopComplete', 'onEnterFrame', 'onSegmentStart'];\n\n            events.forEach(function (keyName) {\n                instance[keyName] = function (e) {\n                    return _this.$emit(keyName, e);\n                };\n            });\n        }\n    },\n\n    mounted: function mounted() {\n        // 获取lottie参数 生成对象 并且扩展方法\n        var renderer = this.renderer,\n            loop = this.loop,\n            autoplay = this.autoplay,\n            animationData = this.animationData,\n            path = this.path;\n\n\n        var paramsInfo = {\n            container: this.$refs.lottie,\n            renderer: renderer,\n            autoplay: autoplay,\n            loop: loop\n        };\n\n        if (animationData) {\n            paramsInfo.animationData = animationData;\n        } else if (path) {\n            paramsInfo.path = path;\n        } else {\n            throw new Error(\"Check Lottie Component's Props\");\n        }\n\n        // lottie实例生成\n        this.instance = __WEBPACK_IMPORTED_MODULE_0_lottie_web___default.a.loadAnimation(paramsInfo);\n\n        // 自定义扩展方法与透传注册事件\n        this.extendMethods(this.instance);\n        this.transEvents(this.instance);\n\n        // 抛出getLottieInstance事件 父节点获取动画对象\n        this.$emit('getLottieInstance', this.instance);\n    }\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__ = __webpack_require__(2);\n\n\n// Vue.js 的插件应当有一个公开方法 install 。第一个参数是 Vue 构造器，第二个参数是一个可选的选项对象\n// 参考：https://cn.vuejs.org/v2/guide/plugins.html#%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6\n\n//注册组件\n__WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__[\"a\" /* default */].install = function (Vue) {\n  return Vue.component(__WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__[\"a\" /* default */].name, __WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__[\"a\" /* default */]);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__VueLottieWeb__[\"a\" /* default */]);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueLottieWeb_vue__ = __webpack_require__(0);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c29e0614_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueLottieWeb_vue__ = __webpack_require__(10);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(3)\n}\nvar normalizeComponent = __webpack_require__(8)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueLottieWeb_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c29e0614_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueLottieWeb_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(4);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(6)(\"22b7d1cb\", content, true, {});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(5)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".lottie{font-size:0}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(7)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;(typeof navigator !== \"undefined\") && (function(root, factory) {\r\n    if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n            return factory(root);\r\n        }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nvar createElementID = (function(){\r\n    var _count = 0;\r\n    return function createID() {\r\n        return '__lottie_element_' + ++_count\r\n    }\r\n}())\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\nfunction DynamicPropertyContainer(){};\r\nDynamicPropertyContainer.prototype = {\r\n\taddDynamicProperty: function(prop) {\r\n\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t        this.dynamicProperties.push(prop);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    \tthis._isAnimated = true;\r\n\t    }\r\n\t},\r\n\titerateDynamicProperties: function(){\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf) {\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t},\r\n\tinitDynamicPropertyContainer: function(container){\r\n\t    this.container = container;\r\n\t    this.dynamicProperties = [];\r\n\t    this._mdf = false;\r\n\t    this._isAnimated = false;\r\n\t}\r\n}\r\nvar getBlendMode = (function() {\r\n\r\n\tvar blendModeEnums = {\r\n        0:'source-over',\r\n        1:'multiply',\r\n        2:'screen',\r\n        3:'overlay',\r\n        4:'darken',\r\n        5:'lighten',\r\n        6:'color-dodge',\r\n        7:'color-burn',\r\n        8:'hard-light',\r\n        9:'soft-light',\r\n        10:'difference',\r\n        11:'exclusion',\r\n        12:'hue',\r\n        13:'saturation',\r\n        14:'color',\r\n        15:'luminosity'\r\n    }\r\n\r\n\treturn function(mode) {\r\n\t\treturn blendModeEnums[mode] || '';\r\n\t}\r\n}())\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        if(!sz && sz !== 0) {\r\n            sz = 1;\r\n        }\r\n        if(sx === 1 && sy === 1 && sz === 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        var _p = this.props;\r\n        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function roundMatrixProperty(val) {\r\n        var v = 10000;\r\n        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n            return _rnd(val * v) / v;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var props = this.props;\r\n        var _a = roundMatrixProperty(props[0]);\r\n        var _b = roundMatrixProperty(props[1]);\r\n        var _c = roundMatrixProperty(props[4]);\r\n        var _d = roundMatrixProperty(props[5]);\r\n        var _e = roundMatrixProperty(props[12]);\r\n        var _f = roundMatrixProperty(props[13]);\r\n        return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.001 && det1 < 0.001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed && len){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (pt1, pt2, pt3, pt4){\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(!storedData[bezierName]){\r\n                var curveSegments = defaultCurveSegments;\r\n                var k, i, len;\r\n                var ptCoord,perc,addedLength = 0;\r\n                var ptDistance;\r\n                var point,lastPoint = null;\r\n                if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                    curveSegments = 2;\r\n                }\r\n                var bezierData = new BezierData(curveSegments);\r\n                len = pt3.length;\r\n                for (k = 0; k < curveSegments; k += 1) {\r\n                    point = createSizedArray(len);\r\n                    perc = k / (curveSegments - 1);\r\n                    ptDistance = 0;\r\n                    for (i = 0; i < len; i += 1){\r\n                        ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                        point[i] = ptCoord;\r\n                        if(lastPoint !== null){\r\n                            ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                        }\r\n                    }\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                    bezierData.points[k] = new PointData(ptDistance, point);\r\n                    lastPoint = point;\r\n                }\r\n                bezierData.segmentLength = addedLength;\r\n                storedData[bezierName] = bezierData;\r\n            }\r\n            return storedData[bezierName];\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3;\r\n        var t0t0u0_3 = t0*t0*u0*3;\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(this.checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.isLoaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        //tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.setAttribute('font-family', fontData.fFamily);\r\n        tHelper.setAttribute('font-style', fontData.fStyle);\r\n        tHelper.setAttribute('font-weight', fontData.fWeight);\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.setAttribute('class', fontData.fClass);\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;\r\n        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n        return tHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.isLoaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.isLoaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        var _pendingFonts = len;\r\n        for(i=0; i<len; i+= 1){\r\n            var shouldLoadFont = true;\r\n            var loadedSelector;\r\n            var j;\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n                _pendingFonts -= 1;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"'+ fontArr[i].fFamily +'\"], style[f-origin=\"3\"][f-family=\"'+ fontArr[i].fFamily +'\"]');\r\n\r\n                if (loadedSelector.length > 0) {\r\n                    shouldLoadFont = false;\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var s = createTag('style');\r\n                    s.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    s.setAttribute('f-origin', fontArr[i].origin);\r\n                    s.setAttribute('f-family', fontArr[i].fFamily);\r\n                    s.type = \"text/css\";\r\n                    s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                    defs.appendChild(s);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var l = createTag('link');\r\n                    l.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    l.setAttribute('f-origin', fontArr[i].origin);\r\n                    l.type = \"text/css\";\r\n                    l.rel = \"stylesheet\";\r\n                    l.href = fontArr[i].fPath;\r\n                    document.body.appendChild(l);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (fontArr[i].fPath === loadedSelector[j].src) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var sc = createTag('link');\r\n                    sc.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    sc.setAttribute('f-origin', fontArr[i].origin);\r\n                    sc.setAttribute('rel','stylesheet');\r\n                    sc.setAttribute('href',fontArr[i].fPath);\r\n                    defs.appendChild(sc);\r\n                }\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            fontArr[i].cache = {};\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        if (_pendingFonts === 0) {\r\n            this.isLoaded = true;\r\n        } else {\r\n            //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\r\n            //Adding this timeout seems to fix it\r\n           setTimeout(this.checkLoadedFonts.bind(this), 100);\r\n        }\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size) {\r\n        var fontData = this.getFontByName(fontName);\r\n        var index = char.charCodeAt(0);\r\n        if(!fontData.cache[index + 1]) {\r\n            var tHelper = fontData.helper;\r\n            //Canvas version\r\n            //fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n            //SVG version\r\n            //console.log(tHelper.getBBox().width)\r\n            if (char === ' ') {\r\n                tHelper.textContent = '|' + char + '|';\r\n                var doubleSize = tHelper.getComputedTextLength();\r\n                tHelper.textContent = '||';\r\n                var singleSize = tHelper.getComputedTextLength();\r\n                fontData.cache[index + 1] = (doubleSize - singleSize)/100;\r\n            } else {\r\n                tHelper.textContent = char;\r\n                fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;\r\n            }\r\n        }\r\n        return fontData.cache[index + 1] * size;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return this.fonts[0];\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.isLoaded;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.isLoaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n    Font.prototype.checkLoadedFonts = checkLoadedFonts;\r\n    Font.prototype.loaded = loaded;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n    var math_abs = Math.abs;\r\n\r\n    function interpolateValue(frameNum, caching) {\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if (this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', this.pv.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length - 1, flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while (flag) {\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i + 1];\r\n            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if ((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if (i < len - 1){\r\n                i += 1;\r\n            } else {\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen, perc, jLen, j, fnc;\r\n        var nextKeyTime = nextKeyData.t - offsetTime;\r\n        var keyTime = keyData.t - offsetTime;\r\n        var endValue;\r\n        if (keyData.to) {\r\n            if (!keyData.bezierData) {\r\n                keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if (frameNum >= nextKeyTime || frameNum < keyTime) {\r\n                var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for (k = 0; k < kLen; k += 1) {\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                // caching._lastKeyframeIndex = -1;\r\n            } else {\r\n                if (keyData.__fnct) {\r\n                    fnc = keyData.__fnct;\r\n                } else {\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while (flag) {\r\n                    addedLength += bezierData.points[j].partialLength;\r\n                    if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\r\n                        segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if (j < jLen - 1){\r\n                        j += 1;\r\n                    } else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastKeyframeIndex = i;\r\n            }\r\n        } else {\r\n            var outX, outY, inX, inY, keyValue;\r\n            len = keyData.s.length;\r\n            endValue = nextKeyData.s || keyData.e;\r\n            if (this.sh && keyData.h !== 1) {\r\n                if (frameNum >= nextKeyTime) {\r\n                    newValue[0] = endValue[0];\r\n                    newValue[1] = endValue[1];\r\n                    newValue[2] = endValue[2];\r\n                } else if (frameNum <= keyTime) {\r\n                    newValue[0] = keyData.s[0];\r\n                    newValue[1] = keyData.s[1];\r\n                    newValue[2] = keyData.s[2];\r\n                } else {\r\n                    var quatStart = createQuaternion(keyData.s);\r\n                    var quatEnd = createQuaternion(endValue);\r\n                    var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\r\n                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n                }\r\n                \r\n            } else {\r\n                for(i = 0; i < len; i += 1) {\r\n                    if (keyData.h !== 1) {\r\n                        if (frameNum >= nextKeyTime) {\r\n                            perc = 1;\r\n                        } else if(frameNum < keyTime) {\r\n                            perc = 0;\r\n                        } else {\r\n                            if(keyData.o.x.constructor === Array) {\r\n                                if (!keyData.__fnct) {\r\n                                    keyData.__fnct = [];\r\n                                }\r\n                                if (!keyData.__fnct[i]) {\r\n                                    outX = (typeof keyData.o.x[i] === 'undefined') ? keyData.o.x[0] : keyData.o.x[i];\r\n                                    outY = (typeof keyData.o.y[i] === 'undefined') ? keyData.o.y[0] : keyData.o.y[i];\r\n                                    inX = (typeof keyData.i.x[i] === 'undefined') ? keyData.i.x[0] : keyData.i.x[i];\r\n                                    inY = (typeof keyData.i.y[i] === 'undefined') ? keyData.i.y[0] : keyData.i.y[i];\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct[i] = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct[i];\r\n                                }\r\n                            } else {\r\n                                if (!keyData.__fnct) {\r\n                                    outX = keyData.o.x;\r\n                                    outY = keyData.o.y;\r\n                                    inX = keyData.i.x;\r\n                                    inY = keyData.i.y;\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct;\r\n                                }\r\n                            }\r\n                            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime ));\r\n                        }\r\n                    }\r\n\r\n                    endValue = nextKeyData.s || keyData.e;\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\r\n\r\n                    if (len === 1) {\r\n                        newValue = keyValue;\r\n                    } else {\r\n                        newValue[i] = keyValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    //based on @Toji's https://github.com/toji/gl-matrix/\r\n    function slerp(a, b, t) {\r\n        var out = [];\r\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\r\n        var omega, cosom, sinom, scale0, scale1;\r\n\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    function quaternionToEuler(out, quat) {\r\n        var qx = quat[0];\r\n        var qy = quat[1];\r\n        var qz = quat[2];\r\n        var qw = quat[3];\r\n        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n        out[0] = heading/degToRads;\r\n        out[1] = attitude/degToRads;\r\n        out[2] = bank/degToRads;\r\n    }\r\n\r\n    function createQuaternion(values) {\r\n        var heading = values[0] * degToRads;\r\n        var attitude = values[1] * degToRads;\r\n        var bank = values[2] * degToRads;\r\n        var c1 = Math.cos(heading / 2);\r\n        var c2 = Math.cos(attitude / 2);\r\n        var c3 = Math.cos(bank / 2);\r\n        var s1 = Math.sin(heading / 2);\r\n        var s2 = Math.sin(attitude / 2);\r\n        var s3 = Math.sin(bank / 2);\r\n        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n        return [x,y,z,w];\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            if(this._caching.lastFrame >= frameNum) {\r\n                this._caching._lastKeyframeIndex = -1;\r\n                this._caching.lastIndex = 0;\r\n            }\r\n\r\n            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n            this.pv = renderResult;\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function setVValue(val) {\r\n        var multipliedValue;\r\n        if(this.propType === 'unidimensional') {\r\n            multipliedValue = val * this.mult;\r\n            if(math_abs(this.v - multipliedValue) > 0.00001) {\r\n                this.v = multipliedValue;\r\n                this._mdf = true;\r\n            }\r\n        } else {\r\n            var i = 0, len = this.v.length;\r\n            while (i < len) {\r\n                multipliedValue = val[i] * this.mult;\r\n                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\r\n                    this.v[i] = multipliedValue;\r\n                    this._mdf = true;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }        \r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = this._isFirstFrame;\r\n        var multipliedValue;\r\n        var i, len = this.effectsSequence.length;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this._isFirstFrame = false;\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    function ValueProperty(elem, data, mult, container){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.effectsSequence = [];\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult, container) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = data.k[i] * this.mult;\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this._isFirstFrame = true;\r\n        this.effectsSequence = [];\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult, container) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.v = initFrame;\r\n        this.pv = initFrame;\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        for (i = 0; i < arrLen; i += 1) {\r\n            this.v[i] = initFrame;\r\n            this.pv[i] = initFrame;\r\n        }\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, container) {\r\n        var p;\r\n        if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult, container);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.effectsSequence.length){\r\n            container.addDynamicProperty(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var _mdf = this._mdf;\r\n        this.iterateDynamicProperties();\r\n        this._mdf = this._mdf || _mdf;\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.sk) {\r\n            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        if(this._isDirty) {\r\n            this.precalculateMatrix();\r\n            this._isDirty = false;\r\n        }\r\n\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.cloneFromProps(this.pre.props);\r\n            if (this.appliedTransformations < 1) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.appliedTransformations < 2) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk && this.appliedTransformations < 3) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r && this.appliedTransformations < 4) {\r\n                this.v.rotate(-this.r.v);\r\n            } else if (!this.r && this.appliedTransformations < 4){\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented) {\r\n                var v1,v2, frameRate = this.elem.globalData.frameRate;\r\n                if(this.p && this.p.keyframes && this.p.getValueAtTime) {\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\r\n                    }\r\n                } else if(this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\r\n                    v1 = [];\r\n                    v2 = [];\r\n                    var px = this.px, py = this.py, frameRate;\r\n                    if (px._caching.lastFrame+px.offsetTime <= px.keyframes[0].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate,0);\r\n                    } else if(px._caching.lastFrame+px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate),0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate),0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                    } else {\r\n                        v1 = [px.pv, py.pv];\r\n                        v2[0] = px.getValueAtTime((px._caching.lastFrame+px.offsetTime - 0.01) / frameRate,px.offsetTime);\r\n                        v2[1] = py.getValueAtTime((py._caching.lastFrame+py.offsetTime - 0.01) / frameRate,py.offsetTime);\r\n                    }\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p && this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function precalculateMatrix() {\r\n        if(!this.a.k) {\r\n            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            this.appliedTransformations = 1;\r\n        } else {\r\n            return;\r\n        }\r\n        if(!this.s.effectsSequence.length) {\r\n            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            this.appliedTransformations = 2;\r\n        } else {\r\n            return;\r\n        }\r\n        if(this.sk) {\r\n            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n                this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n            this.appliedTransformations = 3;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.r) {\r\n            if(!this.r.effectsSequence.length) {\r\n                this.pre.rotate(-this.r.v);\r\n                this.appliedTransformations = 4;\r\n            } else {\r\n                return;\r\n            }\r\n        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            this.appliedTransformations = 4;\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function addDynamicProperty(prop) {\r\n        this._addDynamicProperty(prop);\r\n        this.elem.addDynamicProperty(prop);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    function TransformProperty(elem,data,container){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        //Precalculated matrix with non animated properties\r\n        this.pre = new Matrix();\r\n        this.appliedTransformations = 0;\r\n        this.initDynamicPropertyContainer(container || elem);\r\n        if(data.p && data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p || {k:[0,0,0]},1,0,this);\r\n        }\r\n        if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        } else {\r\n            this.r = PropertyFactory.getProp(elem, data.r || {k: 0}, 0, degToRads, this);\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n        }\r\n        this.a = PropertyFactory.getProp(elem,data.a || {k:[0,0,0]},1,0,this);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:[100,100,100]},1,0.01,this);\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        this._isDirty = true;\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype = {\r\n        applyToMatrix: applyToMatrix,\r\n        getValue: processKeys,\r\n        precalculateMatrix: precalculateMatrix,\r\n        autoOrient: autoOrient\r\n    }\r\n\r\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n    function getTransformProperty(elem,data,container){\r\n        return new TransformProperty(elem,data,container);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    var i;\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n        var kf = this.keyframes;\r\n        if(frameNum < kf[0].t-this.offsetTime){\r\n            keyPropS = kf[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){\r\n            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\r\n            /*if(kf[kf.length - 1].s){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            }*/\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = kf.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = kf[i];\r\n                nextKeyData = kf[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                previousValue.i[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                previousValue.o[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                previousValue.v[j][k] = vertexValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            this.interpolateShape(frameNum, this.pv, this._caching);\r\n            ////\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n    }\r\n\r\n    function shapesEqual(shape1, shape2) {\r\n        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n            return false;\r\n        }\r\n        var i, len = shape1._length;\r\n        for(i = 0; i < len; i += 1) {\r\n            if(shape1.v[i][0] !== shape2.v[i][0] \r\n            || shape1.v[i][1] !== shape2.v[i][1] \r\n            || shape1.o[i][0] !== shape2.o[i][0] \r\n            || shape1.o[i][1] !== shape2.o[i][1] \r\n            || shape1.i[i][0] !== shape2.i[i][0] \r\n            || shape1.i[i][1] !== shape2.i[i][1]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function setVValue(newPath) {\r\n        if(!shapesEqual(this.v, newPath)) {\r\n            this.v = shape_pool.clone(newPath);\r\n            this.localShapeCollection.releaseShapes();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this._mdf = true;\r\n            this.paths = this.localShapeCollection;\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }\r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = false;\r\n        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\r\n        var i, len = this.effectsSequence.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    };\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.container = elem;\r\n        this.elem = elem;\r\n        this.data = data;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n        this.effectsSequence = [];\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.setVValue = setVValue;\r\n    ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\r\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n\r\n        EllShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function (){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n\r\n                if(this._mdf){\r\n                    this.convertEllToPath();\r\n                }\r\n            },\r\n            convertEllToPath: function() {\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n                var _cw = this.d !== 3;\r\n                var _v = this.v;\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        extendPrototype([DynamicPropertyContainer], EllShapeProperty);\r\n\r\n        return EllShapeProperty;\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function StarShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n                this.convertToPath = this.convertStarToPath;\r\n            } else {\r\n                this.convertToPath = this.convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertToPath();\r\n            }\r\n        };\r\n\r\n        StarShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function() {\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertToPath();\r\n                }\r\n            },\r\n            convertStarToPath: function() {\r\n                var numPts = Math.floor(this.pt.v)*2;\r\n                var angle = Math.PI*2/numPts;\r\n                /*this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts;*/\r\n                var longFlag = true;\r\n                var longRad = this.or.v;\r\n                var shortRad = this.ir.v;\r\n                var longRound = this.os.v;\r\n                var shortRound = this.is.v;\r\n                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n                currentAng += this.r.v;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    rad = longFlag ? longRad : shortRad;\r\n                    roundness = longFlag ? longRound : shortRound;\r\n                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                    /*this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts;*/\r\n                    longFlag = !longFlag;\r\n                    currentAng += angle*dir;\r\n                }\r\n            },\r\n            convertPolygonToPath: function() {\r\n                var numPts = Math.floor(this.pt.v);\r\n                var angle = Math.PI*2/numPts;\r\n                var rad = this.or.v;\r\n                var roundness = this.os.v;\r\n                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n                var i, currentAng = -Math.PI/ 2;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                currentAng += this.r.v;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                    currentAng += angle*dir;\r\n                }\r\n                this.paths.length = 0;\r\n                this.paths[0] = this.v;\r\n            }\r\n\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], StarShapeProperty);\r\n\r\n        return StarShapeProperty;\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n\r\n         function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n\r\n        RectShapeProperty.prototype = {\r\n            convertRectToPath: function (){\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n                var round = bm_min(v0,v1,this.r.v);\r\n                var cPoint = round*(1-roundCorner);\r\n                this.v._length = 0;\r\n\r\n                if(this.d === 2 || this.d === 1) {\r\n                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                    }\r\n                }else{\r\n                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                    }\r\n                }\r\n            },\r\n            getValue: function(frameNum){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertRectToPath();\r\n                }\r\n\r\n            },\r\n            reset: resetShape\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], RectShapeProperty);\r\n\r\n        return RectShapeProperty;\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data){\r\n        return new modifiers[nm](elem, data);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n        if(this._isAnimated) {\r\n            data.setAsAnimated();\r\n        }\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data){\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;\r\n        e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        s = Math.round(s * 10000) * 0.0001;\r\n        e = Math.round(e * 10000) * 0.0001;\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\r\n                            if (lastShapeInCollection.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\r\n            //Don't remove this even if it's losing cached info.\r\n            this.shapes[i].pathsData.length = 0;\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c && lengths.length) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n    this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n    this.so = PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);\r\n    this.eo = PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = !!this.dynamicProperties.length;\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.frameId = -1;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":1,\"ix\":6,\"k\":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, container) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    this.initDynamicPropertyContainer(container);\r\n    var i, len = data.length || 0, prop;\r\n    for(i = 0; i < len; i += 1) {\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n        this.k = prop.k || this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(!this.k){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || forceRender;\r\n    if (this._mdf) {\r\n        var i = 0, len = this.dataProps.length;\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\r\nfunction GradientProperty(elem,data,container){\r\n    this.data = data;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this.initDynamicPropertyContainer(container);\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n    this.k = this.prop.k;\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\r\nvar buildShapeString = function(pathNodes, length, closed, mat) {\r\n\tif(length === 0) {\r\n            return '';\r\n        }\r\n        var _o = pathNodes.o;\r\n        var _i = pathNodes.i;\r\n        var _v = pathNodes.v;\r\n        var i, shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n        for(i = 1; i < length; i += 1) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n}\r\nvar ImagePreloader = (function(){\r\n\r\n    var proxyImage = (function(){\r\n        var canvas = createTag('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = 1;\r\n        var ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = '#FF0000';\r\n        ctx.fillRect(0, 0, 1, 1);\r\n        return canvas;\r\n    }())\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData, assetsPath, original_path) {\r\n        var path = '';\r\n        if (assetData.e) {\r\n            path = assetData.p;\r\n        } else if(assetsPath) {\r\n            var imagePath = assetData.p;\r\n            if (imagePath.indexOf('images/') !== -1) {\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = assetsPath + imagePath;\r\n        } else {\r\n            path = original_path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function createImageData(assetData) {\r\n        var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n        var img = createTag('img');\r\n        img.crossOrigin = 'anonymous';\r\n        img.addEventListener('load', this._imageLoaded.bind(this), false);\r\n        img.addEventListener('error', function() {\r\n            ob.img = proxyImage;\r\n            this._imageLoaded();\r\n        }.bind(this), false);\r\n        img.src = path;\r\n        var ob = {\r\n            img: img,\r\n            assetData: assetData\r\n        }\r\n        return ob;\r\n    }\r\n\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        var i, len = assets.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!assets[i].layers){\r\n                this.totalImages += 1;\r\n                this.images.push(this._createImageData(assets[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function getImage(assetData) {\r\n        var i = 0, len = this.images.length;\r\n        while (i < len) {\r\n            if (this.images[i].assetData === assetData) {\r\n                return this.images[i].img;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n        this.images.length = 0;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.totalImages === this.loadedAssets;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.loaded = loaded;\r\n        this.destroy = destroy;\r\n        this.getImage = getImage;\r\n        this._createImageData = createImageData;\r\n        this._imageLoaded = imageLoaded;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n        this.images = [];\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar assetLoader = (function(){\r\n\r\n\tfunction formatResponse(xhr) {\r\n\t\tif(xhr.response && typeof xhr.response === 'object') {\r\n\t\t\treturn xhr.response;\r\n\t\t} else if(xhr.response && typeof xhr.response === 'string') {\r\n\t\t\treturn JSON.parse(xhr.response);\r\n\t\t} else if(xhr.responseText) {\r\n\t\t\treturn JSON.parse(xhr.responseText);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadAsset(path, callback, errorCallback) {\r\n\t\tvar response;\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', path, true);\r\n\t\t// set responseType after calling open or IE will break.\r\n\t\ttry {\r\n\t\t    // This crashes on Android WebView prior to KitKat\r\n\t\t    xhr.responseType = \"json\";\r\n\t\t} catch (err) {}\r\n\t    xhr.send();\r\n\t    xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState == 4) {\r\n\t            if(xhr.status == 200){\r\n\t            \tresponse = formatResponse(xhr);\r\n\t            \tcallback(response);\r\n\t            }else{\r\n\t                try{\r\n\t            \t\tresponse = formatResponse(xhr);\r\n\t            \t\tcallback(response);\r\n\t                }catch(err){\r\n\t                \tif(errorCallback) {\r\n\t                \t\terrorCallback(err);\r\n\t                \t}\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t}\r\n\treturn {\r\n\t\tload: loadAsset\r\n\t}\r\n}())\r\n\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n    this._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n    this.initDynamicPropertyContainer(elem);\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var bezierData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[i + 1]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[0]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\r\n    //\r\n    if(documentData.j === 2 || documentData.j === 1) {\r\n        var animatorJustifyOffset = 0;\r\n        var animatorFirstCharOffset = 0;\r\n        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n        var lastIndex = 0;\r\n        var isNewLine = true;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            if (letters[i].n) {\r\n                if(animatorJustifyOffset) {\r\n                    animatorJustifyOffset += animatorFirstCharOffset;\r\n                }\r\n                while (lastIndex < i) {\r\n                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n                    lastIndex += 1;\r\n                }\r\n                animatorJustifyOffset = 0;\r\n                isNewLine = true;\r\n            } else {\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.t.propType) {\r\n                        if (isNewLine && documentData.j === 2) {\r\n                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n                        }\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n                        if (mult.length) {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n                        } else {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n                        }\r\n                    }\r\n                }\r\n                isNewLine = false;\r\n            }\r\n        }\r\n        if(animatorJustifyOffset) {\r\n            animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while(lastIndex < i) {\r\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n            lastIndex += 1;\r\n        }\r\n    }\r\n    //\r\n\r\n    for( i = 0; i < len; i += 1) {\r\n\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n                    if(xPos !== 0 || documentData.j !== 0) {\r\n                        if(this._hasMaskedPath) {\r\n                            if(mult.length) {\r\n                                currentLength += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                currentLength += animatorProps.t.v*mult;\r\n                            }\r\n                        }else{\r\n                            if(mult.length) {\r\n                                xPos += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                xPos += animatorProps.t.v*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\r\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = false;\r\n    this.data = data;\r\n\tthis.elem = elem;\r\n    this.comp = this.elem.comp;\r\n\tthis.keysIndex = 0;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n    this.effectsSequence = [];\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: this.defaultBoxWidth,\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:null,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0,\r\n        __complete: false\r\n\r\n\t};\r\n    this.copyData(this.currentData, this.data.d.k[0].s);\r\n\r\n    if(!this.searchProperty()) {\r\n        this.completeTextData(this.currentData);\r\n    }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0,0];\r\n\r\nTextProperty.prototype.copyData = function(obj, data) {\r\n    for(var s in data) {\r\n        if(data.hasOwnProperty(s)) {\r\n            obj[s] = data[s];\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n    if(!data.__complete) {\r\n        this.completeTextData(data);\r\n    }\r\n    this.currentData = data;\r\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n    this._mdf = true;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n    return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function() {\r\n    this.kf = this.data.d.k.length > 1;\r\n    if(this.kf) {\r\n        this.addEffect(this.getKeyframeValue.bind(this));\r\n    }\r\n    return this.kf;\r\n}\r\n\r\nTextProperty.prototype.addEffect = function(effectFunction) {\r\n\tthis.effectsSequence.push(effectFunction);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_finalValue) {\r\n    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n        return;\r\n    }\r\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\r\n    var currentValue = this.currentData;\r\n    var currentIndex = this.keysIndex;\r\n    if(this.lock) {\r\n        this.setCurrentData(this.currentData);\r\n        return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var multipliedValue;\r\n    var i, len = this.effectsSequence.length;\r\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\r\n    for(i = 0; i < len; i += 1) {\r\n        //Checking if index changed to prevent creating a new object every time the expression updates.\r\n        if(currentIndex !== this.keysIndex) {\r\n            finalValue = this.effectsSequence[i](finalValue, finalValue.t);\r\n        } else {\r\n            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\r\n        }\r\n    }\r\n    if(currentValue !== finalValue) {\r\n        this.setCurrentData(finalValue);\r\n    }\r\n    this.pv = this.v = this.currentData;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n}\r\n\r\nTextProperty.prototype.getKeyframeValue = function() {\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n        this.keysIndex = i;\r\n    }\r\n    return this.data.d.k[this.keysIndex].s;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var charCode;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                charCode = finalText[i].charCodeAt(0);\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(charCode === 13 || charCode === 3){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        charCode = currentChar.charCodeAt(0);\r\n        if (currentChar === ' '){\r\n            val = '\\u00A0';\r\n        } else if (charCode === 13 || charCode === 3) {\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.copyData({}, this.data.d.k[index].s);\r\n    dData = this.copyData(dData, newData);\r\n    this.data.d.k[index].s = dData;\r\n    this.recalculate(index);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = 0;\r\n    this._isFirstFrame = true;\r\n    this.getValue(dData);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n\r\n    function TextSelectorProp(elem,data){\r\n        this._currentTextLength = -1;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.initDynamicPropertyContainer(elem);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    TextSelectorProp.prototype = {\r\n        getMult: function(ind) {\r\n            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n                this.getValue();\r\n            }\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<0.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        },\r\n        getValue: function(newCharsFlag) {\r\n            this.iterateDynamicProperties();\r\n            this._mdf = newCharsFlag || this._mdf;\r\n            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = this._currentTextLength;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n    }\r\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    }\r\n}\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var ariaLabel = '';\r\n    if (config && config.title) {\r\n        var titleElement = createNS('title');\r\n        var titleId = createElementID();\r\n        titleElement.setAttribute('id', titleId);\r\n        titleElement.textContent = config.title;\r\n        this.svgElement.appendChild(titleElement);\r\n        ariaLabel += titleId;\r\n    }\r\n    if (config && config.description) {\r\n        var descElement = createNS('desc');\r\n        var descId = createElementID();\r\n        descElement.setAttribute('id', descId);\r\n        descElement.textContent = config.description;\r\n        this.svgElement.appendChild(descElement);\r\n        ariaLabel += ' ' + descId;\r\n    }\r\n    if (ariaLabel) {\r\n        this.svgElement.setAttribute('aria-labelledby', ariaLabel)\r\n    }\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n    this.rendererType = 'svg';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n        this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.setupGlobalData(animData, defs);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = createElementID();\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction CanvasRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.renderConfig = {\r\n        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n        context: (config && config.context) || null,\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n    if (this.animationItem.wrapper) {\r\n        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n    }\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1,\r\n        _mdf: false,\r\n        renderConfig: this.renderConfig,\r\n        currentGlobalAlpha: -1\r\n    };\r\n    this.contextData = new CVContextData();\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.transformMat = new Matrix();\r\n    this.completeLayers = false;\r\n    this.rendererType = 'canvas';\r\n}\r\nextendPrototype([BaseRenderer],CanvasRenderer);\r\n\r\nCanvasRenderer.prototype.createShape = function (data) {\r\n    return new CVShapeElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createText = function (data) {\r\n    return new CVTextElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createImage = function (data) {\r\n    return new CVImageElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createComp = function (data) {\r\n    return new CVCompElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createSolid = function (data) {\r\n    return new CVSolidElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nCanvasRenderer.prototype.ctxTransform = function(props){\r\n    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n        return;\r\n    }\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n        return;\r\n    }\r\n    this.transformMat.cloneFromProps(props);\r\n    var cProps = this.contextData.cTr.props;\r\n    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n    var trProps = this.contextData.cTr.props;\r\n    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n};\r\n\r\nCanvasRenderer.prototype.ctxOpacity = function(op){\r\n    /*if(op === 1){\r\n        return;\r\n    }*/\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n        return;\r\n    }\r\n    this.contextData.cO *= op < 0 ? 0 : op;\r\n    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {\r\n        this.canvasContext.globalAlpha = this.contextData.cO;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.reset = function(){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    this.contextData.reset();\r\n};\r\n\r\nCanvasRenderer.prototype.save = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.save();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.save();\r\n    }\r\n    var props = this.contextData.cTr.props;\r\n    if(this.contextData._length <= this.contextData.cArrPos) {\r\n        this.contextData.duplicate();\r\n    }\r\n    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n    for (i = 0; i < 16; i += 1) {\r\n        arr[i] = props[i];\r\n    }\r\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n    this.contextData.cArrPos += 1;\r\n};\r\n\r\nCanvasRenderer.prototype.restore = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.restore();\r\n        this.globalData.blendMode = 'source-over';\r\n    }\r\n    this.contextData.cArrPos -= 1;\r\n    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n    var i,arr = this.contextData.cTr.props;\r\n    for(i=0;i<16;i+=1){\r\n        arr[i] = popped[i];\r\n    }\r\n    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n    this.contextData.cO = popped;\r\n    if(this.globalData.currentGlobalAlpha !== popped) {\r\n        this.canvasContext.globalAlpha = popped;\r\n        this.globalData.currentGlobalAlpha = popped;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.configAnimation = function(animData){\r\n    if(this.animationItem.wrapper){\r\n        this.animationItem.container = createTag('canvas');\r\n        this.animationItem.container.style.width = '100%';\r\n        this.animationItem.container.style.height = '100%';\r\n        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n        this.canvasContext = this.animationItem.container.getContext('2d');\r\n        if(this.renderConfig.className) {\r\n            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n        }\r\n    }else{\r\n        this.canvasContext = this.renderConfig.context;\r\n    }\r\n    this.data = animData;\r\n    this.layers = animData.layers;\r\n    this.transformCanvas = {\r\n        w: animData.w,\r\n        h:animData.h,\r\n        sx:0,\r\n        sy:0,\r\n        tx:0,\r\n        ty:0\r\n    };\r\n    this.setupGlobalData(animData, document.body);\r\n    this.globalData.canvasContext = this.canvasContext;\r\n    this.globalData.renderer = this;\r\n    this.globalData.isDashed = false;\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.transformCanvas = this.transformCanvas;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n\r\n    this.updateContainerSize();\r\n};\r\n\r\nCanvasRenderer.prototype.updateContainerSize = function () {\r\n    this.reset();\r\n    var elementWidth,elementHeight;\r\n    if(this.animationItem.wrapper && this.animationItem.container){\r\n        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n    }else{\r\n        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n    }\r\n    var elementRel,animationRel;\r\n    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n        var fillType = par[1] || 'meet';\r\n        var pos = par[0] || 'xMidYMid';\r\n        var xPos = pos.substr(0,4);\r\n        var yPos = pos.substr(4);\r\n        elementRel = elementWidth/elementHeight;\r\n        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        }else{\r\n            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n        }\r\n\r\n        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.tx = 0;\r\n        }\r\n        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.ty = 0;\r\n        }\r\n\r\n    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }else{\r\n        this.transformCanvas.sx = this.renderConfig.dpr;\r\n        this.transformCanvas.sy = this.renderConfig.dpr;\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }\r\n    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\r\n    this.ctxTransform(this.transformCanvas.props);\r\n    this.canvasContext.beginPath();\r\n    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n    this.canvasContext.closePath();\r\n    this.canvasContext.clip();\r\n\r\n    this.renderFrame(this.renderedFrame, true);\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function () {\r\n    if(this.renderConfig.clearCanvas) {\r\n        this.animationItem.wrapper.innerHTML = '';\r\n    }\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = len - 1; i >= 0; i-=1) {\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.globalData.canvasContext = null;\r\n    this.animationItem.container = null;\r\n    this.destroyed = true;\r\n};\r\n\r\nCanvasRenderer.prototype.renderFrame = function(num, forceRender){\r\n    if((this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) || this.destroyed || num === -1){\r\n        return;\r\n    }\r\n    this.renderedFrame = num;\r\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n    this.globalData.frameId += 1;\r\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n\r\n     // console.log('--------');\r\n     // console.log('NEW: ',num);\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n\r\n    for (i = 0; i < len; i++) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        if(this.renderConfig.clearCanvas === true){\r\n            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n        }else{\r\n            this.save();\r\n        }\r\n        for (i = len - 1; i >= 0; i-=1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n        if(this.renderConfig.clearCanvas !== true){\r\n            this.restore();\r\n        }\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.buildItem = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n    elements[pos] = element;\r\n    element.initExpressions();\r\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\r\n};\r\n\r\nCanvasRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.hide = function(){\r\n    this.animationItem.container.style.display = 'none';\r\n};\r\n\r\nCanvasRenderer.prototype.show = function(){\r\n    this.animationItem.container.style.display = 'block';\r\n};\r\n\r\nfunction HybridRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.renderConfig = {\r\n        className: (config && config.className) || '',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.pendingElements = [];\r\n    this.elements = [];\r\n    this.threeDElements = [];\r\n    this.destroyed = false;\r\n    this.camera = null;\r\n    this.supports3d = true;\r\n    this.rendererType = 'html';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],HybridRenderer);\r\n\r\nHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\r\nHybridRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newDOMElement = element.getBaseElement();\r\n    if(!newDOMElement){\r\n        return;\r\n    }\r\n    var layer = this.layers[pos];\r\n    if(!layer.ddd || !this.supports3d){\r\n        if(this.threeDElements) {\r\n            this.addTo3dContainer(newDOMElement,pos);\r\n        } else {\r\n            var i = 0;\r\n            var nextDOMElement, nextLayer, tmpDOMElement;\r\n            while(i<pos){\r\n                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n                    nextLayer = this.elements[i];\r\n                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n                    nextDOMElement = tmpDOMElement || nextDOMElement;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(nextDOMElement){\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n                }\r\n            } else {\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.appendChild(newDOMElement);\r\n                }\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        this.addTo3dContainer(newDOMElement,pos);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createShape = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGShapeElement(data, this.globalData, this);\r\n    }\r\n    return new HShapeElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createText = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGTextElement(data, this.globalData, this);\r\n    }\r\n    return new HTextElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createCamera = function (data) {\r\n    this.camera = new HCameraElement(data, this.globalData, this);\r\n    return this.camera;\r\n};\r\n\r\nHybridRenderer.prototype.createImage = function (data) {\r\n    if(!this.supports3d){\r\n        return new IImageElement(data, this.globalData, this);\r\n    }\r\n    return new HImageElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createComp = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGCompElement(data, this.globalData, this);\r\n    }\r\n    return new HCompElement(data, this.globalData, this);\r\n\r\n};\r\n\r\nHybridRenderer.prototype.createSolid = function (data) {\r\n    if(!this.supports3d){\r\n        return new ISolidElement(data, this.globalData, this);\r\n    }\r\n    return new HSolidElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len) {\r\n        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n            return this.threeDElements[i].perspectiveElem;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createThreeDContainer = function(pos, type){\r\n    var perspectiveElem = createTag('div');\r\n    styleDiv(perspectiveElem);\r\n    var container = createTag('div');\r\n    styleDiv(container);\r\n    if(type === '3d') {\r\n        perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n        perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    }\r\n    \r\n    perspectiveElem.appendChild(container);\r\n    //this.resizerElem.appendChild(perspectiveElem);\r\n    var threeDContainerData = {\r\n        container:container,\r\n        perspectiveElem:perspectiveElem,\r\n        startPos: pos,\r\n        endPos: pos,\r\n        type: type\r\n    };\r\n    this.threeDElements.push(threeDContainerData);\r\n    return threeDContainerData;\r\n};\r\n\r\nHybridRenderer.prototype.build3dContainers = function(){\r\n    var i, len = this.layers.length;\r\n    var lastThreeDContainerData;\r\n    var currentContainer = '';\r\n    for(i=0;i<len;i+=1){\r\n        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n            if(currentContainer !== '3d'){\r\n                currentContainer = '3d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'3d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        } else {\r\n            if(currentContainer !== '2d'){\r\n                currentContainer = '2d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'2d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        }\r\n    }\r\n    len = this.threeDElements.length;\r\n    for(i = len - 1; i >= 0; i --) {\r\n        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len){\r\n        if(pos <= this.threeDElements[i].endPos){\r\n            var j = this.threeDElements[i].startPos;\r\n            var nextElement;\r\n            while(j<pos){\r\n                if(this.elements[j] && this.elements[j].getBaseElement){\r\n                    nextElement = this.elements[j].getBaseElement();\r\n                }\r\n                j += 1;\r\n            }\r\n            if(nextElement){\r\n                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n            } else {\r\n                this.threeDElements[i].container.appendChild(elem);\r\n            }\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.configAnimation = function(animData){\r\n    var resizerElem = createTag('div');\r\n    var wrapper = this.animationItem.wrapper;\r\n    resizerElem.style.width = animData.w+'px';\r\n    resizerElem.style.height = animData.h+'px';\r\n    this.resizerElem = resizerElem;\r\n    styleDiv(resizerElem);\r\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n    if(this.renderConfig.className) {\r\n      resizerElem.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    wrapper.appendChild(resizerElem);\r\n\r\n    resizerElem.style.overflow = 'hidden';\r\n    var svg = createNS('svg');\r\n    svg.setAttribute('width','1');\r\n    svg.setAttribute('height','1');\r\n    styleDiv(svg);\r\n    this.resizerElem.appendChild(svg);\r\n    var defs = createNS('defs');\r\n    svg.appendChild(defs);\r\n    this.data = animData;\r\n    //Mask animation\r\n    this.setupGlobalData(animData, svg);\r\n    this.globalData.defs = defs;\r\n    this.layers = animData.layers;\r\n    this.layerElement = this.resizerElem;\r\n    this.build3dContainers();\r\n    this.updateContainerSize();\r\n};\r\n\r\nHybridRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.animationItem.container = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        this.elements[i].destroy();\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nHybridRenderer.prototype.updateContainerSize = function () {\r\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n    var elementRel = elementWidth/elementHeight;\r\n    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n    var sx,sy,tx,ty;\r\n    if(animationRel>elementRel){\r\n        sx = elementWidth/(this.globalData.compSize.w);\r\n        sy = elementWidth/(this.globalData.compSize.w);\r\n        tx = 0;\r\n        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n    }else{\r\n        sx = elementHeight/(this.globalData.compSize.h);\r\n        sy = elementHeight/(this.globalData.compSize.h);\r\n        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n        ty = 0;\r\n    }\r\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n};\r\n\r\nHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\r\nHybridRenderer.prototype.hide = function(){\r\n    this.resizerElem.style.display = 'none';\r\n};\r\n\r\nHybridRenderer.prototype.show = function(){\r\n    this.resizerElem.style.display = 'block';\r\n};\r\n\r\nHybridRenderer.prototype.initItems = function(){\r\n    this.buildAllItems();\r\n    if(this.camera){\r\n        this.camera.setup();\r\n    } else {\r\n        var cWidth = this.globalData.compSize.w;\r\n        var cHeight = this.globalData.compSize.h;\r\n        var i, len = this.threeDElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n        }\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = createTag('div');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction MaskElement(data,element,globalData) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = createElementID();\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w || 0);\r\n            rect.setAttribute('height', this.element.comp.data.h || 0);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n                elem: path,\r\n                lastPath: ''\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n            filterID = createElementID();\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','erode');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n    if (this.viewData.length) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n    var finalMat = this.element.finalTransform.mat;\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    addDynamicProperty: function(prop) {\r\n        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n            this.dynamicProperties.push(prop);\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n        //list of animated components\r\n        this.renderableComponents = [];\r\n    },\r\n    addRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) === -1) {\r\n            this.renderableComponents.push(component);\r\n        }\r\n    },\r\n    removeRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) !== -1) {\r\n            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n        }\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        var i, len = this.renderableComponents.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n        }\r\n        /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.createRenderableComponents();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                var elem = this.baseElement || this.layerElement;\r\n                elem.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    var elem = this.baseElement || this.layerElement;\r\n                    elem.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = data.hd === true;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n    //TODO find if there are some cases where _isAnimated can be false. \r\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n    this._isAnimated = !!shape.k;\r\n    // TODO: commenting this for now since all shapes are animated\r\n    var i = 0, len = transformers.length;\r\n    while(i < len) {\r\n    \tif(transformers[i].mProps.dynamicProperties.length) {\r\n    \t\tthis._isAnimated = true;\r\n    \t\tbreak;\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function() {\r\n    this._isAnimated = true;\r\n}\r\nfunction SVGTransformData(mProps, op, container) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op,\r\n\t\tcontainer: container\r\n\t};\r\n\tthis.elements = [];\r\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\r\nfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\r\nfunction SVGFillStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\r\nfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.getValue = this.iterateDynamicProperties;\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);\r\n    this.g = new GradientProperty(elem,data.g,this);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = createElementID();\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = createElementID();\r\n        var maskId = createElementID();\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\r\nfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n    this.initGradientData(elem, data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nvar SVGElementsRenderer = (function() {\r\n\tvar _identityMatrix = new Matrix();\r\n\tvar _matrixHelper = new Matrix();\r\n\r\n\tvar ob = {\r\n\t\tcreateRenderFunction: createRenderFunction\r\n\t}\r\n\r\n\tfunction createRenderFunction(data) {\r\n\t    var ty = data.ty;\r\n\t    switch(data.ty) {\r\n\t        case 'fl':\r\n\t        return renderFill;\r\n\t        case 'gf':\r\n\t        return renderGradient;\r\n\t        case 'gs':\r\n\t        return renderGradientStroke;\r\n\t        case 'st':\r\n\t        return renderStroke;\r\n\t        case 'sh':\r\n\t        case 'el':\r\n\t        case 'rc':\r\n\t        case 'sr':\r\n\t        return renderPath;\r\n\t        case 'tr':\r\n\t        return renderContentTransform;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderContentTransform(styleData, itemData, isFirstFrame) {\r\n\t    if(isFirstFrame || itemData.transform.op._mdf){\r\n\t        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);\r\n\t    }\r\n\t    if(isFirstFrame || itemData.transform.mProps._mdf){\r\n\t        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderPath(styleData, itemData, isFirstFrame) {\r\n\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t    var lvl = itemData.lvl;\r\n\t    var paths, mat, props, iterations, k;\r\n\t    for(l=0;l<lLen;l+=1){\r\n\t        redraw = itemData.sh._mdf || isFirstFrame;\r\n\t        if(itemData.styles[l].lvl < lvl){\r\n\t            mat = _matrixHelper.reset();\r\n\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t            k = itemData.transformers.length-1;\r\n\t            while(!redraw && iterations > 0) {\r\n\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t                iterations --;\r\n\t                k --;\r\n\t            }\r\n\t            if(redraw) {\r\n\t                iterations = lvl - itemData.styles[l].lvl;\r\n\t                k = itemData.transformers.length-1;\r\n\t                while(iterations > 0) {\r\n\t                    props = itemData.transformers[k].mProps.v.props;\r\n\t                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t                    iterations --;\r\n\t                    k --;\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            mat = _identityMatrix;\r\n\t        }\r\n\t        paths = itemData.sh.paths;\r\n\t        jLen = paths._length;\r\n\t        if(redraw){\r\n\t            pathStringTransformed = '';\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                pathNodes = paths.shapes[j];\r\n\t                if(pathNodes && pathNodes._length){\r\n\t                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t                }\r\n\t            }\r\n\t            itemData.caches[l] = pathStringTransformed;\r\n\t        } else {\r\n\t            pathStringTransformed = itemData.caches[l];\r\n\t        }\r\n\t        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\r\n\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderFill (styleData,itemData, isFirstFrame){\r\n\t    var styleElem = itemData.style;\r\n\r\n\t    if(itemData.c._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderGradientStroke (styleData, itemData, isFirstFrame) {\r\n\t    renderGradient(styleData, itemData, isFirstFrame);\r\n\t    renderStroke(styleData, itemData, isFirstFrame);\r\n\t}\r\n\r\n\tfunction renderGradient(styleData, itemData, isFirstFrame) {\r\n\t    var gfill = itemData.gf;\r\n\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n\t    if (itemData.o._mdf || isFirstFrame) {\r\n\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t    }\r\n\t    if (itemData.s._mdf || isFirstFrame) {\r\n\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t        }\r\n\t    }\r\n\t    var stops, i, len, stop;\r\n\t    if (itemData.g._cmdf || isFirstFrame) {\r\n\t        stops = itemData.cst;\r\n\t        var cValues = itemData.g.c;\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1){\r\n\t            stop = stops[i];\r\n\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t        }\r\n\t    }\r\n\t    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n\t        var oValues = itemData.g.o;\r\n\t        if(itemData.g._collapsable) {\r\n\t            stops = itemData.cst;\r\n\t        } else {\r\n\t            stops = itemData.ost;\r\n\t        }\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            stop = stops[i];\r\n\t            if(!itemData.g._collapsable) {\r\n\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t            }\r\n\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t        }\r\n\t    }\r\n\t    if (styleData.t === 1) {\r\n\t        if (itemData.e._mdf  || isFirstFrame) {\r\n\t            gfill.setAttribute('x2', pt2[0]);\r\n\t            gfill.setAttribute('y2', pt2[1]);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        var rad;\r\n\t        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            gfill.setAttribute('r', rad);\r\n\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t                itemData.of.setAttribute('r', rad);\r\n\t            }\r\n\t        }\r\n\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n\t            if (!rad) {\r\n\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            }\r\n\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t            var dist = rad * percent;\r\n\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t            gfill.setAttribute('fx', x);\r\n\t            gfill.setAttribute('fy', y);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('fx', x);\r\n\t                itemData.of.setAttribute('fy', y);\r\n\t            }\r\n\t        }\r\n\t        //gfill.setAttribute('fy','200');\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderStroke(styleData, itemData, isFirstFrame) {\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t    }\r\n\t    if(itemData.c && (itemData.c._mdf || isFirstFrame)){\r\n\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t    }\r\n\t    if(itemData.w._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        if(styleElem.msElem){\r\n\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        }\r\n\t    }\r\n\t};\r\n\r\n\treturn ob;\r\n}())\r\nfunction ShapeTransformManager() {\r\n\tthis.sequences = {};\r\n\tthis.sequenceList = [];\r\n    this.transform_key_count = 0;\r\n}\r\n\r\nShapeTransformManager.prototype = {\r\n\taddTransformSequence: function(transforms) {\r\n\t\tvar i, len = transforms.length;\r\n\t\tvar key = '_';\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tkey += transforms[i].transform.key + '_';\r\n\t\t}\r\n\t\tvar sequence = this.sequences[key];\r\n\t\tif(!sequence) {\r\n\t\t\tsequence = {\r\n\t\t\t\ttransforms: [].concat(transforms),\r\n\t\t\t\tfinalTransform: new Matrix(),\r\n\t\t\t\t_mdf: false\r\n\t\t\t};\r\n\t\t\tthis.sequences[key] = sequence;\r\n\t\t\tthis.sequenceList.push(sequence);\r\n\t\t}\r\n\t\treturn sequence;\r\n\t},\r\n\tprocessSequence: function(sequence, isFirstFrame) {\r\n\t\tvar i = 0, len = sequence.transforms.length, _mdf = isFirstFrame;\r\n\t\twhile (i < len && !isFirstFrame) {\r\n\t\t\tif (sequence.transforms[i].transform.mProps._mdf) {\r\n\t\t\t\t_mdf = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti += 1\r\n\t\t}\r\n\t\tif (_mdf) {\r\n\t\t\tvar props;\r\n\t\t\tsequence.finalTransform.reset();\r\n\t\t\tfor (i = len - 1; i >= 0; i -= 1) {\r\n\t\t        props = sequence.transforms[i].transform.mProps.v.props;\r\n\t\t        sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsequence._mdf = _mdf;\r\n\t\t\r\n\t},\r\n\tprocessSequences: function(isFirstFrame) {\r\n\t\tvar i, len = this.sequenceList.length;\r\n\t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\tthis.processSequence(this.sequenceList[i], isFirstFrame);\r\n\t\t}\r\n\r\n\t},\r\n\tgetNewKey: function() {\r\n\t\treturn '_' + this.transform_key_count++;\r\n\t}\r\n}\r\nfunction CVShapeData(element, data, styles, transformsManager) {\r\n    this.styledShapes = [];\r\n    this.tr = [0,0,0,0,0,0];\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);\r\n    var i , len = styles.length,styledShape;\r\n    for (i = 0; i < len; i += 1) {\r\n        if (!styles[i].closed) {\r\n            styledShape = {\r\n                transforms: transformsManager.addTransformSequence(styles[i].transforms),\r\n                trNodes: []\r\n            }\r\n            this.styledShapes.push(styledShape);\r\n            styles[i].elements.push(styledShape);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\r\nfunction BaseElement(){\r\n}\r\n\r\nBaseElement.prototype = {\r\n    checkMasks: function(){\r\n        if(!this.data.hasMask){\r\n            return false;\r\n        }\r\n        var i = 0, len = this.data.masksProperties.length;\r\n        while(i<len) {\r\n            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n                return true;\r\n            }\r\n            i += 1;\r\n        }\r\n        return false;\r\n    },\r\n    initExpressions: function(){\r\n        this.layerInterface = LayerExpressionInterface(this);\r\n        if(this.data.hasMask && this.maskManager) {\r\n            this.layerInterface.registerMaskInterface(this.maskManager);\r\n        }\r\n        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n        this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n        if(this.data.ty === 0 || this.data.xt){\r\n            this.compInterface = CompExpressionInterface(this);\r\n        } else if(this.data.ty === 4){\r\n            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n            this.layerInterface.content = this.layerInterface.shapeInterface;\r\n        } else if(this.data.ty === 5){\r\n            this.layerInterface.textInterface = TextExpressionInterface(this);\r\n            this.layerInterface.text = this.layerInterface.textInterface;\r\n        }\r\n    },\r\n    setBlendMode: function(){\r\n        var blendModeValue = getBlendMode(this.data.bm);\r\n        var elem = this.baseElement || this.layerElement;\r\n\r\n        elem.style['mix-blend-mode'] = blendModeValue;\r\n    },\r\n    initBaseData: function(data, globalData, comp){\r\n        this.globalData = globalData;\r\n        this.comp = comp;\r\n        this.data = data;\r\n        this.layerId = createElementID();\r\n        \r\n        //Stretch factor for old animations missing this property.\r\n        if(!this.data.sr){\r\n            this.data.sr = 1;\r\n        }\r\n        // effects manager\r\n        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        \r\n    },\r\n    getType: function(){\r\n        return this.type;\r\n    }\r\n    ,sourceRectAtTime: function(){}\r\n}\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = createElementID();\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = createElementID();\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                // This solution doesn't work on Android when meta tag with viewport attribute is set\r\n                /*var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);*/\r\n                ////\r\n                var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);\r\n                ////\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = createElementID();\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    createRenderableComponents: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    isShapeInAnimatedModifiers: function(data) {\r\n        var i = 0, len = this.shapeModifiers.length;\r\n        while(i < len) {\r\n            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].sh.reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'bevel'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var elements = this.processedElements;\r\n        var i = 0, len = elements.length;\r\n        while (i < len) {\r\n            if (elements[i].elem === elem) {\r\n                return elements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var elements = this.processedElements;\r\n        var i = elements.length;\r\n        while(i) {\r\n            i -= 1;\r\n            if (elements[i].elem === elem) {\r\n                elements[i].pos = pos;\r\n                return;\r\n            }\r\n        }\r\n        elements.push(new ProcessedElement(elem, pos));\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n        this.textProperty._mdf = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    //This iteration needs to be backwards because of how expressions connect between each other\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n    this.sourceRect = {top:0,left:0,width:this.assetData.w,height:this.assetData.h};\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nIImageElement.prototype.sourceRectAtTime = function() {\r\n\treturn this.sourceRect;\r\n}\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n    this.layerElement.setAttribute('arial-label', documentData.t);\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = !!this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape && tSpan) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function(){\r\n    var i, len = this.shapes.length, shape;\r\n    var j, jLen = this.stylesList.length;\r\n    var style, count = 0;\r\n    var tempShapes = [];\r\n    var areAnimated = false;\r\n    for(j = 0; j < jLen; j += 1) {\r\n        style = this.stylesList[j];\r\n        areAnimated = false;\r\n        tempShapes.length = 0;\r\n        for(i = 0; i < len; i += 1) {\r\n            shape = this.shapes[i];\r\n            if(shape.styles.indexOf(style) !== -1) {\r\n                tempShapes.push(shape);\r\n                areAnimated = shape._isAnimated || areAnimated;\r\n            }\r\n        }\r\n        if(tempShapes.length > 1 && areAnimated) {\r\n            this.setShapesAsAnimated(tempShapes);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function(shapes){\r\n    var i, len = shapes.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        shapes[i].setAsAnimated();\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(' + locationHref + '#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        elementData.gr.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, container) {\r\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);\r\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function(data, element) {\r\n    var i = 0, len = this.animatedContents.length;\r\n    while(i < len) {\r\n        if(this.animatedContents[i].element === element) {\r\n            return;\r\n        }\r\n        i += 1;\r\n    }\r\n    this.animatedContents.push({\r\n        fn: SVGElementsRenderer.createRenderFunction(data),\r\n        element: element,\r\n        data: data\r\n    });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], container);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape();\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function() {\r\n    var i, len = this.animatedContents.length;\r\n    var animatedContent;\r\n    for(i = 0; i < len; i += 1) {\r\n        animatedContent = this.animatedContents[i];\r\n        if((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\r\n            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapesData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = createElementID();\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        while (elemChildren[0]) {\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.paths[i].m === -1) {\r\n            continue;\r\n        }\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = createElementID();\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        var useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var elements = this.elem.comp.elements;\r\n    var i = 0, len = elements.length;\r\n    while (i < len) {\r\n    \tif (elements[i] && elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = createElementID();\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n    if (this.filters.length) {\r\n        elem.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nfunction CVContextData() {\r\n\tthis.saved = [];\r\n    this.cArrPos = 0;\r\n    this.cTr = new Matrix();\r\n    this.cO = 1;\r\n    var i, len = 15;\r\n    this.savedOp = createTypedArray('float32', len);\r\n    for(i=0;i<len;i+=1){\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = len;\r\n}\r\n\r\nCVContextData.prototype.duplicate = function() {\r\n\tvar newLength = this._length * 2;\r\n\tvar currentSavedOp = this.savedOp;\r\n    this.savedOp = createTypedArray('float32', newLength);\r\n    this.savedOp.set(currentSavedOp);\r\n    var i = 0;\r\n    for(i = this._length; i < newLength; i += 1) {\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = newLength;\r\n};\r\n\r\nCVContextData.prototype.reset = function() {\r\n\tthis.cArrPos = 0;\r\n\tthis.cTr.reset();\r\n    this.cO = 1;\r\n};\r\nfunction CVBaseElement(){\r\n}\r\n\r\nCVBaseElement.prototype = {\r\n    createElements: function(){},\r\n    initRendererElement: function(){},\r\n    createContainerElements: function(){\r\n        this.canvasContext = this.globalData.canvasContext;\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n    },\r\n    createContent: function(){},\r\n    setBlendMode: function(){\r\n        var globalData = this.globalData;\r\n        if(globalData.blendMode !== this.data.bm) {\r\n            globalData.blendMode = this.data.bm;\r\n            var blendModeValue = getBlendMode(this.data.bm);\r\n            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new CVMaskElement(this.data, this);\r\n    },\r\n    hideElement: function(){\r\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n            this.hidden = true;\r\n        }\r\n    },\r\n    showElement: function(){\r\n        if (this.isInRange && !this.isTransparent){\r\n            this.hidden = false;\r\n            this._isFirstFrame = true;\r\n            this.maskManager._isFirstFrame = true;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        if (this.hidden || this.data.hd) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.setBlendMode();\r\n        this.globalData.renderer.save();\r\n        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n        this.renderInnerContent();\r\n        this.globalData.renderer.restore();\r\n        if(this.maskManager.hasMasks) {\r\n            this.globalData.renderer.restore(true);\r\n        }\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.canvasContext = null;\r\n        this.data = null;\r\n        this.globalData = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\nCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\r\nfunction CVImageElement(data, globalData, comp){\r\n    this.failed = false;\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.img = globalData.imageLoader.getImage(this.assetData);\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\r\nCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVImageElement.prototype.createContent = function(){\r\n\r\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\r\n        var canvas = createTag('canvas');\r\n        canvas.width = this.assetData.w;\r\n        canvas.height = this.assetData.h;\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imgW = this.img.width;\r\n        var imgH = this.img.height;\r\n        var imgRel = imgW / imgH;\r\n        var canvasRel = this.assetData.w/this.assetData.h;\r\n        var widthCrop, heightCrop;\r\n        var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\r\n        if((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\r\n            heightCrop = imgH;\r\n            widthCrop = heightCrop*canvasRel;\r\n        } else {\r\n            widthCrop = imgW;\r\n            heightCrop = widthCrop/canvasRel;\r\n        }\r\n        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n        this.img = canvas;\r\n    }\r\n\r\n};\r\n\r\nCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n    if (this.failed) {\r\n        return;\r\n    }\r\n    this.canvasContext.drawImage(this.img, 0, 0);\r\n};\r\n\r\nCVImageElement.prototype.destroy = function(){\r\n    this.img = null;\r\n};\r\nfunction CVCompElement(data, globalData, comp) {\r\n    this.completeLayers = false;\r\n    this.layers = data.layers;\r\n    this.pendingElements = [];\r\n    this.elements = createSizedArray(this.layers.length);\r\n    this.initElement(data, globalData, comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\r\nCVCompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nCVCompElement.prototype.destroy = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.layers = null;\r\n    this.elements = null;\r\n};\r\n\r\nfunction CVMaskElement(data,element){\r\n    this.data = data;\r\n    this.element = element;\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.viewData = createSizedArray(this.masksProperties.length);\r\n    var i, len = this.masksProperties.length, hasMasks = false;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            hasMasks = true;\r\n        }\r\n        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n    }\r\n    this.hasMasks = hasMasks;\r\n    if(hasMasks) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nCVMaskElement.prototype.renderFrame = function () {\r\n    if(!this.hasMasks){\r\n        return;\r\n    }\r\n    var transform = this.element.finalTransform.mat;\r\n    var ctx = this.element.canvasContext;\r\n    var i, len = this.masksProperties.length;\r\n    var pt,pts,data;\r\n    ctx.beginPath();\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if (this.masksProperties[i].inv) {\r\n                ctx.moveTo(0, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, 0);\r\n            }\r\n            data = this.viewData[i].v;\r\n            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n            ctx.moveTo(pt[0], pt[1]);\r\n            var j, jLen = data._length;\r\n            for (j = 1; j < jLen; j++) {\r\n                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n            }\r\n            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n        }\r\n    }\r\n    this.element.globalData.renderer.save(true);\r\n    ctx.clip();\r\n};\r\n\r\nCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\r\nCVMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n};\r\nfunction CVShapeElement(data, globalData, comp) {\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this.transformsManager = new ShapeTransformManager();\r\n    this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\r\nCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\r\nCVShapeElement.prototype.transformHelper = {opacity:1,_opMdf:false};\r\n\r\nCVShapeElement.prototype.dashResetter = [];\r\n\r\nCVShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n};\r\n\r\nCVShapeElement.prototype.createStyleElement = function(data, transforms) {\r\n    var styleElem = {\r\n        data: data,\r\n        type: data.ty,\r\n        preTransforms: this.transformsManager.addTransformSequence(transforms),\r\n        transforms: [],\r\n        elements: [],\r\n        closed: data.hd === true\r\n    };\r\n    var elementData = {};\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n        if(!elementData.c.k){\r\n            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n        }\r\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,this);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,this);\r\n        elementData.h = PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);\r\n        elementData.a = PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);\r\n        elementData.g = new GradientProperty(this,data.g,this);\r\n    }\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n        if(data.lj == 1) {\r\n            styleElem.ml = data.ml;\r\n        }\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n        if(!elementData.w.k){\r\n            styleElem.wi = elementData.w.v;\r\n        }\r\n        if(data.d){\r\n            var d = new DashProperty(this,data.d,'canvas', this);\r\n            elementData.d = d;\r\n            if(!elementData.d.k){\r\n                styleElem.da = elementData.d.dashArray;\r\n                styleElem.do = elementData.d.dashoffset[0];\r\n            }\r\n        }\r\n    } else {\r\n        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n    }\r\n    this.stylesList.push(styleElem);\r\n    elementData.style = styleElem;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createTransformElement = function(data) {\r\n    var elementData = {\r\n        transform : {\r\n            opacity: 1,\r\n            _opMdf:false,\r\n            key: this.transformsManager.getNewKey(),\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n        }\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createShapeElement = function(data) {\r\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\r\n    \r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.reloadShapes = function() {\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n    len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n};\r\n\r\nCVShapeElement.prototype.addTransformToStyleList = function(transform) {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.push(transform);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.removeTransformFromStyleList = function() {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.pop();\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.closeStyles = function(styles) {\r\n    var i, len = styles.length, j, jLen;\r\n    for (i = 0; i < len; i += 1) {\r\n        styles[i].closed = true;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, shouldRender, transforms){\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], processedPos, modifier, currentTransform;\r\n    var ownTransforms = [].concat(transforms);\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._shouldRender = shouldRender;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st'|| arr[i].ty == 'gf'|| arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            \r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, shouldRender, ownTransforms);\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                currentTransform = this.createTransformElement(arr[i]);\r\n                itemsData[i] = currentTransform;\r\n            }\r\n            ownTransforms.push(itemsData[i]);\r\n            this.addTransformToStyleList(itemsData[i]);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i]);\r\n            }\r\n            \r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        } else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                shouldRender = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    this.removeTransformFromStyleList();\r\n    this.closeStyles(ownStyles);\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderInnerContent = function() {\r\n    this.transformHelper.opacity = 1;\r\n    this.transformHelper._opMdf = false;\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n};\r\n\r\nCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n    var props, groupMatrix;\r\n    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n        groupTransform.opacity = parentTransform.opacity;\r\n        groupTransform.opacity *= groupTransform.op.v;\r\n        groupTransform._opMdf = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.drawLayer = function() {\r\n    var i, len = this.stylesList.length;\r\n    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n    for(i=0;i<len;i+=1){\r\n        currentStyle = this.stylesList[i];\r\n        type = currentStyle.type;\r\n\r\n        //Skipping style when\r\n        //Stroke width equals 0\r\n        //style should not be rendered (extra unused repeaters)\r\n        //current opacity equals 0\r\n        //global opacity equals 0\r\n        if(((type === 'st' || type === 'gs') && currentStyle.wi === 0) || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0){\r\n            continue;\r\n        }\r\n        renderer.save();\r\n        elems = currentStyle.elements;\r\n        if(type === 'st' || type === 'gs'){\r\n            ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\r\n            ctx.lineWidth = currentStyle.wi;\r\n            ctx.lineCap = currentStyle.lc;\r\n            ctx.lineJoin = currentStyle.lj;\r\n            ctx.miterLimit = currentStyle.ml || 0;\r\n        } else {\r\n            ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\r\n        }\r\n        renderer.ctxOpacity(currentStyle.coOp);\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.beginPath();\r\n        }\r\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\r\n        jLen = elems.length;\r\n        for(j=0;j<jLen;j+=1){\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.beginPath();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(currentStyle.da);\r\n                    ctx.lineDashOffset = currentStyle.do;\r\n                }\r\n            }\r\n            nodes = elems[j].trNodes;\r\n            kLen = nodes.length;\r\n\r\n            for(k=0;k<kLen;k+=1){\r\n                if(nodes[k].t == 'm'){\r\n                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n                }else if(nodes[k].t == 'c'){\r\n                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n                }else{\r\n                    ctx.closePath();\r\n                }\r\n            }\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.stroke();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(this.dashResetter);\r\n                }\r\n            }\r\n        }\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.fill(currentStyle.r);\r\n        }\r\n        renderer.restore();\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n    var i, len = items.length - 1;\r\n    var groupTransform;\r\n    groupTransform = parentTransform;\r\n    for(i=len;i>=0;i-=1){\r\n        if(items[i].ty == 'tr'){\r\n            groupTransform = data[i].transform;\r\n            this.renderShapeTransform(parentTransform, groupTransform);\r\n        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(items[i].ty == 'fl'){\r\n            this.renderFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'st'){\r\n            this.renderStroke(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gf' || items[i].ty == 'gs'){\r\n            this.renderGradientFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gr'){\r\n            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n        }else if(items[i].ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n    if(isMain){\r\n        this.drawLayer();\r\n    }\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStyledShape = function(styledShape, shape){\r\n    if(this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\r\n        var shapeNodes = styledShape.trNodes;\r\n        var paths = shape.paths;\r\n        var i, len, j, jLen = paths._length;\r\n        shapeNodes.length = 0;\r\n        var groupTransformMat = styledShape.transforms.finalTransform;\r\n        for (j = 0; j < jLen; j += 1) {\r\n            var pathNodes = paths.shapes[j];\r\n            if(pathNodes && pathNodes.v){\r\n                len = pathNodes._length;\r\n                for (i = 1; i < len; i += 1) {\r\n                    if (i === 1) {\r\n                        shapeNodes.push({\r\n                            t: 'm',\r\n                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                        });\r\n                    }\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n                    });\r\n                }\r\n                if (len === 1) {\r\n                    shapeNodes.push({\r\n                        t: 'm',\r\n                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                    });\r\n                }\r\n                if (pathNodes.c && len) {\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n                    });\r\n                    shapeNodes.push({\r\n                        t: 'z'\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        styledShape.trNodes = shapeNodes;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    if(pathData.hd !== true && pathData._shouldRender) {\r\n        var i, len = itemData.styledShapes.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\r\n        }\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n\r\n    if (itemData.c._mdf || this._isFirstFrame) {\r\n        styleElem.co = 'rgb(' \r\n        + bm_floor(itemData.c.v[0]) + ',' \r\n        + bm_floor(itemData.c.v[1]) + ',' \r\n        + bm_floor(itemData.c.v[2]) + ')';\r\n    }\r\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\r\n        styleElem.coOp = itemData.o.v * groupTransform.opacity;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderGradientFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    if(!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))) {\r\n        var ctx = this.globalData.canvasContext;\r\n        var grd;\r\n        var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n        if (styleData.t === 1) {\r\n            grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\r\n        } else {\r\n            var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\r\n        }\r\n\r\n        var i, len = styleData.g.p;\r\n        var cValues = itemData.g.c;\r\n        var opacity = 1;\r\n\r\n        for (i = 0; i < len; i += 1){\r\n            if(itemData.g._hasOpacity && itemData.g._collapsable) {\r\n                opacity = itemData.g.o[i*2 + 1];\r\n            }\r\n            grd.addColorStop(cValues[i * 4] / 100,'rgba('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ',' + opacity + ')');\r\n        }\r\n        styleElem.grd = grd;\r\n    }\r\n    styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if(d && (d._mdf  || this._isFirstFrame)){\r\n        styleElem.da = d.dashArray;\r\n        styleElem.do = d.dashoffset[0];\r\n    }\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.wi = itemData.w.v;\r\n    }\r\n};\r\n\r\n\r\nCVShapeElement.prototype.destroy = function(){\r\n    this.shapesData = null;\r\n    this.globalData = null;\r\n    this.canvasContext = null;\r\n    this.stylesList.length = 0;\r\n    this.itemsData.length = 0;\r\n};\r\n\r\n\r\nfunction CVSolidElement(data, globalData, comp) {\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\r\nCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVSolidElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.fillStyle = this.data.sc;\r\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n    //\r\n};\r\nfunction CVTextElement(data, globalData, comp){\r\n    this.textSpans = [];\r\n    this.yOffset = 0;\r\n    this.fillColorAnim = false;\r\n    this.strokeColorAnim = false;\r\n    this.strokeWidthAnim = false;\r\n    this.stroke = false;\r\n    this.fill = false;\r\n    this.justifyOffset = 0;\r\n    this.currentRender = null;\r\n    this.renderType = 'canvas';\r\n    this.values = {\r\n        fill: 'rgba(0,0,0,0)',\r\n        stroke: 'rgba(0,0,0,0)',\r\n        sWidth: 0,\r\n        fValue: ''\r\n    };\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\r\nCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\r\nCVTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\r\n    var hasFill = false;\r\n    if(documentData.fc) {\r\n        hasFill = true;\r\n        this.values.fill = this.buildColor(documentData.fc);\r\n    }else{\r\n        this.values.fill = 'rgba(0,0,0,0)';\r\n    }\r\n    this.fill = hasFill;\r\n    var hasStroke = false;\r\n    if(documentData.sc){\r\n        hasStroke = true;\r\n        this.values.stroke = this.buildColor(documentData.sc);\r\n        this.values.sWidth = documentData.sw;\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    var matrixHelper = this.mHelper;\r\n    this.stroke = hasStroke;\r\n    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n    len = documentData.finalText.length;\r\n    //this.tHelper.font = this.values.fValue;\r\n    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var cnt = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = charData && charData.data || {};\r\n        matrixHelper.reset();\r\n        if(singleShape && letters[i].n) {\r\n            xPos = -trackingOffset;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            firstLine = false;\r\n        }\r\n\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        jLen = shapes.length;\r\n        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n        if(singleShape){\r\n            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        }\r\n        commands = createSizedArray(jLen);\r\n        for(j=0;j<jLen;j+=1){\r\n            kLen = shapes[j].ks.k.i.length;\r\n            pathNodes = shapes[j].ks.k;\r\n            pathArr = [];\r\n            for(k=1;k<kLen;k+=1){\r\n                if(k==1){\r\n                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n                }\r\n                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n            }\r\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n            commands[j] = pathArr;\r\n        }\r\n        if(singleShape){\r\n            xPos += letters[i].l;\r\n            xPos += trackingOffset;\r\n        }\r\n        if(this.textSpans[cnt]){\r\n            this.textSpans[cnt].elem = commands;\r\n        } else {\r\n            this.textSpans[cnt] = {elem: commands};\r\n        }\r\n        cnt +=1;\r\n    }\r\n};\r\n\r\nCVTextElement.prototype.renderInnerContent = function(){\r\n    var ctx = this.canvasContext;\r\n    var finalMat = this.finalTransform.mat.props;\r\n    ctx.font = this.values.fValue;\r\n    ctx.lineCap = 'butt';\r\n    ctx.lineJoin = 'miter';\r\n    ctx.miterLimit = 4;\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    }\r\n\r\n    var  i,len, j, jLen, k, kLen;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter;\r\n    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            continue;\r\n        }\r\n        renderedLetter = renderedLetters[i];\r\n        if(renderedLetter){\r\n            this.globalData.renderer.save();\r\n            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n        }\r\n        if(this.fill){\r\n            if(renderedLetter && renderedLetter.fc){\r\n                if(lastFill !== renderedLetter.fc){\r\n                    lastFill = renderedLetter.fc;\r\n                    ctx.fillStyle = renderedLetter.fc;\r\n                }\r\n            }else if(lastFill !== this.values.fill){\r\n                lastFill = this.values.fill;\r\n                ctx.fillStyle = this.values.fill;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.fill();\r\n            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n        }\r\n        if(this.stroke){\r\n            if(renderedLetter && renderedLetter.sw){\r\n                if(lastStrokeW !== renderedLetter.sw){\r\n                    lastStrokeW = renderedLetter.sw;\r\n                    ctx.lineWidth = renderedLetter.sw;\r\n                }\r\n            }else if(lastStrokeW !== this.values.sWidth){\r\n                lastStrokeW = this.values.sWidth;\r\n                ctx.lineWidth = this.values.sWidth;\r\n            }\r\n            if(renderedLetter && renderedLetter.sc){\r\n                if(lastStroke !== renderedLetter.sc){\r\n                    lastStroke = renderedLetter.sc;\r\n                    ctx.strokeStyle = renderedLetter.sc;\r\n                }\r\n            }else if(lastStroke !== this.values.stroke){\r\n                lastStroke = this.values.stroke;\r\n                ctx.strokeStyle = this.values.stroke;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.stroke();\r\n            ///ctx.strokeText(letters[i].val,0,0);\r\n        }\r\n        if(renderedLetter) {\r\n            this.globalData.renderer.restore();\r\n        }\r\n    }\r\n};\r\nfunction CVEffects() {\r\n\r\n}\r\nCVEffects.prototype.renderFrame = function(){};\r\nfunction HBaseElement(data,globalData,comp){}\r\nHBaseElement.prototype = {\r\n    checkBlendMode: function(){},\r\n    initRendererElement: function(){\r\n        this.baseElement = createTag(this.data.tg || 'div');\r\n        if(this.data.hasMask) {\r\n            this.svgElement = createNS('svg');\r\n            this.layerElement = createNS('g');\r\n            this.maskedElement = this.layerElement;\r\n            this.svgElement.appendChild(this.layerElement);\r\n            this.baseElement.appendChild(this.svgElement);\r\n        } else {\r\n            this.layerElement = this.baseElement;\r\n        }\r\n        styleDiv(this.baseElement);\r\n    },\r\n    createContainerElements: function(){\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n        this.transformedElement = this.baseElement;\r\n        this.maskedElement = this.layerElement;\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n    },\r\n    renderElement: function() {\r\n        if(this.finalTransform._matMdf){\r\n            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n        }\r\n        if(this.finalTransform._opMdf){\r\n            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        //If it is exported as hidden (data.hd === true) no need to render\r\n        //If it is not visible no need to render\r\n        if (this.data.hd || this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.renderElement();\r\n        this.renderInnerContent();\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.layerElement = null;\r\n        this.transformedElement = null;\r\n        if(this.matteElement) {\r\n            this.matteElement = null;\r\n        }\r\n        if(this.maskManager) {\r\n            this.maskManager.destroy();\r\n            this.maskManager = null;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    addEffects: function(){\r\n    },\r\n    setMatte: function(){}\r\n};\r\nHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\nHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\nHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\r\nfunction HSolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\r\nHSolidElement.prototype.createContent = function(){\r\n    var rect;\r\n    if(this.data.hasMask){\r\n        rect = createNS('rect');\r\n        rect.setAttribute('width',this.data.sw);\r\n        rect.setAttribute('height',this.data.sh);\r\n        rect.setAttribute('fill',this.data.sc);\r\n        this.svgElement.setAttribute('width',this.data.sw);\r\n        this.svgElement.setAttribute('height',this.data.sh);\r\n    } else {\r\n        rect = createTag('div');\r\n        rect.style.width = this.data.sw + 'px';\r\n        rect.style.height = this.data.sh + 'px';\r\n        rect.style.backgroundColor = this.data.sc;\r\n    }\r\n    this.layerElement.appendChild(rect);\r\n};\r\n\r\nfunction HCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = !data.hasMask;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\nHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\r\nHCompElement.prototype.createContainerElements = function(){\r\n    this._createBaseContainerElements();\r\n    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n    if(this.data.hasMask){\r\n        this.svgElement.setAttribute('width',this.data.w);\r\n        this.svgElement.setAttribute('height',this.data.h);\r\n        this.transformedElement = this.baseElement;\r\n    } else {\r\n        this.transformedElement = this.layerElement;\r\n    }\r\n};\r\n\r\nHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n    var j = 0;\r\n    var nextElement;\r\n    while(j<pos){\r\n        if(this.elements[j] && this.elements[j].getBaseElement){\r\n            nextElement = this.elements[j].getBaseElement();\r\n        }\r\n        j += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(elem, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(elem);\r\n    }\r\n}\r\n\r\nfunction HShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.shapesContainer = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n}\r\nextendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\nHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\r\nHShapeElement.prototype.createContent = function(){\r\n    var cont;\r\n    this.baseElement.style.fontSize = 0;\r\n    if (this.data.hasMask) {\r\n        this.layerElement.appendChild(this.shapesContainer);\r\n        cont = this.svgElement;\r\n    } else {\r\n        cont = createNS('svg');\r\n        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n        cont.setAttribute('width',size.w);\r\n        cont.setAttribute('height',size.h);\r\n        cont.appendChild(this.shapesContainer);\r\n        this.layerElement.appendChild(cont);\r\n    }\r\n\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n    this.filterUniqueShapes();\r\n    this.shapeCont = cont;\r\n};\r\n\r\nHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n    var i, len = transformers.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n    }\r\n    return point;\r\n}\r\n\r\nHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n    var shape = item.sh.v;\r\n    var transformers = item.transformers;\r\n    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n    if (len <= 1) {\r\n        return;\r\n    }\r\n    for (i = 0; i < len - 1; i += 1) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n    if(shape.c) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n    var bounds = this.shapeBoundingBox;\r\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n}\r\n\r\nHShapeElement.prototype.shapeBoundingBox = {\r\n    left:0,\r\n    right:0,\r\n    top:0,\r\n    bottom:0,\r\n}\r\n\r\nHShapeElement.prototype.tempBoundingBox = {\r\n    x:0,\r\n    xMax:0,\r\n    y:0,\r\n    yMax:0,\r\n    width:0,\r\n    height:0\r\n}\r\n\r\nHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\r\n    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\r\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\r\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n      c = 3 * p1[i] - 3 * p0[i];\r\n\r\n      b = b | 0;\r\n      a = a | 0;\r\n      c = c | 0;\r\n\r\n      if (a === 0) {\r\n\r\n        if (b === 0) {\r\n          continue;\r\n        }\r\n\r\n        t = -c / b;\r\n\r\n        if (0 < t && t < 1) {\r\n          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n        }\r\n        continue;\r\n      }\r\n\r\n      b2ac = b * b - 4 * c * a;\r\n\r\n      if (b2ac < 0) {\r\n        continue;\r\n      }\r\n\r\n      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\r\n      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\r\n    }\r\n\r\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n  };\r\n\r\n  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n    return bm_pow(1-t, 3) * p0[i]\r\n        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n        + bm_pow(t, 3) * p3[i];\r\n  }\r\n\r\nHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n    var i, len = itemsData.length, path;\r\n    for(i = 0; i < len; i += 1) {\r\n        if(itemsData[i] && itemsData[i].sh) {\r\n            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n        } else if(itemsData[i] && itemsData[i].it) {\r\n            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n        }\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.currentBoxContains = function(box) {\r\n    return this.currentBBox.x <= box.x \r\n    && this.currentBBox.y <= box.y \r\n    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width\r\n    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height\r\n}\r\n\r\nHShapeElement.prototype.renderInnerContent = function() {\r\n    this._renderShapeFrame();\r\n\r\n    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n        var tempBoundingBox = this.tempBoundingBox;\r\n        var max = 999999;\r\n        tempBoundingBox.x = max;\r\n        tempBoundingBox.xMax = -max;\r\n        tempBoundingBox.y = max;\r\n        tempBoundingBox.yMax = -max;\r\n        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n        //var tempBoundingBox = this.shapeCont.getBBox();\r\n        if(this.currentBoxContains(tempBoundingBox)) {\r\n            return;\r\n        }\r\n        var changed = false;\r\n        if(this.currentBBox.w !== tempBoundingBox.width){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n            changed = true;\r\n        }\r\n        if(this.currentBBox.h !== tempBoundingBox.height){\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n            changed = true;\r\n        }\r\n        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.currentBBox.x = tempBoundingBox.x;\r\n            this.currentBBox.y = tempBoundingBox.y;\r\n\r\n            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n\r\n};\r\nfunction HTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.textPaths = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n    this.renderType = 'svg';\r\n    this.isMasked = false;\r\n    this.initElement(data,globalData,comp);\r\n\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\r\nHTextElement.prototype.createContent = function(){\r\n    this.isMasked = this.checkMasks();\r\n    if(this.isMasked){\r\n        this.renderType = 'svg';\r\n        this.compW = this.comp.data.w;\r\n        this.compH = this.comp.data.h;\r\n        this.svgElement.setAttribute('width',this.compW);\r\n        this.svgElement.setAttribute('height',this.compH);\r\n        var g = createNS('g');\r\n        this.maskedElement.appendChild(g);\r\n        this.innerElem = g;\r\n    } else {\r\n        this.renderType = 'html';\r\n        this.innerElem = this.layerElement;\r\n    }\r\n\r\n    this.checkParenting();\r\n\r\n};\r\n\r\nHTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n    var innerElemStyle = this.innerElem.style;\r\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n    if(documentData.sc){\r\n        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(!this.globalData.fontManager.chars){\r\n        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n        if(fontData.fClass){\r\n            this.innerElem.className = fontData.fClass;\r\n        } else {\r\n            innerElemStyle.fontFamily = fontData.fFamily;\r\n            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n            innerElemStyle.fontStyle = fStyle;\r\n            innerElemStyle.fontWeight = fWeight;\r\n        }\r\n    }\r\n    var i, len;\r\n\r\n    var letters = documentData.l;\r\n    len = letters.length;\r\n    var tSpan,tParent,tCont;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '';\r\n    var cnt = 0;\r\n    for (i = 0;i < len ;i += 1) {\r\n        if(this.globalData.fontManager.chars){\r\n            if(!this.textPaths[cnt]){\r\n                tSpan = createNS('path');\r\n                tSpan.setAttribute('stroke-linecap', 'butt');\r\n                tSpan.setAttribute('stroke-linejoin','round');\r\n                tSpan.setAttribute('stroke-miterlimit','4');\r\n            } else {\r\n                tSpan = this.textPaths[cnt];\r\n            }\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tCont = tParent.children[0];\r\n                } else {\r\n\r\n                    tParent = createTag('div');\r\n                    tCont = createNS('svg');\r\n                    tCont.appendChild(tSpan);\r\n                    styleDiv(tParent);\r\n                }\r\n            }\r\n        }else{\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tSpan = this.textPaths[cnt];\r\n                } else {\r\n                    tParent = createTag('span');\r\n                    styleDiv(tParent);\r\n                    tSpan = createTag('span');\r\n                    styleDiv(tSpan);\r\n                    tParent.appendChild(tSpan);\r\n                }\r\n            } else {\r\n                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n            }\r\n        }\r\n        //tSpan.setAttribute('visibility', 'hidden');\r\n        if(this.globalData.fontManager.chars){\r\n            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n            var shapeData;\r\n            if(charData){\r\n                shapeData = charData.data;\r\n            } else {\r\n                shapeData = null;\r\n            }\r\n            matrixHelper.reset();\r\n            if(shapeData && shapeData.shapes){\r\n                shapes = shapeData.shapes[0].it;\r\n                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n                tSpan.setAttribute('d',shapeStr);\r\n            }\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                if(shapeData && shapeData.shapes){\r\n\r\n                    //document.body.appendChild is needed to get exact measure of shape\r\n                    document.body.appendChild(tCont);\r\n                    var boundingBox = tCont.getBBox();\r\n                    tCont.setAttribute('width',boundingBox.width + 2);\r\n                    tCont.setAttribute('height',boundingBox.height + 2);\r\n                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\r\n                    letters[i].yOffset = boundingBox.y-1;\r\n\r\n                } else{\r\n                    tCont.setAttribute('width',1);\r\n                    tCont.setAttribute('height',1);\r\n                }\r\n                    tParent.appendChild(tCont);\r\n            }else{\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }else{\r\n            tSpan.textContent = letters[i].val;\r\n            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                //\r\n                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n            } else {\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }\r\n        //\r\n        if(!this.isMasked){\r\n            this.textSpans[cnt] = tParent;\r\n        }else{\r\n            this.textSpans[cnt] = tSpan;\r\n        }\r\n        this.textSpans[cnt].style.display = 'block';\r\n        this.textPaths[cnt] = tSpan;\r\n        cnt += 1;\r\n    }\r\n    while(cnt < this.textSpans.length){\r\n        this.textSpans[cnt].style.display = 'none';\r\n        cnt += 1;\r\n    }\r\n};\r\n\r\nHTextElement.prototype.renderInnerContent = function() {\r\n\r\n    if(this.data.singleShape){\r\n        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n            return;\r\n        } else {\r\n            // Todo Benchmark if using this is better than getBBox\r\n             if(this.isMasked && this.finalTransform._matMdf){\r\n                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n             }\r\n        }\r\n    }\r\n\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n        return;\r\n    }\r\n    var  i,len, count = 0;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter, textSpan, textPath;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            count += 1;\r\n            continue;\r\n        }\r\n        textSpan = this.textSpans[i];\r\n        textPath = this.textPaths[i];\r\n        renderedLetter = renderedLetters[count];\r\n        count += 1;\r\n        if(renderedLetter._mdf.m) {\r\n            if(!this.isMasked){\r\n                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n            }else{\r\n                textSpan.setAttribute('transform',renderedLetter.m);\r\n            }\r\n        }\r\n        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n        textSpan.style.opacity = renderedLetter.o;\r\n        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n        }\r\n        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n            textPath.setAttribute('stroke',renderedLetter.sc);\r\n        }\r\n        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n            textPath.setAttribute('fill',renderedLetter.fc);\r\n            textPath.style.color = renderedLetter.fc;\r\n        }\r\n    }\r\n\r\n    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n        var boundingBox = this.innerElem.getBBox();\r\n\r\n        if(this.currentBBox.w !== boundingBox.width){\r\n            this.currentBBox.w = boundingBox.width;\r\n            this.svgElement.setAttribute('width',boundingBox.width);\r\n        }\r\n        if(this.currentBBox.h !== boundingBox.height){\r\n            this.currentBBox.h = boundingBox.height;\r\n            this.svgElement.setAttribute('height',boundingBox.height);\r\n        }\r\n\r\n        var margin = 1;\r\n        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n            this.currentBBox.w = boundingBox.width + margin*2;\r\n            this.currentBBox.h = boundingBox.height + margin*2;\r\n            this.currentBBox.x = boundingBox.x - margin;\r\n            this.currentBBox.y = boundingBox.y - margin;\r\n\r\n            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n};\r\nfunction HImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\r\n\r\nHImageElement.prototype.createContent = function(){\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    var img = new Image();\r\n\r\n    if(this.data.hasMask){\r\n        this.imageElem = createNS('image');\r\n        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n        this.layerElement.appendChild(this.imageElem);\r\n        this.baseElement.setAttribute('width',this.assetData.w);\r\n        this.baseElement.setAttribute('height',this.assetData.h);\r\n    } else {\r\n        this.layerElement.appendChild(img);\r\n    }\r\n    img.src = assetPath;\r\n    if(this.data.ln){\r\n        this.baseElement.setAttribute('id',this.data.ln);\r\n    }\r\n};\r\nfunction HCameraElement(data,globalData,comp){\r\n    this.initFrame();\r\n    this.initBaseData(data,globalData,comp);\r\n    this.initHierarchy();\r\n    var getProp = PropertyFactory.getProp;\r\n    this.pe = getProp(this,data.pe,0,0,this);\r\n    if(data.ks.p.s){\r\n        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n    }else{\r\n        this.p = getProp(this,data.ks.p,1,0,this);\r\n    }\r\n    if(data.ks.a){\r\n        this.a = getProp(this,data.ks.a,1,0,this);\r\n    }\r\n    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n        var i,len = data.ks.or.k.length;\r\n        for(i=0;i<len;i+=1){\r\n            data.ks.or.k[i].to = null;\r\n            data.ks.or.k[i].ti = null;\r\n        }\r\n    }\r\n    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n    this.or.sh = true;\r\n    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n    this.mat = new Matrix();\r\n    this._prevMat = new Matrix();\r\n    this._isFirstFrame = true;\r\n    \r\n    // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\r\n    this.finalTransform = {\r\n        mProp: this\r\n    };\r\n}\r\nextendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\r\nHCameraElement.prototype.setup = function() {\r\n    var i, len = this.comp.threeDElements.length, comp;\r\n    for(i=0;i<len;i+=1){\r\n        //[perspectiveElem,container]\r\n        comp = this.comp.threeDElements[i];\r\n        if(comp.type === '3d') {\r\n            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n        }\r\n    }\r\n};\r\n\r\nHCameraElement.prototype.createElements = function(){\r\n};\r\n\r\nHCameraElement.prototype.hide = function(){\r\n};\r\n\r\nHCameraElement.prototype.renderFrame = function(){\r\n    var _mdf = this._isFirstFrame;\r\n    var i, len;\r\n    if(this.hierarchy){\r\n        len = this.hierarchy.length;\r\n        for(i=0;i<len;i+=1){\r\n            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n        }\r\n    }\r\n    if(_mdf || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n        this.mat.reset();\r\n\r\n        if(this.hierarchy){\r\n            var mat;\r\n            len = this.hierarchy.length - 1;\r\n            for (i = len; i >= 0; i -= 1) {\r\n                /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                console.log(mat)\r\n                this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n                console.log(this.mat.props)*/\r\n                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n                this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\r\n                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n            }\r\n        }\r\n\r\n        if(this.p){\r\n            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n        }else{\r\n            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n        }\r\n        if(this.a){\r\n            var diffVector = [this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];\r\n            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\r\n        }\r\n        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n        this.mat.translate(0,0,this.pe.v);\r\n\r\n\r\n        \r\n\r\n        var hasMatrixChanged = !this._prevMat.equals(this.mat);\r\n        if((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\r\n            len = this.comp.threeDElements.length;\r\n            var comp;\r\n            for(i=0;i<len;i+=1){\r\n                comp = this.comp.threeDElements[i];\r\n                if(comp.type === '3d') {\r\n                    if(hasMatrixChanged) {\r\n                        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n                    }\r\n                    if(this.pe._mdf) {\r\n                        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n                    }\r\n                }\r\n            }\r\n            this.mat.clone(this._prevMat);\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nHCameraElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nHCameraElement.prototype.destroy = function(){\r\n};\r\nHCameraElement.prototype.getBaseElement = function(){return null;};\r\nfunction HEffects() {\r\n}\r\nHEffects.prototype.renderFrame = function(){};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n    var _isFrozen = false;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function getRegisteredAnimations() {\r\n        var i, len = registeredAnimations.length;\r\n        var animations = [];\r\n        for(i = 0; i < len; i += 1) {\r\n            animations.push(registeredAnimations[i].animation);\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(playingAnimationsNum && !_isFrozen) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function activate(){\r\n        if(!_isFrozen && playingAnimationsNum){\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function freeze() {\r\n        _isFrozen = true;\r\n    }\r\n\r\n    function unfreeze() {\r\n        _isFrozen = false;\r\n        activate();\r\n    }\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    moduleOb.freeze = freeze;\r\n    moduleOb.unfreeze = unfreeze;\r\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = createElementID();\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this._completedLoop = false;\r\n    this.projectInterface = ProjectInterface();\r\n    this.imagePreloader = new ImagePreloader();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    this.assetsPath = params.assetsPath;\r\n    if(params.animationData){\r\n        this.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n\r\n        assetLoader.load(params.path, this.configAnimation.bind(this), function() {\r\n            this.trigger('data_failed');\r\n        }.bind(this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.totalFrames;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    assetLoader.load(segmentPath, this.includeLayers.bind(this), function() {\r\n        this.trigger('data_failed');\r\n    }.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.totalFrames;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.imagesLoaded = function() {\r\n    this.trigger('loaded_images');\r\n    this.checkLoaded()\r\n}\r\n\r\nAnimationItem.prototype.preloadImages = function() {\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\r\n}\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    if(!this.renderer){\r\n        return;\r\n    }\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.preloadImages();\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    this.waitForFontsLoaded();\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = function(){\r\n    if(!this.renderer) {\r\n        return;\r\n    }\r\n    if(this.renderer.globalData.fontManager.loaded()){\r\n        this.checkLoaded();\r\n    }else{\r\n        setTimeout(this.waitForFontsLoaded.bind(this),20);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {\r\n        this.isLoaded = true;\r\n        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function() {\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this), 0);\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this._completedLoop = false;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue >  this.totalFrames ? nextValue % this.totalFrames : 0)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this._completedLoop = true;\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                if(!this._completedLoop) {\r\n                    this._completedLoop = true;\r\n                } else {\r\n                    this.trigger('loopComplete');\r\n                }\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr, forceFlag) {\r\n    if (forceFlag) {\r\n        this.segments.length = 0;\r\n    }\r\n    if (typeof arr[0] === 'object') {\r\n        var i, len = arr.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.segments.push(arr[i]);\r\n        }\r\n    } else {\r\n        this.segments.push(arr);\r\n    }\r\n    if (this.segments.length && forceFlag) {\r\n        this.adjustSegment(this.segments.shift(), 0);\r\n    }\r\n    if (this.isPaused) {\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if (forceFlag) {\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset) {\r\n    if (this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if ((name && this.name != name) || !this.renderer) {\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.imagePreloader.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(assetData.e) {\r\n        path = assetData.p;\r\n    } else if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nvar Expressions = (function(){\r\n    var ob = {};\r\n    ob.initExpressions = initExpressions;\r\n\r\n\r\n    function initExpressions(animation){\r\n\r\n    \tvar stackCount = 0;\r\n    \tvar registers = [];\r\n\r\n    \tfunction pushExpression() {\r\n\t\t\tstackCount += 1;\r\n    \t}\r\n\r\n    \tfunction popExpression() {\r\n\t\t\tstackCount -= 1;\r\n\t\t\tif (stackCount === 0) {\r\n\t\t\t\treleaseInstances();\r\n\t\t\t}\r\n    \t}\r\n\r\n    \tfunction registerExpressionProperty(expression) {\r\n    \t\tif (registers.indexOf(expression) === -1) {\r\n\t\t\t\tregisters.push(expression)\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction releaseInstances() {\r\n    \t\tvar i, len = registers.length;\r\n    \t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\t\tregisters[i].release();\r\n    \t\t}\r\n    \t\tregisters.length = 0;\r\n    \t}\r\n\r\n        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n        animation.renderer.globalData.pushExpression = pushExpression;\r\n        animation.renderer.globalData.popExpression = popExpression;\r\n        animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\r\n    }\r\n   return ob;\r\n}());\r\n\r\nexpressionsPlugin = Expressions;\r\n\r\nvar ExpressionManager = (function(){\r\n    'use strict';\r\n    var ob = {};\r\n    var Math = BMMath;\r\n    var window = null;\r\n    var document = null;\r\n\r\n    function $bm_isInstanceOfArray(arr) {\r\n        return arr.constructor === Array || arr.constructor === Float32Array;\r\n    }\r\n\r\n    function isNumerable(tOfV, v) {\r\n        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\r\n    }\r\n\r\n    function $bm_neg(a){\r\n        var tOfA = typeof a;\r\n        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n            return -a;\r\n        }\r\n        if($bm_isInstanceOfArray(a)){\r\n            var i, lenA = a.length;\r\n            var retArr = [];\r\n            for(i=0;i<lenA;i+=1){\r\n                retArr[i] = -a[i];\r\n            }\r\n            return retArr;\r\n        }\r\n        if (a.propType) {\r\n            return a.v;\r\n        }\r\n    }\r\n\r\n    var easeInBez = BezierFactory.getBezierEasing(0.333,0,.833,.833, 'easeIn').get;\r\n    var easeOutBez = BezierFactory.getBezierEasing(0.167,0.167,.667,1, 'easeOut').get;\r\n    var easeInOutBez = BezierFactory.getBezierEasing(.33,0,.667,1, 'easeInOut').get;\r\n\r\n    function sum(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(tOfA === 'string' || tOfB === 'string'){\r\n            return a + b;\r\n        }\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a + b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] + b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a + b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            \r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] + b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n    var add = sum;\r\n\r\n    function sub(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            if(tOfA === 'string') {\r\n                a = parseInt(a);\r\n            }\r\n            if(tOfB === 'string') {\r\n                b = parseInt(b);\r\n            }\r\n            return a - b;\r\n        }\r\n        if( $bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] - b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) &&  $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a - b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] - b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function mul(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a * b;\r\n        }\r\n\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] * b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a * b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function div(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a / b;\r\n        }\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] / b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a / b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n    function mod(a,b) {\r\n        if(typeof a === 'string') {\r\n            a = parseInt(a);\r\n        }\r\n        if(typeof b === 'string') {\r\n            b = parseInt(b);\r\n        }\r\n        return a % b;\r\n    }\r\n    var $bm_sum = sum;\r\n    var $bm_sub = sub;\r\n    var $bm_mul = mul;\r\n    var $bm_div = div;\r\n    var $bm_mod = mod;\r\n\r\n    function clamp(num, min, max) {\r\n        if(min > max){\r\n            var mm = max;\r\n            max = min;\r\n            min = mm;\r\n        }\r\n        return Math.min(Math.max(num, min), max);\r\n    }\r\n\r\n    function radiansToDegrees(val) {\r\n        return val/degToRads;\r\n    }\r\n    var radians_to_degrees = radiansToDegrees;\r\n\r\n    function degreesToRadians(val) {\r\n        return val*degToRads;\r\n    }\r\n    var degrees_to_radians = radiansToDegrees;\r\n\r\n    var helperLengthArray = [0,0,0,0,0,0];\r\n\r\n    function length(arr1, arr2) {\r\n        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n            arr2 = arr2 || 0;\r\n            return Math.abs(arr1 - arr2);\r\n        }\r\n        if(!arr2) {\r\n            arr2 = helperLengthArray;\r\n        }\r\n        var i, len = Math.min(arr1.length, arr2.length);\r\n        var addedLength = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n        }\r\n        return Math.sqrt(addedLength);\r\n    }\r\n\r\n    function normalize(vec) {\r\n        return div(vec, length(vec));\r\n    }\r\n\r\n    function rgbToHsl(val) {\r\n        var r = val[0]; var g = val[1]; var b = val[2];\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min){\r\n            h = s = 0; // achromatic\r\n        }else{\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max){\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l,val[3]];\r\n    }\r\n\r\n    function hue2rgb(p, q, t){\r\n        if(t < 0) t += 1;\r\n        if(t > 1) t -= 1;\r\n        if(t < 1/6) return p + (q - p) * 6 * t;\r\n        if(t < 1/2) return q;\r\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    }\r\n\r\n    function hslToRgb(val){\r\n        var h = val[0];\r\n        var s = val[1];\r\n        var l = val[2];\r\n\r\n        var r, g, b;\r\n\r\n        if(s === 0){\r\n            r = g = b = l; // achromatic\r\n        }else{\r\n\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return [r, g , b, val[3]];\r\n    }\r\n\r\n    function linear(t, tMin, tMax, value1, value2){\r\n        if(value1 === undefined || value2 === undefined){\r\n            value1 = tMin;\r\n            value2 = tMax;\r\n            tMin = 0;\r\n            tMax = 1;\r\n        }\r\n        if(tMax < tMin) {\r\n            var _tMin = tMax;\r\n            tMax = tMin;\r\n            tMin = _tMin;\r\n        }\r\n        if(t <= tMin) {\r\n            return value1;\r\n        }else if(t >= tMax){\r\n            return value2;\r\n        }\r\n        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n        if(!value1.length){\r\n            return value1 + (value2-value1)*perc;\r\n        }\r\n        var i, len = value1.length;\r\n        var arr = createTypedArray('float32', len);\r\n        for(i=0;i<len;i+=1){\r\n            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n        }\r\n        return arr;\r\n    }\r\n    function random(min,max){\r\n        if(max === undefined){\r\n            if(min === undefined){\r\n                min = 0;\r\n                max = 1;\r\n            } else {\r\n                max = min;\r\n                min = undefined;\r\n            }\r\n        }\r\n        if(max.length){\r\n            var i, len = max.length;\r\n            if(!min){\r\n                min = createTypedArray('float32', len);\r\n            }\r\n            var arr = createTypedArray('float32', len);\r\n            var rnd = BMMath.random();\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n            }\r\n            return arr;\r\n        }\r\n        if(min === undefined){\r\n            min = 0;\r\n        }\r\n        var rndm = BMMath.random();\r\n        return min + rndm*(max-min);\r\n    }\r\n\r\n    function createPath(points, inTangents, outTangents, closed) {\r\n        var i, len = points.length;\r\n        var path = shape_pool.newElement();\r\n        path.setPathData(!!closed, len);\r\n        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n        for(i = 0; i < len; i += 1) {\r\n            inVertexPoint = (inTangents && inTangents[i]) ? inTangents[i] : arrPlaceholder;\r\n            outVertexPoint = (outTangents && outTangents[i]) ? outTangents[i] : arrPlaceholder;\r\n            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function initiateExpression(elem,data,property){\r\n        var val = data.x;\r\n        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n        var _needsRandom = val.indexOf('random') !== -1;\r\n        var elemType = elem.data.ty;\r\n        var transform,$bm_transform,content,effect;\r\n        var thisProperty = property;\r\n        thisProperty.valueAtTime = thisProperty.getValueAtTime;\r\n        Object.defineProperty(thisProperty, 'value', {\r\n            get: function() {\r\n                return thisProperty.v\r\n            }\r\n        })\r\n        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n        elem.comp.displayStartTime = 0;\r\n        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        var width = elem.data.sw ? elem.data.sw : 0;\r\n        var height = elem.data.sh ? elem.data.sh : 0;\r\n        var name = elem.data.nm;\r\n        var loopIn, loop_in, loopOut, loop_out, smooth;\r\n        var toWorld,fromWorld,fromComp,toComp,fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer,thisComp,mask,valueAtTime,velocityAtTime;\r\n        var __expression_functions = [];\r\n        if(data.xf) {\r\n            var i, len = data.xf.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\r\n            }\r\n        }\r\n\r\n        var scoped_bm_rt;\r\n        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n        var numKeys = property.kf ? data.k.length : 0;\r\n\r\n        var active = !this.data || this.data.hd !== true;\r\n\r\n        var wiggle = function wiggle(freq,amp){\r\n            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n            var addedAmps = createTypedArray('float32', len);\r\n            freq = 5;\r\n            var iterations = Math.floor(time*freq);\r\n            i = 0;\r\n            j = 0;\r\n            while(i<iterations){\r\n                //var rnd = BMMath.random();\r\n                for(j=0;j<len;j+=1){\r\n                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n                    //addedAmps[j] += -amp + amp*2*rnd;\r\n                }\r\n                i += 1;\r\n            }\r\n            //var rnd2 = BMMath.random();\r\n            var periods = time*freq;\r\n            var perc = periods - Math.floor(periods);\r\n            var arr = createTypedArray('float32', len);\r\n            if(len>1){\r\n                for(j=0;j<len;j+=1){\r\n                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n                }\r\n                return arr;\r\n            } else {\r\n                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n            }\r\n        }.bind(this);\r\n\r\n        if(thisProperty.loopIn) {\r\n            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n            loop_in = loopIn;\r\n        }\r\n\r\n        if(thisProperty.loopOut) {\r\n            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n            loop_out = loopOut;\r\n        }\r\n\r\n        if(thisProperty.smooth) {\r\n            smooth = thisProperty.smooth.bind(thisProperty);\r\n        }\r\n\r\n        function loopInDuration(type,duration){\r\n            return loopIn(type,duration,true);\r\n        }\r\n\r\n        function loopOutDuration(type,duration){\r\n            return loopOut(type,duration,true);\r\n        }\r\n\r\n        if(this.getValueAtTime) {\r\n            valueAtTime = this.getValueAtTime.bind(this);\r\n        }\r\n\r\n        if(this.getVelocityAtTime) {\r\n            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n        }\r\n\r\n        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\r\n        function lookAt(elem1,elem2){\r\n            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n            return [yaw,pitch,0];\r\n        }\r\n\r\n        function easeOut(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function easeIn(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function ease(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function applyEase(fn, t, tMin, tMax, val1, val2) {\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n            var mult = fn(t);\r\n            if($bm_isInstanceOfArray(val1)) {\r\n                var i, len = val1.length;\r\n                var arr = createTypedArray('float32', len);\r\n                for (i = 0; i < len; i += 1) {\r\n                    arr[i] = (val2[i] - val1[i]) * mult + val1[i];\r\n                }\r\n                return arr;\r\n            } else {\r\n                return (val2 - val1) * mult + val1;\r\n            }\r\n        }\r\n\r\n        function nearestKey(time){\r\n            var i, len = data.k.length,index,keyTime;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                index = 0;\r\n                keyTime = 0;\r\n            } else {\r\n                index = -1;\r\n                time *= elem.comp.globalData.frameRate;\r\n                if (time < data.k[0].t) {\r\n                    index = 1;\r\n                    keyTime = data.k[0].t;\r\n                } else {\r\n                    for(i=0;i<len-1;i+=1){\r\n                        if(time === data.k[i].t){\r\n                            index = i + 1;\r\n                            keyTime = data.k[i].t;\r\n                            break;\r\n                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n                                index = i + 2;\r\n                                keyTime = data.k[i+1].t;\r\n                            } else {\r\n                                index = i + 1;\r\n                                keyTime = data.k[i].t;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(index === -1){\r\n                        index = i + 1;\r\n                        keyTime = data.k[i].t;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            var ob = {};\r\n            ob.index = index;\r\n            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n            return ob;\r\n        }\r\n\r\n        function key(ind){\r\n            var ob, i, len;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                throw new Error('The property has no keyframe at index ' + ind);\r\n            }\r\n            ind -= 1;\r\n            ob = {\r\n                time: data.k[ind].t/elem.comp.globalData.frameRate,\r\n                value: []\r\n            };\r\n            var arr;\r\n            if(ind === data.k.length - 1 && !data.k[ind].h){\r\n                arr = (data.k[ind].s || data.k[ind].s === 0) ? data.k[ind-1].s : data.k[ind].e;\r\n            }else{\r\n                arr = data.k[ind].s;\r\n            }\r\n            len = arr.length;\r\n            for(i=0;i<len;i+=1){\r\n                ob[i] = arr[i];\r\n                ob.value[i] = arr[i]\r\n            }\r\n            return ob;\r\n        }\r\n\r\n        function framesToTime(frames, fps) { \r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return frames / fps;\r\n        }\r\n\r\n        function timeToFrames(t, fps) {\r\n            if (!t && t !== 0) {\r\n                t = time;\r\n            }\r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return t * fps;\r\n        }\r\n\r\n        function seedRandom(seed){\r\n            BMMath.seedrandom(randSeed + seed);\r\n        }\r\n\r\n        function sourceRectAtTime() {\r\n            return elem.sourceRectAtTime();\r\n        }\r\n\r\n        function substring(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substring(init)\r\n                }\r\n                return value.substring(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        function substr(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substr(init)\r\n                }\r\n                return value.substr(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        var time, velocity, value, text, textIndex, textTotal, selectorValue;\r\n        var index = elem.data.ind;\r\n        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n        var parent;\r\n        var randSeed = Math.floor(Math.random()*1000000);\r\n        var globalData = elem.globalData;\r\n        function executeExpression(_value) {\r\n            // globalData.pushExpression();\r\n            value = _value;\r\n            if (_needsRandom) {\r\n                seedRandom(randSeed);\r\n            }\r\n            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n                return value;\r\n            }\r\n            if(this.propType === 'textSelector'){\r\n                textIndex = this.textIndex;\r\n                textTotal = this.textTotal;\r\n                selectorValue = this.selectorValue;\r\n            }\r\n            if (!thisLayer) {\r\n                text = elem.layerInterface.text;\r\n                thisLayer = elem.layerInterface;\r\n                thisComp = elem.comp.compInterface;\r\n                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n                toComp = thisLayer.toComp.bind(thisLayer);\r\n                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n                fromCompToSurface = fromComp;\r\n            }\r\n            if (!transform) {\r\n                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n                $bm_transform = transform;\r\n                if(transform) {\r\n                    anchorPoint = transform.anchorPoint;\r\n                    /*position = transform.position;\r\n                    rotation = transform.rotation;\r\n                    scale = transform.scale;*/\r\n                }\r\n            }\r\n            \r\n            if (elemType === 4 && !content) {\r\n                content = thisLayer(\"ADBE Root Vectors Group\");\r\n            }\r\n            if (!effect) {\r\n                effect = thisLayer(4);\r\n            }\r\n            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n            if (hasParent && !parent) {\r\n                parent = elem.hierarchy[0].layerInterface;\r\n            }\r\n            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n            if (needsVelocity) {\r\n                velocity = velocityAtTime(time);\r\n            }\r\n            expression_function();\r\n            this.frameExpressionId = elem.globalData.frameId;\r\n\r\n\r\n            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n            if (scoped_bm_rt.propType === \"shape\") {\r\n                scoped_bm_rt = scoped_bm_rt.v;\r\n            }\r\n            // globalData.popExpression();\r\n            return scoped_bm_rt;\r\n        }\r\n        return executeExpression;\r\n    }\r\n\r\n    ob.initiateExpression = initiateExpression;\r\n    return ob;\r\n}());\r\nvar expressionHelpers = (function(){\r\n\r\n    function searchExpressions(elem,data,prop){\r\n        if(data.x){\r\n            prop.k = true;\r\n            prop.x = true;\r\n            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n        }\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getSpeedAtTime(frameNum) {\r\n        var delta = -0.01;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var speed = 0;\r\n        if(v1.length){\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                speed += Math.pow(v2[i] - v1[i], 2);\r\n            }\r\n            speed = Math.sqrt(speed) * 100;\r\n        } else {\r\n            speed = 0;\r\n        }\r\n        return speed;\r\n    }\r\n\r\n    function getVelocityAtTime(frameNum) {\r\n        if(this.vel !== undefined){\r\n            return this.vel;\r\n        }\r\n        var delta = -0.001;\r\n        //frameNum += this.elem.data.st;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var velocity;\r\n        if(v1.length){\r\n            velocity = createTypedArray('float32', v1.length);\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                //removing frameRate\r\n                //if needed, don't add it here\r\n                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n                velocity[i] = (v2[i] - v1[i])/delta;\r\n            }\r\n        } else {\r\n            velocity = (v2 - v1)/delta;\r\n        }\r\n        return velocity;\r\n    }\r\n\r\n    function getStaticValueAtTime() {\r\n        return this.pv;\r\n    }\r\n\r\n    function setGroupProperty(propertyGroup){\r\n        this.propertyGroup = propertyGroup;\r\n    }\r\n\r\n\treturn {\r\n\t\tsearchExpressions: searchExpressions,\r\n\t\tgetSpeedAtTime: getSpeedAtTime,\r\n\t\tgetVelocityAtTime: getVelocityAtTime,\r\n\t\tgetValueAtTime: getValueAtTime,\r\n\t\tgetStaticValueAtTime: getStaticValueAtTime,\r\n\t\tsetGroupProperty: setGroupProperty,\r\n\t}\r\n}());\r\n(function addPropertyDecorator() {\r\n\r\n    function loopOut(type,duration,durationFlag){\r\n        if(!this.k || !this.keyframes){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n        if(currentFrame<=lastKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, firstKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n                } else {\r\n                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n                }\r\n                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(iterations % 2 !== 0){\r\n                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n                    }\r\n                    return ret;\r\n                }\r\n                return (endV-initV)*repeats + current;\r\n            } else if(type === 'continue'){\r\n                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(lastValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n            }\r\n            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function loopIn(type,duration, durationFlag) {\r\n        if(!this.k){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var firstKeyFrame = keyframes[0].t;\r\n        if(currentFrame>=firstKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, lastKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                lastKeyFrame = keyframes[duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n                } else {\r\n                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n                }\r\n                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n                if(iterations % 2 === 0){\r\n                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return current-(endV-initV)*repeats;\r\n            } else if(type === 'continue'){\r\n                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(firstValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n            }\r\n            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function smooth(width, samples) {\r\n        if (!this.k){\r\n            return this.pv;\r\n        }\r\n        width = (width || 0.4) * 0.5;\r\n        samples = Math.floor(samples || 5);\r\n        if (samples <= 1) {\r\n            return this.pv;\r\n        }\r\n        var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\r\n        var initFrame = currentTime - width;\r\n        var endFrame = currentTime + width;\r\n        var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\r\n        var i = 0, j = 0;\r\n        var value;\r\n        if (this.pv.length) {\r\n            value = createTypedArray('float32', this.pv.length);\r\n        } else {\r\n            value = 0;\r\n        }\r\n        var sampleValue;\r\n        while (i < samples) {\r\n            sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\r\n            if(this.pv.length) {\r\n                for (j = 0; j < this.pv.length; j += 1) {\r\n                    value[j] += sampleValue[j];\r\n                }\r\n            } else {\r\n                value += sampleValue;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(this.pv.length) {\r\n            for (j = 0; j < this.pv.length; j += 1) {\r\n                value[j] /= samples;\r\n            }\r\n        } else {\r\n            value /= samples;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getTransformValueAtTime(time) {\r\n        console.warn('Transform at time not supported');\r\n    }\r\n\r\n    function getTransformStaticValueAtTime(time) {\r\n\r\n    }\r\n\r\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n        var prop = getTransformProperty(elem, data, container);\r\n        if(prop.dynamicProperties.length) {\r\n            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetProp = PropertyFactory.getProp;\r\n    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n        var prop = propertyGetProp(elem,data,type, mult, container);\r\n        //prop.getVelocityAtTime = getVelocityAtTime;\r\n        //prop.loopOut = loopOut;\r\n        //prop.loopIn = loopIn;\r\n        if(prop.kf){\r\n            prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        prop.loopOut = loopOut;\r\n        prop.loopIn = loopIn;\r\n        prop.smooth = smooth;\r\n        prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\r\n        prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\r\n        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n        prop.propertyIndex = data.ix;\r\n        var value = 0;\r\n        if(type !== 0) {\r\n            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n        }\r\n        prop._cachingAtTime = {\r\n            lastFrame: initialDefaultFrame,\r\n            lastIndex: 0,\r\n            value: value\r\n        };\r\n        expressionHelpers.searchExpressions(elem,data,prop);\r\n        if(prop.k){\r\n            container.addDynamicProperty(prop);\r\n        }\r\n\r\n        return prop;\r\n    };\r\n\r\n    function getShapeValueAtTime(frameNum) {\r\n        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n        if (!this._cachingAtTime) {\r\n            this._cachingAtTime = {\r\n                shapeValue: shape_pool.clone(this.pv),\r\n                lastIndex: 0,\r\n                lastTime: initialDefaultFrame\r\n            };\r\n        }\r\n        \r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastTime) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\r\n            this._cachingAtTime.lastTime = frameNum;\r\n            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n        }\r\n        return this._cachingAtTime.shapeValue;\r\n    }\r\n\r\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\r\n    function ShapeExpressions(){}\r\n    ShapeExpressions.prototype = {\r\n        vertices: function(prop, time){\r\n            if (this.k) {\r\n                this.getValue();\r\n            }\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            var i, len = shapePath._length;\r\n            var vertices = shapePath[prop];\r\n            var points = shapePath.v;\r\n            var arr = createSizedArray(len);\r\n            for(i = 0; i < len; i += 1) {\r\n                if(prop === 'i' || prop === 'o') {\r\n                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n                } else {\r\n                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n                }\r\n                \r\n            }\r\n            return arr;\r\n        },\r\n        points: function(time){\r\n            return this.vertices('v', time);\r\n        },\r\n        inTangents: function(time){\r\n            return this.vertices('i', time);\r\n        },\r\n        outTangents: function(time){\r\n            return this.vertices('o', time);\r\n        },\r\n        isClosed: function(){\r\n            return this.v.c;\r\n        },\r\n        pointOnPath: function(perc, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            if(!this._segmentsLength) {\r\n                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n            }\r\n\r\n            var segmentsLength = this._segmentsLength;\r\n            var lengths = segmentsLength.lengths;\r\n            var lengthPos = segmentsLength.totalLength * perc;\r\n            var i = 0, len = lengths.length;\r\n            var j = 0, jLen;\r\n            var accumulatedLength = 0, pt;\r\n            while(i < len) {\r\n                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n                    var initIndex = i;\r\n                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n                    break;\r\n                } else {\r\n                    accumulatedLength += lengths[i].addedLength;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(!pt){\r\n                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n            }\r\n            return pt;\r\n        },\r\n        vectorOnPath: function(perc, time, vectorType){\r\n            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n            var pt1 = this.pointOnPath(perc, time);\r\n            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n            var xLength = pt2[0] - pt1[0];\r\n            var yLength = pt2[1] - pt1[1];\r\n            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n            return unitVector;\r\n        },\r\n        tangentOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'tangent');\r\n        },\r\n        normalOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'normal');\r\n        },\r\n        setGroupProperty: expressionHelpers.setGroupProperty,\r\n        getValueAtTime: expressionHelpers.getStaticValueAtTime\r\n    };\r\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\r\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n        prop.propertyIndex = data.ix;\r\n        prop.lock = false;\r\n        if(type === 3){\r\n            expressionHelpers.searchExpressions(elem,data.pt,prop);\r\n        } else if(type === 4){\r\n            expressionHelpers.searchExpressions(elem,data.ks,prop);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    };\r\n}());\r\n(function addDecorator() {\r\n\r\n    function searchExpressions(){\r\n        if(this.data.d.x){\r\n            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n            this.addEffect(this.getExpressionValue.bind(this));\r\n            return true;\r\n        }\r\n    }\r\n\r\n    TextProperty.prototype.getExpressionValue = function(currentValue, text) {\r\n        var newValue = this.calculateExpression(text);\r\n        if(currentValue.t !== newValue) {\r\n            var newData = {};\r\n            this.copyData(newData, currentValue);\r\n            newData.t = newValue.toString();\r\n            newData.__complete = false;\r\n            return newData;\r\n        }\r\n        return currentValue;\r\n    }\r\n\r\n    TextProperty.prototype.searchProperty = function(){\r\n\r\n        var isKeyframed = this.searchKeyframes();\r\n        var hasExpressions = this.searchExpressions();\r\n        this.kf = isKeyframed || hasExpressions;\r\n        return this.kf;\r\n    };\r\n\r\n    TextProperty.prototype.searchExpressions = searchExpressions;\r\n    \r\n}());\r\nvar ShapeExpressionInterface = (function(){\r\n\r\n    function iterateElements(shapes,view, propertyGroup){\r\n        var arr = [];\r\n        var i, len = shapes ? shapes.length : 0;\r\n        for(i=0;i<len;i+=1){\r\n            if(shapes[i].ty == 'gr'){\r\n                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'fl'){\r\n                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'st'){\r\n                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tm'){\r\n                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tr'){\r\n                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'el'){\r\n                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'sr'){\r\n                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'sh'){\r\n                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rc'){\r\n                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rd'){\r\n                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rp'){\r\n                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n       var interfaces;\r\n       var interfaceFunction = function _interfaceFunction(value){\r\n           var i = 0, len = interfaces.length;\r\n            while(i<len){\r\n                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n                   return interfaces[i];\r\n                }\r\n                i+=1;\r\n            }\r\n            if(typeof value === 'number'){\r\n               return interfaces[value-1];\r\n            }\r\n       };\r\n       interfaceFunction.propertyGroup = function(val){\r\n           if(val === 1){\r\n               return interfaceFunction;\r\n           } else{\r\n               return propertyGroup(val-1);\r\n           }\r\n       };\r\n       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n       interfaceFunction.numProperties = interfaces.length;\r\n       interfaceFunction.propertyIndex = shape.cix;\r\n       interfaceFunction._name = shape.nm;\r\n\r\n       return interfaceFunction;\r\n   }\r\n\r\n    function groupInterfaceFactory(shape,view, propertyGroup){\r\n        var interfaceFunction = function _interfaceFunction(value){\r\n            switch(value){\r\n                case 'ADBE Vectors Group':\r\n                case 'Contents':\r\n                case 2:\r\n                    return interfaceFunction.content;\r\n                //Not necessary for now. Keeping them here in case a new case appears\r\n                //case 'ADBE Vector Transform Group':\r\n                //case 3:\r\n                default:\r\n                    return interfaceFunction.transform;\r\n            }\r\n        };\r\n        interfaceFunction.propertyGroup = function(val){\r\n            if(val === 1){\r\n                return interfaceFunction;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        };\r\n        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n        interfaceFunction.content = content;\r\n        interfaceFunction.transform = transformInterface;\r\n        Object.defineProperty(interfaceFunction, '_name', {\r\n            get: function(){\r\n                return shape.nm;\r\n            }\r\n        });\r\n        //interfaceFunction.content = interfaceFunction;\r\n        interfaceFunction.numProperties = shape.np;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.nm = shape.nm;\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function fillInterfaceFactory(shape,view,propertyGroup){\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(propertyGroup);\r\n        view.o.setGroupProperty(propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val === 1){\r\n                return ob;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        }\r\n        function _dashPropertyGroup(val){\r\n            if(val === 1){\r\n                return dashOb;\r\n            } else{\r\n                return _propertyGroup(val-1);\r\n            }\r\n        }\r\n        function addPropertyToDashOb(i) {\r\n            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n                get: ExpressionPropertyInterface(view.d.dataProps[i].p)\r\n            });\r\n        }\r\n        var i, len = shape.d ? shape.d.length : 0;\r\n        var dashOb = {};\r\n        for (i = 0; i < len; i += 1) {\r\n            addPropertyToDashOb(i);\r\n            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n                return interfaceFunction.strokeWidth;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            'strokeWidth': {\r\n                get: ExpressionPropertyInterface(view.w)\r\n            },\r\n            'dash': {\r\n                get: function() {\r\n                    return dashOb;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n        view.w.setGroupProperty(_propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function trimInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        view.s.setGroupProperty(_propertyGroup);\r\n        view.e.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n                return interfaceFunction.end;\r\n            }\r\n            if(val === shape.s.ix){\r\n                return interfaceFunction.start;\r\n            }\r\n            if(val === shape.o.ix){\r\n                return interfaceFunction.offset;\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'start': {\r\n                get: ExpressionPropertyInterface(view.s)\r\n            },\r\n            'end': {\r\n                get: ExpressionPropertyInterface(view.e)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function transformInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n        if(view.transform.mProps.sk){\r\n            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n        }\r\n        view.transform.op.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.a.ix === value || value === 'Anchor Point'){\r\n                return interfaceFunction.anchorPoint;\r\n            }\r\n            if(shape.o.ix === value || value === 'Opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n            if(shape.p.ix === value || value === 'Position'){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.s.ix === value || value === 'Scale'){\r\n                return interfaceFunction.scale;\r\n            }\r\n            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n                return interfaceFunction.skew;\r\n            }\r\n            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n                return interfaceFunction.skewAxis;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.o)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.p)\r\n            },\r\n            'anchorPoint': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.a)\r\n            },\r\n            'scale': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.s)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.r)\r\n            },\r\n            'skew': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sk)\r\n            },\r\n            'skewAxis': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sa)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.ty = 'tr';\r\n        interfaceFunction.mn = shape.mn;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.s.ix === value){\r\n                return interfaceFunction.size;\r\n            }\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function starInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.or.setGroupProperty(_propertyGroup);\r\n        prop.os.setGroupProperty(_propertyGroup);\r\n        prop.pt.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n        if(shape.ir){\r\n            prop.ir.setGroupProperty(_propertyGroup);\r\n            prop.is.setGroupProperty(_propertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.pt.ix === value){\r\n                return interfaceFunction.points;\r\n            }\r\n            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n                return interfaceFunction.outerRadius;\r\n            }\r\n            if(shape.os.ix === value){\r\n                return interfaceFunction.outerRoundness;\r\n            }\r\n            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n                return interfaceFunction.innerRadius;\r\n            }\r\n            if(shape.is && shape.is.ix === value){\r\n                return interfaceFunction.innerRoundness;\r\n            }\r\n\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'points': {\r\n                get: ExpressionPropertyInterface(prop.pt)\r\n            },\r\n            'outerRadius': {\r\n                get: ExpressionPropertyInterface(prop.or)\r\n            },\r\n            'outerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.os)\r\n            },\r\n            'innerRadius': {\r\n                get: ExpressionPropertyInterface(prop.ir)\r\n            },\r\n            'innerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.is)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function rectInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.roundness;\r\n            }\r\n            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n                return interfaceFunction.size;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'roundness': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.rd.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n                return interfaceFunction.radius;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'radius': {\r\n                get: ExpressionPropertyInterface(prop.rd)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.c.setGroupProperty(_propertyGroup);\r\n        prop.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.c.ix === value || 'Copies' === value){\r\n                return interfaceFunction.copies;\r\n            } else if(shape.o.ix === value || 'Offset' === value){\r\n                return interfaceFunction.offset;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'copies': {\r\n                get: ExpressionPropertyInterface(prop.c)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(prop.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function pathInterfaceFactory(shape,view,propertyGroup){\r\n        var prop = view.sh;\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        prop.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n                return interfaceFunction.path;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'path': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            'shape': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'ix': { value: shape.ix },\r\n            'mn': { value: shape.mn }\r\n        });\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return function(shapes,view,propertyGroup) {\r\n        var interfaces;\r\n        function _interfaceFunction(value){\r\n            if(typeof value === 'number'){\r\n                return interfaces[value-1];\r\n            } else {\r\n                var i = 0, len = interfaces.length;\r\n                while(i<len){\r\n                    if(interfaces[i]._name === value){\r\n                        return interfaces[i];\r\n                    }\r\n                    i+=1;\r\n                }\r\n            }\r\n        }\r\n        _interfaceFunction.propertyGroup = propertyGroup;\r\n        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n        _interfaceFunction.numProperties = interfaces.length;\r\n        return _interfaceFunction;\r\n    };\r\n}());\r\n\r\nvar TextExpressionInterface = (function(){\r\n\treturn function(elem){\r\n        var _prevValue, _sourceText;\r\n        function _thisLayerFunction(){\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n            get: function(){\r\n                elem.textProperty.getValue()\r\n                var stringValue = elem.textProperty.currentData.t;\r\n                if(stringValue !== _prevValue) {\r\n                    elem.textProperty.currentData.t = _prevValue;\r\n                    _sourceText = new String(stringValue);\r\n                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n                }\r\n                return _sourceText;\r\n            }\r\n        });\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar LayerExpressionInterface = (function (){\r\n    function toWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n        }\r\n        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n    }\r\n    function fromWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n    function fromComp(arr){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n\r\n    function sampleImage() {\r\n        return [1,1,1,1];\r\n    }\r\n\r\n\r\n    return function(elem){\r\n\r\n        var transformInterface;\r\n\r\n        function _registerMaskInterface(maskManager){\r\n            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n        }\r\n        function _registerEffectsInterface(effects){\r\n            _thisLayerFunction.effect = effects;\r\n        }\r\n\r\n        function _thisLayerFunction(name){\r\n            switch(name){\r\n                case \"ADBE Root Vectors Group\":\r\n                case \"Contents\":\r\n                case 2:\r\n                    return _thisLayerFunction.shapeInterface;\r\n                case 1:\r\n                case 6:\r\n                case \"Transform\":\r\n                case \"transform\":\r\n                case \"ADBE Transform Group\":\r\n                    return transformInterface;\r\n                case 4:\r\n                case \"ADBE Effect Parade\":\r\n                case \"effects\":\r\n                case \"Effects\":\r\n                    return _thisLayerFunction.effect;\r\n            }\r\n        }\r\n        _thisLayerFunction.toWorld = toWorld;\r\n        _thisLayerFunction.fromWorld = fromWorld;\r\n        _thisLayerFunction.toComp = toWorld;\r\n        _thisLayerFunction.fromComp = fromComp;\r\n        _thisLayerFunction.sampleImage = sampleImage;\r\n        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n        _thisLayerFunction._elem = elem;\r\n        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n        Object.defineProperties(_thisLayerFunction,{\r\n            hasParent: {\r\n                get: function(){\r\n                    return elem.hierarchy.length;\r\n                }\r\n            },\r\n            parent: {\r\n                get: function(){\r\n                    return elem.hierarchy[0].layerInterface;\r\n                }\r\n            },\r\n            rotation: getDescriptor(transformInterface, 'rotation'),\r\n            scale: getDescriptor(transformInterface, 'scale'),\r\n            position: getDescriptor(transformInterface, 'position'),\r\n            opacity: getDescriptor(transformInterface, 'opacity'),\r\n            anchorPoint: anchorPointDescriptor,\r\n            anchor_point: anchorPointDescriptor,\r\n            transform: {\r\n                get: function () {\r\n                    return transformInterface;\r\n                }\r\n            },\r\n            active: {\r\n                get: function(){\r\n                    return elem.isInRange;\r\n                }\r\n            }\r\n        });\r\n\r\n        _thisLayerFunction.startTime = elem.data.st;\r\n        _thisLayerFunction.index = elem.data.ind;\r\n        _thisLayerFunction.source = elem.data.refId;\r\n        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n        _thisLayerFunction.inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction.outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction._name = elem.data.nm;\r\n\r\n        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\n\r\nvar CompExpressionInterface = (function (){\r\n    return function(comp){\r\n        function _thisLayerFunction(name){\r\n            var i=0, len = comp.layers.length;\r\n            while(i<len){\r\n                if(comp.layers[i].nm === name || comp.layers[i].ind === name){\r\n                    return comp.elements[i].layerInterface;\r\n                }\r\n                i += 1;\r\n            }\r\n            return null;\r\n            //return {active:false};\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"_name\", { value:comp.data.nm });\r\n        _thisLayerFunction.layer = _thisLayerFunction;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\r\n        _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.frameDuration = 1/comp.globalData.frameRate;\r\n        _thisLayerFunction.displayStartTime = 0;\r\n        _thisLayerFunction.numLayers = comp.layers.length;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar TransformExpressionInterface = (function (){\r\n    return function(transform){\r\n        function _thisFunction(name){\r\n            switch(name){\r\n                case \"scale\":\r\n                case \"Scale\":\r\n                case \"ADBE Scale\":\r\n                case 6:\r\n                    return _thisFunction.scale;\r\n                case \"rotation\":\r\n                case \"Rotation\":\r\n                case \"ADBE Rotation\":\r\n                case \"ADBE Rotate Z\":\r\n                case 10:\r\n                    return _thisFunction.rotation;\r\n                case \"ADBE Rotate X\":\r\n                    return _thisFunction.xRotation;\r\n                case \"ADBE Rotate Y\":\r\n                    return _thisFunction.yRotation;\r\n                case \"position\":\r\n                case \"Position\":\r\n                case \"ADBE Position\":\r\n                case 2:\r\n                    return _thisFunction.position;\r\n                case 'ADBE Position_0':\r\n                    return _thisFunction.xPosition;\r\n                case 'ADBE Position_1':\r\n                    return _thisFunction.yPosition;\r\n                case 'ADBE Position_2':\r\n                    return _thisFunction.zPosition;\r\n                case \"anchorPoint\":\r\n                case \"AnchorPoint\":\r\n                case \"Anchor Point\":\r\n                case \"ADBE AnchorPoint\":\r\n                case 1:\r\n                    return _thisFunction.anchorPoint;\r\n                case \"opacity\":\r\n                case \"Opacity\":\r\n                case 11:\r\n                    return _thisFunction.opacity;\r\n            }\r\n        }\r\n\r\n        Object.defineProperty(_thisFunction, \"rotation\", {\r\n            get: ExpressionPropertyInterface(transform.r || transform.rz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rz || transform.r)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rx)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n            get: ExpressionPropertyInterface(transform.ry)\r\n        });\r\n        Object.defineProperty(_thisFunction, \"scale\", {\r\n            get: ExpressionPropertyInterface(transform.s)\r\n        });\r\n\r\n        if(transform.p) {\r\n            var _transformFactory = ExpressionPropertyInterface(transform.p);\r\n        }\r\n        Object.defineProperty(_thisFunction, \"position\", {\r\n            get: function () {\r\n                if(transform.p) {\r\n                    return _transformFactory();\r\n                } else {\r\n                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n            get: ExpressionPropertyInterface(transform.px)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n            get: ExpressionPropertyInterface(transform.py)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n            get: ExpressionPropertyInterface(transform.pz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n            get: ExpressionPropertyInterface(transform.a)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"opacity\", {\r\n            get: ExpressionPropertyInterface(transform.o)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skew\", {\r\n            get: ExpressionPropertyInterface(transform.sk)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n            get: ExpressionPropertyInterface(transform.sa)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"orientation\", {\r\n            get: ExpressionPropertyInterface(transform.or)\r\n        });\r\n\r\n        return _thisFunction;\r\n    };\r\n}());\r\nvar ProjectInterface = (function (){\r\n\r\n    function registerComposition(comp){\r\n        this.compositions.push(comp);\r\n    }\r\n\r\n    return function(){\r\n        function _thisProjectFunction(name){\r\n            var i = 0, len = this.compositions.length;\r\n            while(i<len){\r\n                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n                    if(this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\r\n                        this.compositions[i].prepareFrame(this.currentFrame);\r\n                    }\r\n                    return this.compositions[i].compInterface;\r\n                }\r\n                i+=1;\r\n            }\r\n        }\r\n\r\n        _thisProjectFunction.compositions = [];\r\n        _thisProjectFunction.currentFrame = 0;\r\n\r\n        _thisProjectFunction.registerComposition = registerComposition;\r\n\r\n\r\n\r\n        return _thisProjectFunction;\r\n    };\r\n}());\r\nvar EffectsExpressionInterface = (function (){\r\n    var ob = {\r\n        createEffectsInterface: createEffectsInterface\r\n    };\r\n\r\n    function createEffectsInterface(elem, propertyGroup){\r\n        if(elem.effectsManager){\r\n\r\n            var effectElements = [];\r\n            var effectsData = elem.data.ef;\r\n            var i, len = elem.effectsManager.effectElements.length;\r\n            for(i=0;i<len;i+=1){\r\n                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n            }\r\n\r\n            return function(name){\r\n                var effects = elem.data.ef || [], i = 0, len = effects.length;\r\n                while(i<len) {\r\n                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                        return effectElements[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    function createGroupInterface(data,elements, propertyGroup, elem){\r\n        var effectElements = [];\r\n        var i, len = data.ef.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(data.ef[i].ty === 5){\r\n                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n            } else {\r\n                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n            }\r\n        }\r\n\r\n        function _propertyGroup(val) {\r\n            if(val === 1){\r\n               return groupInterface;\r\n            } else{\r\n               return propertyGroup(val-1);\r\n            }\r\n        }\r\n\r\n        var groupInterface = function(name){\r\n            var effects = data.ef, i = 0, len = effects.length;\r\n            while(i<len) {\r\n                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                    if(effects[i].ty === 5){\r\n                        return effectElements[i];\r\n                    } else {\r\n                        return effectElements[i]();\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return effectElements[0]();\r\n        };\r\n\r\n        groupInterface.propertyGroup = _propertyGroup;\r\n\r\n        if(data.mn === 'ADBE Color Control'){\r\n            Object.defineProperty(groupInterface, 'color', {\r\n                get: function(){\r\n                    return effectElements[0]();\r\n                }\r\n            });\r\n        }\r\n        Object.defineProperty(groupInterface, 'numProperties', {\r\n            get: function(){\r\n                return data.np;\r\n            }\r\n        });\r\n        groupInterface.active = groupInterface.enabled = data.en !== 0;\r\n        return groupInterface;\r\n    }\r\n\r\n    function createValueInterface(element, type, elem, propertyGroup){\r\n        var expressionProperty = ExpressionPropertyInterface(element.p);\r\n        function interfaceFunction(){\r\n            if(type === 10){\r\n                return elem.comp.compInterface(element.p.v);\r\n            }\r\n            return expressionProperty();\r\n        }\r\n\r\n        if(element.p.setGroupProperty) {\r\n            element.p.setGroupProperty(propertyGroup);\r\n        }\r\n\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return ob;\r\n\r\n}());\r\nvar MaskManagerInterface = (function(){\r\n\r\n\tfunction MaskInterface(mask, data){\r\n\t\tthis._mask = mask;\r\n\t\tthis._data = data;\r\n\t}\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n        get: function(){\r\n                if(this._mask.prop.k){\r\n                    this._mask.prop.getValue();\r\n                }\r\n                return this._mask.prop;\r\n            }\r\n        });\r\n\r\n\tvar MaskManager = function(maskManager, elem){\r\n\t\tvar _maskManager = maskManager;\r\n\t\tvar _elem = elem;\r\n\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\tvar i, len = maskManager.viewData.length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t}\r\n\r\n\t\tvar maskFunction = function(name){\r\n\t\t\ti = 0;\r\n\t\t    while(i<len){\r\n\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t            return _masksInterfaces[i];\r\n\t\t        }\r\n\t\t        i += 1;\r\n\t\t    }\r\n\t\t};\r\n\t\treturn maskFunction;\r\n\t};\r\n\treturn MaskManager;\r\n}());\r\n\r\nvar ExpressionPropertyInterface = (function() {\r\n\r\n    var defaultUnidimensionalValue = {pv:0, v:0, mult: 1}\r\n    var defaultMultidimensionalValue = {pv:[0,0,0], v:[0,0,0], mult: 1}\r\n\r\n    function completeProperty(expressionValue, property, type) {\r\n        Object.defineProperty(expressionValue, 'velocity', {\r\n            get: function(){\r\n                return property.getVelocityAtTime(property.comp.currentFrame);\r\n            }\r\n        });\r\n        expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\r\n        expressionValue.key = function(pos) {\r\n            if (!expressionValue.numKeys) {\r\n                return 0;\r\n            } else {\r\n                var value = '';\r\n                if ('s' in property.keyframes[pos-1]) {\r\n                    value = property.keyframes[pos-1].s;\r\n                } else if ('e' in property.keyframes[pos-2]) {\r\n                    value = property.keyframes[pos-2].e;\r\n                } else {\r\n                    value = property.keyframes[pos-2].s;\r\n                }\r\n                var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);\r\n                valueProp.time = property.keyframes[pos-1].t / property.elem.comp.globalData.frameRate;\r\n                return valueProp;\r\n            }\r\n        };\r\n        expressionValue.valueAtTime = property.getValueAtTime;\r\n        expressionValue.speedAtTime = property.getSpeedAtTime;\r\n        expressionValue.velocityAtTime = property.getVelocityAtTime;\r\n        expressionValue.propertyGroup = property.propertyGroup;\r\n    }\r\n\r\n    function UnidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultUnidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var val = property.pv * mult;\r\n        var expressionValue = new Number(val);\r\n        expressionValue.value = val;\r\n        completeProperty(expressionValue, property, 'unidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            val = property.v * mult;\r\n            if(expressionValue.value !== val) {\r\n                expressionValue = new Number(val);\r\n                expressionValue.value = val;\r\n                completeProperty(expressionValue, property, 'unidimensional');\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    function MultidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultMultidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var len = property.pv.length;\r\n        var expressionValue = createTypedArray('float32', len);\r\n        var arrValue = createTypedArray('float32', len);\r\n        expressionValue.value = arrValue;\r\n        completeProperty(expressionValue, property, 'multidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            for (var i = 0; i < len; i += 1) {\r\n                expressionValue[i] = arrValue[i] = property.v[i] * mult;\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    //TODO: try to avoid using this getter\r\n    function defaultGetter() {\r\n        return defaultUnidimensionalValue;\r\n    }\r\n    \r\n    return function(property) {\r\n        if(!property) {\r\n            return defaultGetter;\r\n        } else if (property.propType === 'unidimensional') {\r\n            return UnidimensionalPropertyInterface(property);\r\n        } else {\r\n            return MultidimensionalPropertyInterface(property);\r\n        }\r\n    }\r\n}());\r\n\r\n(function(){\r\n\r\n    var TextExpressionSelectorProp = (function(){\r\n\r\n        function getValueProxy(index,total){\r\n            this.textIndex = index+1;\r\n            this.textTotal = total;\r\n            this.v = this.getValue() * this.mult;\r\n            return this.v;\r\n        }\r\n\r\n        return function TextExpressionSelectorProp(elem,data){\r\n            this.pv = 1;\r\n            this.comp = elem.comp;\r\n            this.elem = elem;\r\n            this.mult = 0.01;\r\n            this.propType = 'textSelector';\r\n            this.textTotal = data.totalChars;\r\n            this.selectorValue = 100;\r\n            this.lastValue = [1,1,1];\r\n            this.k = true;\r\n            this.x = true;\r\n            this.getValue = ExpressionManager.initiateExpression.bind(this)(elem,data,this);\r\n            this.getMult = getValueProxy;\r\n            this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;\r\n            if(this.kf){\r\n                this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);\r\n            } else {\r\n                this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);\r\n            }\r\n            this.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        };\r\n    }());\r\n\r\n\tvar propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n\tTextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n\t    if(data.t === 1){\r\n\t        return new TextExpressionSelectorProp(elem, data,arr);\r\n\t    } else {\r\n\t        return propertyGetTextProp(elem,data,arr);\r\n\t    }\r\n\t};\r\n}());\r\nfunction SliderEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction AngleEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction ColorEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction PointEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction LayerIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction MaskIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction CheckboxEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction NoValueEffect(){\r\n    this.p = {};\r\n}\r\nfunction EffectsManager(){}\r\nfunction EffectsManager(data,element){\r\n    var effects = data.ef || [];\r\n    this.effectElements = [];\r\n    var i,len = effects.length;\r\n    var effectItem;\r\n    for(i=0;i<len;i++) {\r\n        effectItem = new GroupEffect(effects[i],element);\r\n        this.effectElements.push(effectItem);\r\n    }\r\n}\r\n\r\nfunction GroupEffect(data,element){\r\n    this.init(data,element);\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], GroupEffect);\r\n\r\nGroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\r\n\r\nGroupEffect.prototype.init = function(data,element){\r\n    this.data = data;\r\n    this.effectElements = [];\r\n    this.initDynamicPropertyContainer(element);\r\n    var i, len = this.data.ef.length;\r\n    var eff, effects = this.data.ef;\r\n    for(i=0;i<len;i+=1){\r\n        eff = null;\r\n        switch(effects[i].ty){\r\n            case 0:\r\n                eff = new SliderEffect(effects[i],element,this);\r\n                break;\r\n            case 1:\r\n                eff = new AngleEffect(effects[i],element,this);\r\n                break;\r\n            case 2:\r\n                eff = new ColorEffect(effects[i],element,this);\r\n                break;\r\n            case 3:\r\n                eff = new PointEffect(effects[i],element,this);\r\n                break;\r\n            case 4:\r\n            case 7:\r\n                eff = new CheckboxEffect(effects[i],element,this);\r\n                break;\r\n            case 10:\r\n                eff = new LayerIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 11:\r\n                eff = new MaskIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 5:\r\n                eff = new EffectsManager(effects[i],element,this);\r\n                break;\r\n            //case 6:\r\n            default:\r\n                eff = new NoValueEffect(effects[i],element,this);\r\n                break;\r\n        }\r\n        if(eff) {\r\n            this.effectElements.push(eff);\r\n        }\r\n    }\r\n};\r\n\r\n    var lottiejs = {};\r\n\r\n    var _isFrozen = false;\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n\r\n    lottiejs.play = animationManager.play;\r\n    lottiejs.pause = animationManager.pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = animationManager.togglePause;\r\n    lottiejs.setSpeed = animationManager.setSpeed;\r\n    lottiejs.setDirection = animationManager.setDirection;\r\n    lottiejs.stop = animationManager.stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = animationManager.registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = animationManager.resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = animationManager.goToAndStop;\r\n    lottiejs.destroy = animationManager.destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.freeze = animationManager.freeze;\r\n    lottiejs.unfreeze = animationManager.unfreeze;\r\n    lottiejs.getRegisteredAnimations = animationManager.getRegisteredAnimations;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.5.2';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"lottie\",staticClass:\"lottie\",class:_vm.className})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vueLotttieWeb.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 091cd834ddfe2dd72486","<template>\n    <div class=\"lottie\" :class=\"className\" ref=\"lottie\"></div>\n</template>\n\n<script>\nimport lottie from 'lottie-web';\n\nexport default {\n    data() {\n        return {\n            instance: false\n        }\n    },\n\n    // 父级注册lottie动画参数\n    // getLottieInstance 为子组件抛出动画对象的事件 由父组件获取使用\n    props: {\n        className: {\n            type: String,\n            default: ''\n        },\n\n        renderer: {\n            type: String,\n            default: 'canvas'\n        },\n        loop: {\n            type: Boolean,\n            default: true\n        },\n        autoplay: {\n            type: Boolean,\n            default: true\n        },\n\n        animationData: {\n            type: Object | String,\n            default: ''\n        },\n        path: {\n            type: String,\n            default: ''\n        }\n    },\n\n    methods: {\n        // 扩展方法\n        extendMethods(instance) {\n            // 自定义重播动画方法\n            instance.customReplay = () => {\n                instance.stop();\n                setTimeout(() => {\n                    instance.play();\n                });\n            }\n        },\n        // 透传注册事件\n        transEvents(instance) {\n            const events = ['onComplete', 'onLoopComplete', 'onEnterFrame', 'onSegmentStart'];\n\n            events.forEach(keyName => {\n                instance[keyName] = e => this.$emit(keyName, e);\n            })\n        }\n    },\n\n    mounted() {\n        // 获取lottie参数 生成对象 并且扩展方法\n        const {renderer, loop, autoplay, animationData, path} = this;\n\n        const paramsInfo = {\n            container: this.$refs.lottie,\n            renderer,\n            autoplay,\n            loop\n        }\n\n        if (animationData) {\n            paramsInfo.animationData = animationData;\n        } else if (path) {\n            paramsInfo.path = path;\n        } else {\n            throw new Error(\"Check Lottie Component's Props\");\n        }\n\n        // lottie实例生成\n        this.instance = lottie.loadAnimation(paramsInfo);\n\n        // 自定义扩展方法与透传注册事件\n        this.extendMethods(this.instance);\n        this.transEvents(this.instance);\n\n        // 抛出getLottieInstance事件 父节点获取动画对象\n        this.$emit('getLottieInstance', this.instance);\n    }\n}\n</script>\n\n<style>\n/*清除空节点照成canvas底部的空高度*/\n.lottie {\n    font-size: 0;\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// src/VueLottieWeb/VueLottieWeb.vue","import Lottie from './VueLottieWeb';\n\n// Vue.js 的插件应当有一个公开方法 install 。第一个参数是 Vue 构造器，第二个参数是一个可选的选项对象\n// 参考：https://cn.vuejs.org/v2/guide/plugins.html#%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6\n\n//注册组件\nLottie.install = Vue => Vue.component(Lottie.name, Lottie);\n\nexport default Lottie;\n\n\n// WEBPACK FOOTER //\n// ./src/VueLottieWeb/index.js","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c29e0614\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./VueLottieWeb.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./VueLottieWeb.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./VueLottieWeb.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c29e0614\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./VueLottieWeb.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/VueLottieWeb/VueLottieWeb.vue\n// module id = 2\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c29e0614\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./VueLottieWeb.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"22b7d1cb\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-c29e0614\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/VueLottieWeb/VueLottieWeb.vue\n// module id = 3\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".lottie{font-size:0}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-c29e0614\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/VueLottieWeb/VueLottieWeb.vue\n// module id = 4\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 5\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/addStylesClient.js\n// module id = 6\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/listToStyles.js\n// module id = 7\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = 8\n// module chunks = 0","(typeof navigator !== \"undefined\") && (function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nvar createElementID = (function(){\r\n    var _count = 0;\r\n    return function createID() {\r\n        return '__lottie_element_' + ++_count\r\n    }\r\n}())\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\nfunction DynamicPropertyContainer(){};\r\nDynamicPropertyContainer.prototype = {\r\n\taddDynamicProperty: function(prop) {\r\n\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t        this.dynamicProperties.push(prop);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    \tthis._isAnimated = true;\r\n\t    }\r\n\t},\r\n\titerateDynamicProperties: function(){\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf) {\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t},\r\n\tinitDynamicPropertyContainer: function(container){\r\n\t    this.container = container;\r\n\t    this.dynamicProperties = [];\r\n\t    this._mdf = false;\r\n\t    this._isAnimated = false;\r\n\t}\r\n}\r\nvar getBlendMode = (function() {\r\n\r\n\tvar blendModeEnums = {\r\n        0:'source-over',\r\n        1:'multiply',\r\n        2:'screen',\r\n        3:'overlay',\r\n        4:'darken',\r\n        5:'lighten',\r\n        6:'color-dodge',\r\n        7:'color-burn',\r\n        8:'hard-light',\r\n        9:'soft-light',\r\n        10:'difference',\r\n        11:'exclusion',\r\n        12:'hue',\r\n        13:'saturation',\r\n        14:'color',\r\n        15:'luminosity'\r\n    }\r\n\r\n\treturn function(mode) {\r\n\t\treturn blendModeEnums[mode] || '';\r\n\t}\r\n}())\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        if(!sz && sz !== 0) {\r\n            sz = 1;\r\n        }\r\n        if(sx === 1 && sy === 1 && sz === 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        var _p = this.props;\r\n        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function roundMatrixProperty(val) {\r\n        var v = 10000;\r\n        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n            return _rnd(val * v) / v;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var props = this.props;\r\n        var _a = roundMatrixProperty(props[0]);\r\n        var _b = roundMatrixProperty(props[1]);\r\n        var _c = roundMatrixProperty(props[4]);\r\n        var _d = roundMatrixProperty(props[5]);\r\n        var _e = roundMatrixProperty(props[12]);\r\n        var _f = roundMatrixProperty(props[13]);\r\n        return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.001 && det1 < 0.001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed && len){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (pt1, pt2, pt3, pt4){\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(!storedData[bezierName]){\r\n                var curveSegments = defaultCurveSegments;\r\n                var k, i, len;\r\n                var ptCoord,perc,addedLength = 0;\r\n                var ptDistance;\r\n                var point,lastPoint = null;\r\n                if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                    curveSegments = 2;\r\n                }\r\n                var bezierData = new BezierData(curveSegments);\r\n                len = pt3.length;\r\n                for (k = 0; k < curveSegments; k += 1) {\r\n                    point = createSizedArray(len);\r\n                    perc = k / (curveSegments - 1);\r\n                    ptDistance = 0;\r\n                    for (i = 0; i < len; i += 1){\r\n                        ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                        point[i] = ptCoord;\r\n                        if(lastPoint !== null){\r\n                            ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                        }\r\n                    }\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                    bezierData.points[k] = new PointData(ptDistance, point);\r\n                    lastPoint = point;\r\n                }\r\n                bezierData.segmentLength = addedLength;\r\n                storedData[bezierName] = bezierData;\r\n            }\r\n            return storedData[bezierName];\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3;\r\n        var t0t0u0_3 = t0*t0*u0*3;\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(this.checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.isLoaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        //tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.setAttribute('font-family', fontData.fFamily);\r\n        tHelper.setAttribute('font-style', fontData.fStyle);\r\n        tHelper.setAttribute('font-weight', fontData.fWeight);\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.setAttribute('class', fontData.fClass);\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;\r\n        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n        return tHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.isLoaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.isLoaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        var _pendingFonts = len;\r\n        for(i=0; i<len; i+= 1){\r\n            var shouldLoadFont = true;\r\n            var loadedSelector;\r\n            var j;\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n                _pendingFonts -= 1;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"'+ fontArr[i].fFamily +'\"], style[f-origin=\"3\"][f-family=\"'+ fontArr[i].fFamily +'\"]');\r\n\r\n                if (loadedSelector.length > 0) {\r\n                    shouldLoadFont = false;\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var s = createTag('style');\r\n                    s.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    s.setAttribute('f-origin', fontArr[i].origin);\r\n                    s.setAttribute('f-family', fontArr[i].fFamily);\r\n                    s.type = \"text/css\";\r\n                    s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                    defs.appendChild(s);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var l = createTag('link');\r\n                    l.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    l.setAttribute('f-origin', fontArr[i].origin);\r\n                    l.type = \"text/css\";\r\n                    l.rel = \"stylesheet\";\r\n                    l.href = fontArr[i].fPath;\r\n                    document.body.appendChild(l);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (fontArr[i].fPath === loadedSelector[j].src) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var sc = createTag('link');\r\n                    sc.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    sc.setAttribute('f-origin', fontArr[i].origin);\r\n                    sc.setAttribute('rel','stylesheet');\r\n                    sc.setAttribute('href',fontArr[i].fPath);\r\n                    defs.appendChild(sc);\r\n                }\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            fontArr[i].cache = {};\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        if (_pendingFonts === 0) {\r\n            this.isLoaded = true;\r\n        } else {\r\n            //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\r\n            //Adding this timeout seems to fix it\r\n           setTimeout(this.checkLoadedFonts.bind(this), 100);\r\n        }\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size) {\r\n        var fontData = this.getFontByName(fontName);\r\n        var index = char.charCodeAt(0);\r\n        if(!fontData.cache[index + 1]) {\r\n            var tHelper = fontData.helper;\r\n            //Canvas version\r\n            //fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n            //SVG version\r\n            //console.log(tHelper.getBBox().width)\r\n            if (char === ' ') {\r\n                tHelper.textContent = '|' + char + '|';\r\n                var doubleSize = tHelper.getComputedTextLength();\r\n                tHelper.textContent = '||';\r\n                var singleSize = tHelper.getComputedTextLength();\r\n                fontData.cache[index + 1] = (doubleSize - singleSize)/100;\r\n            } else {\r\n                tHelper.textContent = char;\r\n                fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;\r\n            }\r\n        }\r\n        return fontData.cache[index + 1] * size;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return this.fonts[0];\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.isLoaded;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.isLoaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n    Font.prototype.checkLoadedFonts = checkLoadedFonts;\r\n    Font.prototype.loaded = loaded;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n    var math_abs = Math.abs;\r\n\r\n    function interpolateValue(frameNum, caching) {\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if (this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', this.pv.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length - 1, flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while (flag) {\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i + 1];\r\n            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if ((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if (i < len - 1){\r\n                i += 1;\r\n            } else {\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen, perc, jLen, j, fnc;\r\n        var nextKeyTime = nextKeyData.t - offsetTime;\r\n        var keyTime = keyData.t - offsetTime;\r\n        var endValue;\r\n        if (keyData.to) {\r\n            if (!keyData.bezierData) {\r\n                keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if (frameNum >= nextKeyTime || frameNum < keyTime) {\r\n                var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for (k = 0; k < kLen; k += 1) {\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                // caching._lastKeyframeIndex = -1;\r\n            } else {\r\n                if (keyData.__fnct) {\r\n                    fnc = keyData.__fnct;\r\n                } else {\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while (flag) {\r\n                    addedLength += bezierData.points[j].partialLength;\r\n                    if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\r\n                        segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if (j < jLen - 1){\r\n                        j += 1;\r\n                    } else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastKeyframeIndex = i;\r\n            }\r\n        } else {\r\n            var outX, outY, inX, inY, keyValue;\r\n            len = keyData.s.length;\r\n            endValue = nextKeyData.s || keyData.e;\r\n            if (this.sh && keyData.h !== 1) {\r\n                if (frameNum >= nextKeyTime) {\r\n                    newValue[0] = endValue[0];\r\n                    newValue[1] = endValue[1];\r\n                    newValue[2] = endValue[2];\r\n                } else if (frameNum <= keyTime) {\r\n                    newValue[0] = keyData.s[0];\r\n                    newValue[1] = keyData.s[1];\r\n                    newValue[2] = keyData.s[2];\r\n                } else {\r\n                    var quatStart = createQuaternion(keyData.s);\r\n                    var quatEnd = createQuaternion(endValue);\r\n                    var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\r\n                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n                }\r\n                \r\n            } else {\r\n                for(i = 0; i < len; i += 1) {\r\n                    if (keyData.h !== 1) {\r\n                        if (frameNum >= nextKeyTime) {\r\n                            perc = 1;\r\n                        } else if(frameNum < keyTime) {\r\n                            perc = 0;\r\n                        } else {\r\n                            if(keyData.o.x.constructor === Array) {\r\n                                if (!keyData.__fnct) {\r\n                                    keyData.__fnct = [];\r\n                                }\r\n                                if (!keyData.__fnct[i]) {\r\n                                    outX = (typeof keyData.o.x[i] === 'undefined') ? keyData.o.x[0] : keyData.o.x[i];\r\n                                    outY = (typeof keyData.o.y[i] === 'undefined') ? keyData.o.y[0] : keyData.o.y[i];\r\n                                    inX = (typeof keyData.i.x[i] === 'undefined') ? keyData.i.x[0] : keyData.i.x[i];\r\n                                    inY = (typeof keyData.i.y[i] === 'undefined') ? keyData.i.y[0] : keyData.i.y[i];\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct[i] = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct[i];\r\n                                }\r\n                            } else {\r\n                                if (!keyData.__fnct) {\r\n                                    outX = keyData.o.x;\r\n                                    outY = keyData.o.y;\r\n                                    inX = keyData.i.x;\r\n                                    inY = keyData.i.y;\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct;\r\n                                }\r\n                            }\r\n                            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime ));\r\n                        }\r\n                    }\r\n\r\n                    endValue = nextKeyData.s || keyData.e;\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\r\n\r\n                    if (len === 1) {\r\n                        newValue = keyValue;\r\n                    } else {\r\n                        newValue[i] = keyValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    //based on @Toji's https://github.com/toji/gl-matrix/\r\n    function slerp(a, b, t) {\r\n        var out = [];\r\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\r\n        var omega, cosom, sinom, scale0, scale1;\r\n\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    function quaternionToEuler(out, quat) {\r\n        var qx = quat[0];\r\n        var qy = quat[1];\r\n        var qz = quat[2];\r\n        var qw = quat[3];\r\n        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n        out[0] = heading/degToRads;\r\n        out[1] = attitude/degToRads;\r\n        out[2] = bank/degToRads;\r\n    }\r\n\r\n    function createQuaternion(values) {\r\n        var heading = values[0] * degToRads;\r\n        var attitude = values[1] * degToRads;\r\n        var bank = values[2] * degToRads;\r\n        var c1 = Math.cos(heading / 2);\r\n        var c2 = Math.cos(attitude / 2);\r\n        var c3 = Math.cos(bank / 2);\r\n        var s1 = Math.sin(heading / 2);\r\n        var s2 = Math.sin(attitude / 2);\r\n        var s3 = Math.sin(bank / 2);\r\n        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n        return [x,y,z,w];\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            if(this._caching.lastFrame >= frameNum) {\r\n                this._caching._lastKeyframeIndex = -1;\r\n                this._caching.lastIndex = 0;\r\n            }\r\n\r\n            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n            this.pv = renderResult;\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function setVValue(val) {\r\n        var multipliedValue;\r\n        if(this.propType === 'unidimensional') {\r\n            multipliedValue = val * this.mult;\r\n            if(math_abs(this.v - multipliedValue) > 0.00001) {\r\n                this.v = multipliedValue;\r\n                this._mdf = true;\r\n            }\r\n        } else {\r\n            var i = 0, len = this.v.length;\r\n            while (i < len) {\r\n                multipliedValue = val[i] * this.mult;\r\n                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\r\n                    this.v[i] = multipliedValue;\r\n                    this._mdf = true;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }        \r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = this._isFirstFrame;\r\n        var multipliedValue;\r\n        var i, len = this.effectsSequence.length;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this._isFirstFrame = false;\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    function ValueProperty(elem, data, mult, container){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.effectsSequence = [];\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult, container) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = data.k[i] * this.mult;\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this._isFirstFrame = true;\r\n        this.effectsSequence = [];\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult, container) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.v = initFrame;\r\n        this.pv = initFrame;\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        for (i = 0; i < arrLen; i += 1) {\r\n            this.v[i] = initFrame;\r\n            this.pv[i] = initFrame;\r\n        }\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, container) {\r\n        var p;\r\n        if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult, container);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.effectsSequence.length){\r\n            container.addDynamicProperty(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var _mdf = this._mdf;\r\n        this.iterateDynamicProperties();\r\n        this._mdf = this._mdf || _mdf;\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.sk) {\r\n            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        if(this._isDirty) {\r\n            this.precalculateMatrix();\r\n            this._isDirty = false;\r\n        }\r\n\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.cloneFromProps(this.pre.props);\r\n            if (this.appliedTransformations < 1) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.appliedTransformations < 2) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk && this.appliedTransformations < 3) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r && this.appliedTransformations < 4) {\r\n                this.v.rotate(-this.r.v);\r\n            } else if (!this.r && this.appliedTransformations < 4){\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented) {\r\n                var v1,v2, frameRate = this.elem.globalData.frameRate;\r\n                if(this.p && this.p.keyframes && this.p.getValueAtTime) {\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\r\n                    }\r\n                } else if(this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\r\n                    v1 = [];\r\n                    v2 = [];\r\n                    var px = this.px, py = this.py, frameRate;\r\n                    if (px._caching.lastFrame+px.offsetTime <= px.keyframes[0].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate,0);\r\n                    } else if(px._caching.lastFrame+px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate),0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate),0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                    } else {\r\n                        v1 = [px.pv, py.pv];\r\n                        v2[0] = px.getValueAtTime((px._caching.lastFrame+px.offsetTime - 0.01) / frameRate,px.offsetTime);\r\n                        v2[1] = py.getValueAtTime((py._caching.lastFrame+py.offsetTime - 0.01) / frameRate,py.offsetTime);\r\n                    }\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p && this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function precalculateMatrix() {\r\n        if(!this.a.k) {\r\n            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            this.appliedTransformations = 1;\r\n        } else {\r\n            return;\r\n        }\r\n        if(!this.s.effectsSequence.length) {\r\n            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            this.appliedTransformations = 2;\r\n        } else {\r\n            return;\r\n        }\r\n        if(this.sk) {\r\n            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n                this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n            this.appliedTransformations = 3;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.r) {\r\n            if(!this.r.effectsSequence.length) {\r\n                this.pre.rotate(-this.r.v);\r\n                this.appliedTransformations = 4;\r\n            } else {\r\n                return;\r\n            }\r\n        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            this.appliedTransformations = 4;\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function addDynamicProperty(prop) {\r\n        this._addDynamicProperty(prop);\r\n        this.elem.addDynamicProperty(prop);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    function TransformProperty(elem,data,container){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        //Precalculated matrix with non animated properties\r\n        this.pre = new Matrix();\r\n        this.appliedTransformations = 0;\r\n        this.initDynamicPropertyContainer(container || elem);\r\n        if(data.p && data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p || {k:[0,0,0]},1,0,this);\r\n        }\r\n        if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        } else {\r\n            this.r = PropertyFactory.getProp(elem, data.r || {k: 0}, 0, degToRads, this);\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n        }\r\n        this.a = PropertyFactory.getProp(elem,data.a || {k:[0,0,0]},1,0,this);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:[100,100,100]},1,0.01,this);\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        this._isDirty = true;\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype = {\r\n        applyToMatrix: applyToMatrix,\r\n        getValue: processKeys,\r\n        precalculateMatrix: precalculateMatrix,\r\n        autoOrient: autoOrient\r\n    }\r\n\r\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n    function getTransformProperty(elem,data,container){\r\n        return new TransformProperty(elem,data,container);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    var i;\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n        var kf = this.keyframes;\r\n        if(frameNum < kf[0].t-this.offsetTime){\r\n            keyPropS = kf[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){\r\n            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\r\n            /*if(kf[kf.length - 1].s){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            }*/\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = kf.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = kf[i];\r\n                nextKeyData = kf[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                previousValue.i[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                previousValue.o[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                previousValue.v[j][k] = vertexValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            this.interpolateShape(frameNum, this.pv, this._caching);\r\n            ////\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n    }\r\n\r\n    function shapesEqual(shape1, shape2) {\r\n        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n            return false;\r\n        }\r\n        var i, len = shape1._length;\r\n        for(i = 0; i < len; i += 1) {\r\n            if(shape1.v[i][0] !== shape2.v[i][0] \r\n            || shape1.v[i][1] !== shape2.v[i][1] \r\n            || shape1.o[i][0] !== shape2.o[i][0] \r\n            || shape1.o[i][1] !== shape2.o[i][1] \r\n            || shape1.i[i][0] !== shape2.i[i][0] \r\n            || shape1.i[i][1] !== shape2.i[i][1]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function setVValue(newPath) {\r\n        if(!shapesEqual(this.v, newPath)) {\r\n            this.v = shape_pool.clone(newPath);\r\n            this.localShapeCollection.releaseShapes();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this._mdf = true;\r\n            this.paths = this.localShapeCollection;\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }\r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = false;\r\n        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\r\n        var i, len = this.effectsSequence.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    };\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.container = elem;\r\n        this.elem = elem;\r\n        this.data = data;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n        this.effectsSequence = [];\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.setVValue = setVValue;\r\n    ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\r\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n\r\n        EllShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function (){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n\r\n                if(this._mdf){\r\n                    this.convertEllToPath();\r\n                }\r\n            },\r\n            convertEllToPath: function() {\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n                var _cw = this.d !== 3;\r\n                var _v = this.v;\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        extendPrototype([DynamicPropertyContainer], EllShapeProperty);\r\n\r\n        return EllShapeProperty;\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function StarShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n                this.convertToPath = this.convertStarToPath;\r\n            } else {\r\n                this.convertToPath = this.convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertToPath();\r\n            }\r\n        };\r\n\r\n        StarShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function() {\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertToPath();\r\n                }\r\n            },\r\n            convertStarToPath: function() {\r\n                var numPts = Math.floor(this.pt.v)*2;\r\n                var angle = Math.PI*2/numPts;\r\n                /*this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts;*/\r\n                var longFlag = true;\r\n                var longRad = this.or.v;\r\n                var shortRad = this.ir.v;\r\n                var longRound = this.os.v;\r\n                var shortRound = this.is.v;\r\n                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n                currentAng += this.r.v;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    rad = longFlag ? longRad : shortRad;\r\n                    roundness = longFlag ? longRound : shortRound;\r\n                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                    /*this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts;*/\r\n                    longFlag = !longFlag;\r\n                    currentAng += angle*dir;\r\n                }\r\n            },\r\n            convertPolygonToPath: function() {\r\n                var numPts = Math.floor(this.pt.v);\r\n                var angle = Math.PI*2/numPts;\r\n                var rad = this.or.v;\r\n                var roundness = this.os.v;\r\n                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n                var i, currentAng = -Math.PI/ 2;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                currentAng += this.r.v;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                    currentAng += angle*dir;\r\n                }\r\n                this.paths.length = 0;\r\n                this.paths[0] = this.v;\r\n            }\r\n\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], StarShapeProperty);\r\n\r\n        return StarShapeProperty;\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n\r\n         function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n\r\n        RectShapeProperty.prototype = {\r\n            convertRectToPath: function (){\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n                var round = bm_min(v0,v1,this.r.v);\r\n                var cPoint = round*(1-roundCorner);\r\n                this.v._length = 0;\r\n\r\n                if(this.d === 2 || this.d === 1) {\r\n                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                    }\r\n                }else{\r\n                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                    }\r\n                }\r\n            },\r\n            getValue: function(frameNum){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertRectToPath();\r\n                }\r\n\r\n            },\r\n            reset: resetShape\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], RectShapeProperty);\r\n\r\n        return RectShapeProperty;\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data){\r\n        return new modifiers[nm](elem, data);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n        if(this._isAnimated) {\r\n            data.setAsAnimated();\r\n        }\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data){\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;\r\n        e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        s = Math.round(s * 10000) * 0.0001;\r\n        e = Math.round(e * 10000) * 0.0001;\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\r\n                            if (lastShapeInCollection.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\r\n            //Don't remove this even if it's losing cached info.\r\n            this.shapes[i].pathsData.length = 0;\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c && lengths.length) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n    this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n    this.so = PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);\r\n    this.eo = PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = !!this.dynamicProperties.length;\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.frameId = -1;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":1,\"ix\":6,\"k\":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, container) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    this.initDynamicPropertyContainer(container);\r\n    var i, len = data.length || 0, prop;\r\n    for(i = 0; i < len; i += 1) {\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n        this.k = prop.k || this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(!this.k){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || forceRender;\r\n    if (this._mdf) {\r\n        var i = 0, len = this.dataProps.length;\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\r\nfunction GradientProperty(elem,data,container){\r\n    this.data = data;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this.initDynamicPropertyContainer(container);\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n    this.k = this.prop.k;\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\r\nvar buildShapeString = function(pathNodes, length, closed, mat) {\r\n\tif(length === 0) {\r\n            return '';\r\n        }\r\n        var _o = pathNodes.o;\r\n        var _i = pathNodes.i;\r\n        var _v = pathNodes.v;\r\n        var i, shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n        for(i = 1; i < length; i += 1) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n}\r\nvar ImagePreloader = (function(){\r\n\r\n    var proxyImage = (function(){\r\n        var canvas = createTag('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = 1;\r\n        var ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = '#FF0000';\r\n        ctx.fillRect(0, 0, 1, 1);\r\n        return canvas;\r\n    }())\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData, assetsPath, original_path) {\r\n        var path = '';\r\n        if (assetData.e) {\r\n            path = assetData.p;\r\n        } else if(assetsPath) {\r\n            var imagePath = assetData.p;\r\n            if (imagePath.indexOf('images/') !== -1) {\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = assetsPath + imagePath;\r\n        } else {\r\n            path = original_path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function createImageData(assetData) {\r\n        var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n        var img = createTag('img');\r\n        img.crossOrigin = 'anonymous';\r\n        img.addEventListener('load', this._imageLoaded.bind(this), false);\r\n        img.addEventListener('error', function() {\r\n            ob.img = proxyImage;\r\n            this._imageLoaded();\r\n        }.bind(this), false);\r\n        img.src = path;\r\n        var ob = {\r\n            img: img,\r\n            assetData: assetData\r\n        }\r\n        return ob;\r\n    }\r\n\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        var i, len = assets.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!assets[i].layers){\r\n                this.totalImages += 1;\r\n                this.images.push(this._createImageData(assets[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function getImage(assetData) {\r\n        var i = 0, len = this.images.length;\r\n        while (i < len) {\r\n            if (this.images[i].assetData === assetData) {\r\n                return this.images[i].img;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n        this.images.length = 0;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.totalImages === this.loadedAssets;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.loaded = loaded;\r\n        this.destroy = destroy;\r\n        this.getImage = getImage;\r\n        this._createImageData = createImageData;\r\n        this._imageLoaded = imageLoaded;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n        this.images = [];\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar assetLoader = (function(){\r\n\r\n\tfunction formatResponse(xhr) {\r\n\t\tif(xhr.response && typeof xhr.response === 'object') {\r\n\t\t\treturn xhr.response;\r\n\t\t} else if(xhr.response && typeof xhr.response === 'string') {\r\n\t\t\treturn JSON.parse(xhr.response);\r\n\t\t} else if(xhr.responseText) {\r\n\t\t\treturn JSON.parse(xhr.responseText);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadAsset(path, callback, errorCallback) {\r\n\t\tvar response;\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', path, true);\r\n\t\t// set responseType after calling open or IE will break.\r\n\t\ttry {\r\n\t\t    // This crashes on Android WebView prior to KitKat\r\n\t\t    xhr.responseType = \"json\";\r\n\t\t} catch (err) {}\r\n\t    xhr.send();\r\n\t    xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState == 4) {\r\n\t            if(xhr.status == 200){\r\n\t            \tresponse = formatResponse(xhr);\r\n\t            \tcallback(response);\r\n\t            }else{\r\n\t                try{\r\n\t            \t\tresponse = formatResponse(xhr);\r\n\t            \t\tcallback(response);\r\n\t                }catch(err){\r\n\t                \tif(errorCallback) {\r\n\t                \t\terrorCallback(err);\r\n\t                \t}\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t}\r\n\treturn {\r\n\t\tload: loadAsset\r\n\t}\r\n}())\r\n\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n    this._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n    this.initDynamicPropertyContainer(elem);\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var bezierData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[i + 1]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[0]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\r\n    //\r\n    if(documentData.j === 2 || documentData.j === 1) {\r\n        var animatorJustifyOffset = 0;\r\n        var animatorFirstCharOffset = 0;\r\n        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n        var lastIndex = 0;\r\n        var isNewLine = true;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            if (letters[i].n) {\r\n                if(animatorJustifyOffset) {\r\n                    animatorJustifyOffset += animatorFirstCharOffset;\r\n                }\r\n                while (lastIndex < i) {\r\n                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n                    lastIndex += 1;\r\n                }\r\n                animatorJustifyOffset = 0;\r\n                isNewLine = true;\r\n            } else {\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.t.propType) {\r\n                        if (isNewLine && documentData.j === 2) {\r\n                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n                        }\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n                        if (mult.length) {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n                        } else {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n                        }\r\n                    }\r\n                }\r\n                isNewLine = false;\r\n            }\r\n        }\r\n        if(animatorJustifyOffset) {\r\n            animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while(lastIndex < i) {\r\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n            lastIndex += 1;\r\n        }\r\n    }\r\n    //\r\n\r\n    for( i = 0; i < len; i += 1) {\r\n\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n                    if(xPos !== 0 || documentData.j !== 0) {\r\n                        if(this._hasMaskedPath) {\r\n                            if(mult.length) {\r\n                                currentLength += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                currentLength += animatorProps.t.v*mult;\r\n                            }\r\n                        }else{\r\n                            if(mult.length) {\r\n                                xPos += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                xPos += animatorProps.t.v*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\r\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = false;\r\n    this.data = data;\r\n\tthis.elem = elem;\r\n    this.comp = this.elem.comp;\r\n\tthis.keysIndex = 0;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n    this.effectsSequence = [];\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: this.defaultBoxWidth,\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:null,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0,\r\n        __complete: false\r\n\r\n\t};\r\n    this.copyData(this.currentData, this.data.d.k[0].s);\r\n\r\n    if(!this.searchProperty()) {\r\n        this.completeTextData(this.currentData);\r\n    }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0,0];\r\n\r\nTextProperty.prototype.copyData = function(obj, data) {\r\n    for(var s in data) {\r\n        if(data.hasOwnProperty(s)) {\r\n            obj[s] = data[s];\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n    if(!data.__complete) {\r\n        this.completeTextData(data);\r\n    }\r\n    this.currentData = data;\r\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n    this._mdf = true;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n    return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function() {\r\n    this.kf = this.data.d.k.length > 1;\r\n    if(this.kf) {\r\n        this.addEffect(this.getKeyframeValue.bind(this));\r\n    }\r\n    return this.kf;\r\n}\r\n\r\nTextProperty.prototype.addEffect = function(effectFunction) {\r\n\tthis.effectsSequence.push(effectFunction);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_finalValue) {\r\n    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n        return;\r\n    }\r\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\r\n    var currentValue = this.currentData;\r\n    var currentIndex = this.keysIndex;\r\n    if(this.lock) {\r\n        this.setCurrentData(this.currentData);\r\n        return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var multipliedValue;\r\n    var i, len = this.effectsSequence.length;\r\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\r\n    for(i = 0; i < len; i += 1) {\r\n        //Checking if index changed to prevent creating a new object every time the expression updates.\r\n        if(currentIndex !== this.keysIndex) {\r\n            finalValue = this.effectsSequence[i](finalValue, finalValue.t);\r\n        } else {\r\n            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\r\n        }\r\n    }\r\n    if(currentValue !== finalValue) {\r\n        this.setCurrentData(finalValue);\r\n    }\r\n    this.pv = this.v = this.currentData;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n}\r\n\r\nTextProperty.prototype.getKeyframeValue = function() {\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n        this.keysIndex = i;\r\n    }\r\n    return this.data.d.k[this.keysIndex].s;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var charCode;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                charCode = finalText[i].charCodeAt(0);\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(charCode === 13 || charCode === 3){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        charCode = currentChar.charCodeAt(0);\r\n        if (currentChar === ' '){\r\n            val = '\\u00A0';\r\n        } else if (charCode === 13 || charCode === 3) {\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.copyData({}, this.data.d.k[index].s);\r\n    dData = this.copyData(dData, newData);\r\n    this.data.d.k[index].s = dData;\r\n    this.recalculate(index);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = 0;\r\n    this._isFirstFrame = true;\r\n    this.getValue(dData);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n\r\n    function TextSelectorProp(elem,data){\r\n        this._currentTextLength = -1;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.initDynamicPropertyContainer(elem);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    TextSelectorProp.prototype = {\r\n        getMult: function(ind) {\r\n            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n                this.getValue();\r\n            }\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<0.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        },\r\n        getValue: function(newCharsFlag) {\r\n            this.iterateDynamicProperties();\r\n            this._mdf = newCharsFlag || this._mdf;\r\n            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = this._currentTextLength;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n    }\r\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    }\r\n}\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var ariaLabel = '';\r\n    if (config && config.title) {\r\n        var titleElement = createNS('title');\r\n        var titleId = createElementID();\r\n        titleElement.setAttribute('id', titleId);\r\n        titleElement.textContent = config.title;\r\n        this.svgElement.appendChild(titleElement);\r\n        ariaLabel += titleId;\r\n    }\r\n    if (config && config.description) {\r\n        var descElement = createNS('desc');\r\n        var descId = createElementID();\r\n        descElement.setAttribute('id', descId);\r\n        descElement.textContent = config.description;\r\n        this.svgElement.appendChild(descElement);\r\n        ariaLabel += ' ' + descId;\r\n    }\r\n    if (ariaLabel) {\r\n        this.svgElement.setAttribute('aria-labelledby', ariaLabel)\r\n    }\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n    this.rendererType = 'svg';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n        this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.setupGlobalData(animData, defs);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = createElementID();\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction CanvasRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.renderConfig = {\r\n        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n        context: (config && config.context) || null,\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n    if (this.animationItem.wrapper) {\r\n        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n    }\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1,\r\n        _mdf: false,\r\n        renderConfig: this.renderConfig,\r\n        currentGlobalAlpha: -1\r\n    };\r\n    this.contextData = new CVContextData();\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.transformMat = new Matrix();\r\n    this.completeLayers = false;\r\n    this.rendererType = 'canvas';\r\n}\r\nextendPrototype([BaseRenderer],CanvasRenderer);\r\n\r\nCanvasRenderer.prototype.createShape = function (data) {\r\n    return new CVShapeElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createText = function (data) {\r\n    return new CVTextElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createImage = function (data) {\r\n    return new CVImageElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createComp = function (data) {\r\n    return new CVCompElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createSolid = function (data) {\r\n    return new CVSolidElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nCanvasRenderer.prototype.ctxTransform = function(props){\r\n    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n        return;\r\n    }\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n        return;\r\n    }\r\n    this.transformMat.cloneFromProps(props);\r\n    var cProps = this.contextData.cTr.props;\r\n    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n    var trProps = this.contextData.cTr.props;\r\n    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n};\r\n\r\nCanvasRenderer.prototype.ctxOpacity = function(op){\r\n    /*if(op === 1){\r\n        return;\r\n    }*/\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n        return;\r\n    }\r\n    this.contextData.cO *= op < 0 ? 0 : op;\r\n    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {\r\n        this.canvasContext.globalAlpha = this.contextData.cO;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.reset = function(){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    this.contextData.reset();\r\n};\r\n\r\nCanvasRenderer.prototype.save = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.save();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.save();\r\n    }\r\n    var props = this.contextData.cTr.props;\r\n    if(this.contextData._length <= this.contextData.cArrPos) {\r\n        this.contextData.duplicate();\r\n    }\r\n    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n    for (i = 0; i < 16; i += 1) {\r\n        arr[i] = props[i];\r\n    }\r\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n    this.contextData.cArrPos += 1;\r\n};\r\n\r\nCanvasRenderer.prototype.restore = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.restore();\r\n        this.globalData.blendMode = 'source-over';\r\n    }\r\n    this.contextData.cArrPos -= 1;\r\n    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n    var i,arr = this.contextData.cTr.props;\r\n    for(i=0;i<16;i+=1){\r\n        arr[i] = popped[i];\r\n    }\r\n    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n    this.contextData.cO = popped;\r\n    if(this.globalData.currentGlobalAlpha !== popped) {\r\n        this.canvasContext.globalAlpha = popped;\r\n        this.globalData.currentGlobalAlpha = popped;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.configAnimation = function(animData){\r\n    if(this.animationItem.wrapper){\r\n        this.animationItem.container = createTag('canvas');\r\n        this.animationItem.container.style.width = '100%';\r\n        this.animationItem.container.style.height = '100%';\r\n        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n        this.canvasContext = this.animationItem.container.getContext('2d');\r\n        if(this.renderConfig.className) {\r\n            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n        }\r\n    }else{\r\n        this.canvasContext = this.renderConfig.context;\r\n    }\r\n    this.data = animData;\r\n    this.layers = animData.layers;\r\n    this.transformCanvas = {\r\n        w: animData.w,\r\n        h:animData.h,\r\n        sx:0,\r\n        sy:0,\r\n        tx:0,\r\n        ty:0\r\n    };\r\n    this.setupGlobalData(animData, document.body);\r\n    this.globalData.canvasContext = this.canvasContext;\r\n    this.globalData.renderer = this;\r\n    this.globalData.isDashed = false;\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.transformCanvas = this.transformCanvas;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n\r\n    this.updateContainerSize();\r\n};\r\n\r\nCanvasRenderer.prototype.updateContainerSize = function () {\r\n    this.reset();\r\n    var elementWidth,elementHeight;\r\n    if(this.animationItem.wrapper && this.animationItem.container){\r\n        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n    }else{\r\n        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n    }\r\n    var elementRel,animationRel;\r\n    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n        var fillType = par[1] || 'meet';\r\n        var pos = par[0] || 'xMidYMid';\r\n        var xPos = pos.substr(0,4);\r\n        var yPos = pos.substr(4);\r\n        elementRel = elementWidth/elementHeight;\r\n        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        }else{\r\n            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n        }\r\n\r\n        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.tx = 0;\r\n        }\r\n        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.ty = 0;\r\n        }\r\n\r\n    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }else{\r\n        this.transformCanvas.sx = this.renderConfig.dpr;\r\n        this.transformCanvas.sy = this.renderConfig.dpr;\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }\r\n    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\r\n    this.ctxTransform(this.transformCanvas.props);\r\n    this.canvasContext.beginPath();\r\n    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n    this.canvasContext.closePath();\r\n    this.canvasContext.clip();\r\n\r\n    this.renderFrame(this.renderedFrame, true);\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function () {\r\n    if(this.renderConfig.clearCanvas) {\r\n        this.animationItem.wrapper.innerHTML = '';\r\n    }\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = len - 1; i >= 0; i-=1) {\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.globalData.canvasContext = null;\r\n    this.animationItem.container = null;\r\n    this.destroyed = true;\r\n};\r\n\r\nCanvasRenderer.prototype.renderFrame = function(num, forceRender){\r\n    if((this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) || this.destroyed || num === -1){\r\n        return;\r\n    }\r\n    this.renderedFrame = num;\r\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n    this.globalData.frameId += 1;\r\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n\r\n     // console.log('--------');\r\n     // console.log('NEW: ',num);\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n\r\n    for (i = 0; i < len; i++) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        if(this.renderConfig.clearCanvas === true){\r\n            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n        }else{\r\n            this.save();\r\n        }\r\n        for (i = len - 1; i >= 0; i-=1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n        if(this.renderConfig.clearCanvas !== true){\r\n            this.restore();\r\n        }\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.buildItem = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n    elements[pos] = element;\r\n    element.initExpressions();\r\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\r\n};\r\n\r\nCanvasRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.hide = function(){\r\n    this.animationItem.container.style.display = 'none';\r\n};\r\n\r\nCanvasRenderer.prototype.show = function(){\r\n    this.animationItem.container.style.display = 'block';\r\n};\r\n\r\nfunction HybridRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.renderConfig = {\r\n        className: (config && config.className) || '',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.pendingElements = [];\r\n    this.elements = [];\r\n    this.threeDElements = [];\r\n    this.destroyed = false;\r\n    this.camera = null;\r\n    this.supports3d = true;\r\n    this.rendererType = 'html';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],HybridRenderer);\r\n\r\nHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\r\nHybridRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newDOMElement = element.getBaseElement();\r\n    if(!newDOMElement){\r\n        return;\r\n    }\r\n    var layer = this.layers[pos];\r\n    if(!layer.ddd || !this.supports3d){\r\n        if(this.threeDElements) {\r\n            this.addTo3dContainer(newDOMElement,pos);\r\n        } else {\r\n            var i = 0;\r\n            var nextDOMElement, nextLayer, tmpDOMElement;\r\n            while(i<pos){\r\n                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n                    nextLayer = this.elements[i];\r\n                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n                    nextDOMElement = tmpDOMElement || nextDOMElement;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(nextDOMElement){\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n                }\r\n            } else {\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.appendChild(newDOMElement);\r\n                }\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        this.addTo3dContainer(newDOMElement,pos);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createShape = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGShapeElement(data, this.globalData, this);\r\n    }\r\n    return new HShapeElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createText = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGTextElement(data, this.globalData, this);\r\n    }\r\n    return new HTextElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createCamera = function (data) {\r\n    this.camera = new HCameraElement(data, this.globalData, this);\r\n    return this.camera;\r\n};\r\n\r\nHybridRenderer.prototype.createImage = function (data) {\r\n    if(!this.supports3d){\r\n        return new IImageElement(data, this.globalData, this);\r\n    }\r\n    return new HImageElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createComp = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGCompElement(data, this.globalData, this);\r\n    }\r\n    return new HCompElement(data, this.globalData, this);\r\n\r\n};\r\n\r\nHybridRenderer.prototype.createSolid = function (data) {\r\n    if(!this.supports3d){\r\n        return new ISolidElement(data, this.globalData, this);\r\n    }\r\n    return new HSolidElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len) {\r\n        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n            return this.threeDElements[i].perspectiveElem;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createThreeDContainer = function(pos, type){\r\n    var perspectiveElem = createTag('div');\r\n    styleDiv(perspectiveElem);\r\n    var container = createTag('div');\r\n    styleDiv(container);\r\n    if(type === '3d') {\r\n        perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n        perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    }\r\n    \r\n    perspectiveElem.appendChild(container);\r\n    //this.resizerElem.appendChild(perspectiveElem);\r\n    var threeDContainerData = {\r\n        container:container,\r\n        perspectiveElem:perspectiveElem,\r\n        startPos: pos,\r\n        endPos: pos,\r\n        type: type\r\n    };\r\n    this.threeDElements.push(threeDContainerData);\r\n    return threeDContainerData;\r\n};\r\n\r\nHybridRenderer.prototype.build3dContainers = function(){\r\n    var i, len = this.layers.length;\r\n    var lastThreeDContainerData;\r\n    var currentContainer = '';\r\n    for(i=0;i<len;i+=1){\r\n        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n            if(currentContainer !== '3d'){\r\n                currentContainer = '3d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'3d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        } else {\r\n            if(currentContainer !== '2d'){\r\n                currentContainer = '2d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'2d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        }\r\n    }\r\n    len = this.threeDElements.length;\r\n    for(i = len - 1; i >= 0; i --) {\r\n        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len){\r\n        if(pos <= this.threeDElements[i].endPos){\r\n            var j = this.threeDElements[i].startPos;\r\n            var nextElement;\r\n            while(j<pos){\r\n                if(this.elements[j] && this.elements[j].getBaseElement){\r\n                    nextElement = this.elements[j].getBaseElement();\r\n                }\r\n                j += 1;\r\n            }\r\n            if(nextElement){\r\n                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n            } else {\r\n                this.threeDElements[i].container.appendChild(elem);\r\n            }\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.configAnimation = function(animData){\r\n    var resizerElem = createTag('div');\r\n    var wrapper = this.animationItem.wrapper;\r\n    resizerElem.style.width = animData.w+'px';\r\n    resizerElem.style.height = animData.h+'px';\r\n    this.resizerElem = resizerElem;\r\n    styleDiv(resizerElem);\r\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n    if(this.renderConfig.className) {\r\n      resizerElem.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    wrapper.appendChild(resizerElem);\r\n\r\n    resizerElem.style.overflow = 'hidden';\r\n    var svg = createNS('svg');\r\n    svg.setAttribute('width','1');\r\n    svg.setAttribute('height','1');\r\n    styleDiv(svg);\r\n    this.resizerElem.appendChild(svg);\r\n    var defs = createNS('defs');\r\n    svg.appendChild(defs);\r\n    this.data = animData;\r\n    //Mask animation\r\n    this.setupGlobalData(animData, svg);\r\n    this.globalData.defs = defs;\r\n    this.layers = animData.layers;\r\n    this.layerElement = this.resizerElem;\r\n    this.build3dContainers();\r\n    this.updateContainerSize();\r\n};\r\n\r\nHybridRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.animationItem.container = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        this.elements[i].destroy();\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nHybridRenderer.prototype.updateContainerSize = function () {\r\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n    var elementRel = elementWidth/elementHeight;\r\n    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n    var sx,sy,tx,ty;\r\n    if(animationRel>elementRel){\r\n        sx = elementWidth/(this.globalData.compSize.w);\r\n        sy = elementWidth/(this.globalData.compSize.w);\r\n        tx = 0;\r\n        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n    }else{\r\n        sx = elementHeight/(this.globalData.compSize.h);\r\n        sy = elementHeight/(this.globalData.compSize.h);\r\n        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n        ty = 0;\r\n    }\r\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n};\r\n\r\nHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\r\nHybridRenderer.prototype.hide = function(){\r\n    this.resizerElem.style.display = 'none';\r\n};\r\n\r\nHybridRenderer.prototype.show = function(){\r\n    this.resizerElem.style.display = 'block';\r\n};\r\n\r\nHybridRenderer.prototype.initItems = function(){\r\n    this.buildAllItems();\r\n    if(this.camera){\r\n        this.camera.setup();\r\n    } else {\r\n        var cWidth = this.globalData.compSize.w;\r\n        var cHeight = this.globalData.compSize.h;\r\n        var i, len = this.threeDElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n        }\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = createTag('div');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction MaskElement(data,element,globalData) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = createElementID();\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w || 0);\r\n            rect.setAttribute('height', this.element.comp.data.h || 0);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n                elem: path,\r\n                lastPath: ''\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n            filterID = createElementID();\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','erode');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n    if (this.viewData.length) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n    var finalMat = this.element.finalTransform.mat;\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    addDynamicProperty: function(prop) {\r\n        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n            this.dynamicProperties.push(prop);\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n        //list of animated components\r\n        this.renderableComponents = [];\r\n    },\r\n    addRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) === -1) {\r\n            this.renderableComponents.push(component);\r\n        }\r\n    },\r\n    removeRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) !== -1) {\r\n            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n        }\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        var i, len = this.renderableComponents.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n        }\r\n        /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.createRenderableComponents();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                var elem = this.baseElement || this.layerElement;\r\n                elem.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    var elem = this.baseElement || this.layerElement;\r\n                    elem.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = data.hd === true;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n    //TODO find if there are some cases where _isAnimated can be false. \r\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n    this._isAnimated = !!shape.k;\r\n    // TODO: commenting this for now since all shapes are animated\r\n    var i = 0, len = transformers.length;\r\n    while(i < len) {\r\n    \tif(transformers[i].mProps.dynamicProperties.length) {\r\n    \t\tthis._isAnimated = true;\r\n    \t\tbreak;\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function() {\r\n    this._isAnimated = true;\r\n}\r\nfunction SVGTransformData(mProps, op, container) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op,\r\n\t\tcontainer: container\r\n\t};\r\n\tthis.elements = [];\r\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\r\nfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\r\nfunction SVGFillStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\r\nfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.getValue = this.iterateDynamicProperties;\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);\r\n    this.g = new GradientProperty(elem,data.g,this);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = createElementID();\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = createElementID();\r\n        var maskId = createElementID();\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\r\nfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n    this.initGradientData(elem, data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nvar SVGElementsRenderer = (function() {\r\n\tvar _identityMatrix = new Matrix();\r\n\tvar _matrixHelper = new Matrix();\r\n\r\n\tvar ob = {\r\n\t\tcreateRenderFunction: createRenderFunction\r\n\t}\r\n\r\n\tfunction createRenderFunction(data) {\r\n\t    var ty = data.ty;\r\n\t    switch(data.ty) {\r\n\t        case 'fl':\r\n\t        return renderFill;\r\n\t        case 'gf':\r\n\t        return renderGradient;\r\n\t        case 'gs':\r\n\t        return renderGradientStroke;\r\n\t        case 'st':\r\n\t        return renderStroke;\r\n\t        case 'sh':\r\n\t        case 'el':\r\n\t        case 'rc':\r\n\t        case 'sr':\r\n\t        return renderPath;\r\n\t        case 'tr':\r\n\t        return renderContentTransform;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderContentTransform(styleData, itemData, isFirstFrame) {\r\n\t    if(isFirstFrame || itemData.transform.op._mdf){\r\n\t        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);\r\n\t    }\r\n\t    if(isFirstFrame || itemData.transform.mProps._mdf){\r\n\t        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderPath(styleData, itemData, isFirstFrame) {\r\n\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t    var lvl = itemData.lvl;\r\n\t    var paths, mat, props, iterations, k;\r\n\t    for(l=0;l<lLen;l+=1){\r\n\t        redraw = itemData.sh._mdf || isFirstFrame;\r\n\t        if(itemData.styles[l].lvl < lvl){\r\n\t            mat = _matrixHelper.reset();\r\n\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t            k = itemData.transformers.length-1;\r\n\t            while(!redraw && iterations > 0) {\r\n\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t                iterations --;\r\n\t                k --;\r\n\t            }\r\n\t            if(redraw) {\r\n\t                iterations = lvl - itemData.styles[l].lvl;\r\n\t                k = itemData.transformers.length-1;\r\n\t                while(iterations > 0) {\r\n\t                    props = itemData.transformers[k].mProps.v.props;\r\n\t                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t                    iterations --;\r\n\t                    k --;\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            mat = _identityMatrix;\r\n\t        }\r\n\t        paths = itemData.sh.paths;\r\n\t        jLen = paths._length;\r\n\t        if(redraw){\r\n\t            pathStringTransformed = '';\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                pathNodes = paths.shapes[j];\r\n\t                if(pathNodes && pathNodes._length){\r\n\t                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t                }\r\n\t            }\r\n\t            itemData.caches[l] = pathStringTransformed;\r\n\t        } else {\r\n\t            pathStringTransformed = itemData.caches[l];\r\n\t        }\r\n\t        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\r\n\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderFill (styleData,itemData, isFirstFrame){\r\n\t    var styleElem = itemData.style;\r\n\r\n\t    if(itemData.c._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderGradientStroke (styleData, itemData, isFirstFrame) {\r\n\t    renderGradient(styleData, itemData, isFirstFrame);\r\n\t    renderStroke(styleData, itemData, isFirstFrame);\r\n\t}\r\n\r\n\tfunction renderGradient(styleData, itemData, isFirstFrame) {\r\n\t    var gfill = itemData.gf;\r\n\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n\t    if (itemData.o._mdf || isFirstFrame) {\r\n\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t    }\r\n\t    if (itemData.s._mdf || isFirstFrame) {\r\n\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t        }\r\n\t    }\r\n\t    var stops, i, len, stop;\r\n\t    if (itemData.g._cmdf || isFirstFrame) {\r\n\t        stops = itemData.cst;\r\n\t        var cValues = itemData.g.c;\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1){\r\n\t            stop = stops[i];\r\n\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t        }\r\n\t    }\r\n\t    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n\t        var oValues = itemData.g.o;\r\n\t        if(itemData.g._collapsable) {\r\n\t            stops = itemData.cst;\r\n\t        } else {\r\n\t            stops = itemData.ost;\r\n\t        }\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            stop = stops[i];\r\n\t            if(!itemData.g._collapsable) {\r\n\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t            }\r\n\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t        }\r\n\t    }\r\n\t    if (styleData.t === 1) {\r\n\t        if (itemData.e._mdf  || isFirstFrame) {\r\n\t            gfill.setAttribute('x2', pt2[0]);\r\n\t            gfill.setAttribute('y2', pt2[1]);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        var rad;\r\n\t        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            gfill.setAttribute('r', rad);\r\n\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t                itemData.of.setAttribute('r', rad);\r\n\t            }\r\n\t        }\r\n\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n\t            if (!rad) {\r\n\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            }\r\n\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t            var dist = rad * percent;\r\n\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t            gfill.setAttribute('fx', x);\r\n\t            gfill.setAttribute('fy', y);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('fx', x);\r\n\t                itemData.of.setAttribute('fy', y);\r\n\t            }\r\n\t        }\r\n\t        //gfill.setAttribute('fy','200');\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderStroke(styleData, itemData, isFirstFrame) {\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t    }\r\n\t    if(itemData.c && (itemData.c._mdf || isFirstFrame)){\r\n\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t    }\r\n\t    if(itemData.w._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        if(styleElem.msElem){\r\n\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        }\r\n\t    }\r\n\t};\r\n\r\n\treturn ob;\r\n}())\r\nfunction ShapeTransformManager() {\r\n\tthis.sequences = {};\r\n\tthis.sequenceList = [];\r\n    this.transform_key_count = 0;\r\n}\r\n\r\nShapeTransformManager.prototype = {\r\n\taddTransformSequence: function(transforms) {\r\n\t\tvar i, len = transforms.length;\r\n\t\tvar key = '_';\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tkey += transforms[i].transform.key + '_';\r\n\t\t}\r\n\t\tvar sequence = this.sequences[key];\r\n\t\tif(!sequence) {\r\n\t\t\tsequence = {\r\n\t\t\t\ttransforms: [].concat(transforms),\r\n\t\t\t\tfinalTransform: new Matrix(),\r\n\t\t\t\t_mdf: false\r\n\t\t\t};\r\n\t\t\tthis.sequences[key] = sequence;\r\n\t\t\tthis.sequenceList.push(sequence);\r\n\t\t}\r\n\t\treturn sequence;\r\n\t},\r\n\tprocessSequence: function(sequence, isFirstFrame) {\r\n\t\tvar i = 0, len = sequence.transforms.length, _mdf = isFirstFrame;\r\n\t\twhile (i < len && !isFirstFrame) {\r\n\t\t\tif (sequence.transforms[i].transform.mProps._mdf) {\r\n\t\t\t\t_mdf = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti += 1\r\n\t\t}\r\n\t\tif (_mdf) {\r\n\t\t\tvar props;\r\n\t\t\tsequence.finalTransform.reset();\r\n\t\t\tfor (i = len - 1; i >= 0; i -= 1) {\r\n\t\t        props = sequence.transforms[i].transform.mProps.v.props;\r\n\t\t        sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsequence._mdf = _mdf;\r\n\t\t\r\n\t},\r\n\tprocessSequences: function(isFirstFrame) {\r\n\t\tvar i, len = this.sequenceList.length;\r\n\t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\tthis.processSequence(this.sequenceList[i], isFirstFrame);\r\n\t\t}\r\n\r\n\t},\r\n\tgetNewKey: function() {\r\n\t\treturn '_' + this.transform_key_count++;\r\n\t}\r\n}\r\nfunction CVShapeData(element, data, styles, transformsManager) {\r\n    this.styledShapes = [];\r\n    this.tr = [0,0,0,0,0,0];\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);\r\n    var i , len = styles.length,styledShape;\r\n    for (i = 0; i < len; i += 1) {\r\n        if (!styles[i].closed) {\r\n            styledShape = {\r\n                transforms: transformsManager.addTransformSequence(styles[i].transforms),\r\n                trNodes: []\r\n            }\r\n            this.styledShapes.push(styledShape);\r\n            styles[i].elements.push(styledShape);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\r\nfunction BaseElement(){\r\n}\r\n\r\nBaseElement.prototype = {\r\n    checkMasks: function(){\r\n        if(!this.data.hasMask){\r\n            return false;\r\n        }\r\n        var i = 0, len = this.data.masksProperties.length;\r\n        while(i<len) {\r\n            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n                return true;\r\n            }\r\n            i += 1;\r\n        }\r\n        return false;\r\n    },\r\n    initExpressions: function(){\r\n        this.layerInterface = LayerExpressionInterface(this);\r\n        if(this.data.hasMask && this.maskManager) {\r\n            this.layerInterface.registerMaskInterface(this.maskManager);\r\n        }\r\n        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n        this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n        if(this.data.ty === 0 || this.data.xt){\r\n            this.compInterface = CompExpressionInterface(this);\r\n        } else if(this.data.ty === 4){\r\n            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n            this.layerInterface.content = this.layerInterface.shapeInterface;\r\n        } else if(this.data.ty === 5){\r\n            this.layerInterface.textInterface = TextExpressionInterface(this);\r\n            this.layerInterface.text = this.layerInterface.textInterface;\r\n        }\r\n    },\r\n    setBlendMode: function(){\r\n        var blendModeValue = getBlendMode(this.data.bm);\r\n        var elem = this.baseElement || this.layerElement;\r\n\r\n        elem.style['mix-blend-mode'] = blendModeValue;\r\n    },\r\n    initBaseData: function(data, globalData, comp){\r\n        this.globalData = globalData;\r\n        this.comp = comp;\r\n        this.data = data;\r\n        this.layerId = createElementID();\r\n        \r\n        //Stretch factor for old animations missing this property.\r\n        if(!this.data.sr){\r\n            this.data.sr = 1;\r\n        }\r\n        // effects manager\r\n        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        \r\n    },\r\n    getType: function(){\r\n        return this.type;\r\n    }\r\n    ,sourceRectAtTime: function(){}\r\n}\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = createElementID();\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = createElementID();\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                // This solution doesn't work on Android when meta tag with viewport attribute is set\r\n                /*var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);*/\r\n                ////\r\n                var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);\r\n                ////\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = createElementID();\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    createRenderableComponents: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    isShapeInAnimatedModifiers: function(data) {\r\n        var i = 0, len = this.shapeModifiers.length;\r\n        while(i < len) {\r\n            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].sh.reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'bevel'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var elements = this.processedElements;\r\n        var i = 0, len = elements.length;\r\n        while (i < len) {\r\n            if (elements[i].elem === elem) {\r\n                return elements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var elements = this.processedElements;\r\n        var i = elements.length;\r\n        while(i) {\r\n            i -= 1;\r\n            if (elements[i].elem === elem) {\r\n                elements[i].pos = pos;\r\n                return;\r\n            }\r\n        }\r\n        elements.push(new ProcessedElement(elem, pos));\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n        this.textProperty._mdf = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    //This iteration needs to be backwards because of how expressions connect between each other\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n    this.sourceRect = {top:0,left:0,width:this.assetData.w,height:this.assetData.h};\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nIImageElement.prototype.sourceRectAtTime = function() {\r\n\treturn this.sourceRect;\r\n}\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n    this.layerElement.setAttribute('arial-label', documentData.t);\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = !!this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape && tSpan) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function(){\r\n    var i, len = this.shapes.length, shape;\r\n    var j, jLen = this.stylesList.length;\r\n    var style, count = 0;\r\n    var tempShapes = [];\r\n    var areAnimated = false;\r\n    for(j = 0; j < jLen; j += 1) {\r\n        style = this.stylesList[j];\r\n        areAnimated = false;\r\n        tempShapes.length = 0;\r\n        for(i = 0; i < len; i += 1) {\r\n            shape = this.shapes[i];\r\n            if(shape.styles.indexOf(style) !== -1) {\r\n                tempShapes.push(shape);\r\n                areAnimated = shape._isAnimated || areAnimated;\r\n            }\r\n        }\r\n        if(tempShapes.length > 1 && areAnimated) {\r\n            this.setShapesAsAnimated(tempShapes);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function(shapes){\r\n    var i, len = shapes.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        shapes[i].setAsAnimated();\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(' + locationHref + '#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        elementData.gr.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, container) {\r\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);\r\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function(data, element) {\r\n    var i = 0, len = this.animatedContents.length;\r\n    while(i < len) {\r\n        if(this.animatedContents[i].element === element) {\r\n            return;\r\n        }\r\n        i += 1;\r\n    }\r\n    this.animatedContents.push({\r\n        fn: SVGElementsRenderer.createRenderFunction(data),\r\n        element: element,\r\n        data: data\r\n    });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], container);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape();\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function() {\r\n    var i, len = this.animatedContents.length;\r\n    var animatedContent;\r\n    for(i = 0; i < len; i += 1) {\r\n        animatedContent = this.animatedContents[i];\r\n        if((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\r\n            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapesData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = createElementID();\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        while (elemChildren[0]) {\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.paths[i].m === -1) {\r\n            continue;\r\n        }\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = createElementID();\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        var useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var elements = this.elem.comp.elements;\r\n    var i = 0, len = elements.length;\r\n    while (i < len) {\r\n    \tif (elements[i] && elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = createElementID();\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n    if (this.filters.length) {\r\n        elem.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nfunction CVContextData() {\r\n\tthis.saved = [];\r\n    this.cArrPos = 0;\r\n    this.cTr = new Matrix();\r\n    this.cO = 1;\r\n    var i, len = 15;\r\n    this.savedOp = createTypedArray('float32', len);\r\n    for(i=0;i<len;i+=1){\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = len;\r\n}\r\n\r\nCVContextData.prototype.duplicate = function() {\r\n\tvar newLength = this._length * 2;\r\n\tvar currentSavedOp = this.savedOp;\r\n    this.savedOp = createTypedArray('float32', newLength);\r\n    this.savedOp.set(currentSavedOp);\r\n    var i = 0;\r\n    for(i = this._length; i < newLength; i += 1) {\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = newLength;\r\n};\r\n\r\nCVContextData.prototype.reset = function() {\r\n\tthis.cArrPos = 0;\r\n\tthis.cTr.reset();\r\n    this.cO = 1;\r\n};\r\nfunction CVBaseElement(){\r\n}\r\n\r\nCVBaseElement.prototype = {\r\n    createElements: function(){},\r\n    initRendererElement: function(){},\r\n    createContainerElements: function(){\r\n        this.canvasContext = this.globalData.canvasContext;\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n    },\r\n    createContent: function(){},\r\n    setBlendMode: function(){\r\n        var globalData = this.globalData;\r\n        if(globalData.blendMode !== this.data.bm) {\r\n            globalData.blendMode = this.data.bm;\r\n            var blendModeValue = getBlendMode(this.data.bm);\r\n            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new CVMaskElement(this.data, this);\r\n    },\r\n    hideElement: function(){\r\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n            this.hidden = true;\r\n        }\r\n    },\r\n    showElement: function(){\r\n        if (this.isInRange && !this.isTransparent){\r\n            this.hidden = false;\r\n            this._isFirstFrame = true;\r\n            this.maskManager._isFirstFrame = true;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        if (this.hidden || this.data.hd) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.setBlendMode();\r\n        this.globalData.renderer.save();\r\n        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n        this.renderInnerContent();\r\n        this.globalData.renderer.restore();\r\n        if(this.maskManager.hasMasks) {\r\n            this.globalData.renderer.restore(true);\r\n        }\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.canvasContext = null;\r\n        this.data = null;\r\n        this.globalData = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\nCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\r\nfunction CVImageElement(data, globalData, comp){\r\n    this.failed = false;\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.img = globalData.imageLoader.getImage(this.assetData);\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\r\nCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVImageElement.prototype.createContent = function(){\r\n\r\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\r\n        var canvas = createTag('canvas');\r\n        canvas.width = this.assetData.w;\r\n        canvas.height = this.assetData.h;\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imgW = this.img.width;\r\n        var imgH = this.img.height;\r\n        var imgRel = imgW / imgH;\r\n        var canvasRel = this.assetData.w/this.assetData.h;\r\n        var widthCrop, heightCrop;\r\n        var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\r\n        if((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\r\n            heightCrop = imgH;\r\n            widthCrop = heightCrop*canvasRel;\r\n        } else {\r\n            widthCrop = imgW;\r\n            heightCrop = widthCrop/canvasRel;\r\n        }\r\n        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n        this.img = canvas;\r\n    }\r\n\r\n};\r\n\r\nCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n    if (this.failed) {\r\n        return;\r\n    }\r\n    this.canvasContext.drawImage(this.img, 0, 0);\r\n};\r\n\r\nCVImageElement.prototype.destroy = function(){\r\n    this.img = null;\r\n};\r\nfunction CVCompElement(data, globalData, comp) {\r\n    this.completeLayers = false;\r\n    this.layers = data.layers;\r\n    this.pendingElements = [];\r\n    this.elements = createSizedArray(this.layers.length);\r\n    this.initElement(data, globalData, comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\r\nCVCompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nCVCompElement.prototype.destroy = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.layers = null;\r\n    this.elements = null;\r\n};\r\n\r\nfunction CVMaskElement(data,element){\r\n    this.data = data;\r\n    this.element = element;\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.viewData = createSizedArray(this.masksProperties.length);\r\n    var i, len = this.masksProperties.length, hasMasks = false;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            hasMasks = true;\r\n        }\r\n        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n    }\r\n    this.hasMasks = hasMasks;\r\n    if(hasMasks) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nCVMaskElement.prototype.renderFrame = function () {\r\n    if(!this.hasMasks){\r\n        return;\r\n    }\r\n    var transform = this.element.finalTransform.mat;\r\n    var ctx = this.element.canvasContext;\r\n    var i, len = this.masksProperties.length;\r\n    var pt,pts,data;\r\n    ctx.beginPath();\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if (this.masksProperties[i].inv) {\r\n                ctx.moveTo(0, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, 0);\r\n            }\r\n            data = this.viewData[i].v;\r\n            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n            ctx.moveTo(pt[0], pt[1]);\r\n            var j, jLen = data._length;\r\n            for (j = 1; j < jLen; j++) {\r\n                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n            }\r\n            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n        }\r\n    }\r\n    this.element.globalData.renderer.save(true);\r\n    ctx.clip();\r\n};\r\n\r\nCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\r\nCVMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n};\r\nfunction CVShapeElement(data, globalData, comp) {\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this.transformsManager = new ShapeTransformManager();\r\n    this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\r\nCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\r\nCVShapeElement.prototype.transformHelper = {opacity:1,_opMdf:false};\r\n\r\nCVShapeElement.prototype.dashResetter = [];\r\n\r\nCVShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n};\r\n\r\nCVShapeElement.prototype.createStyleElement = function(data, transforms) {\r\n    var styleElem = {\r\n        data: data,\r\n        type: data.ty,\r\n        preTransforms: this.transformsManager.addTransformSequence(transforms),\r\n        transforms: [],\r\n        elements: [],\r\n        closed: data.hd === true\r\n    };\r\n    var elementData = {};\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n        if(!elementData.c.k){\r\n            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n        }\r\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,this);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,this);\r\n        elementData.h = PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);\r\n        elementData.a = PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);\r\n        elementData.g = new GradientProperty(this,data.g,this);\r\n    }\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n        if(data.lj == 1) {\r\n            styleElem.ml = data.ml;\r\n        }\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n        if(!elementData.w.k){\r\n            styleElem.wi = elementData.w.v;\r\n        }\r\n        if(data.d){\r\n            var d = new DashProperty(this,data.d,'canvas', this);\r\n            elementData.d = d;\r\n            if(!elementData.d.k){\r\n                styleElem.da = elementData.d.dashArray;\r\n                styleElem.do = elementData.d.dashoffset[0];\r\n            }\r\n        }\r\n    } else {\r\n        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n    }\r\n    this.stylesList.push(styleElem);\r\n    elementData.style = styleElem;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createTransformElement = function(data) {\r\n    var elementData = {\r\n        transform : {\r\n            opacity: 1,\r\n            _opMdf:false,\r\n            key: this.transformsManager.getNewKey(),\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n        }\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createShapeElement = function(data) {\r\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\r\n    \r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.reloadShapes = function() {\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n    len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n};\r\n\r\nCVShapeElement.prototype.addTransformToStyleList = function(transform) {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.push(transform);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.removeTransformFromStyleList = function() {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.pop();\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.closeStyles = function(styles) {\r\n    var i, len = styles.length, j, jLen;\r\n    for (i = 0; i < len; i += 1) {\r\n        styles[i].closed = true;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, shouldRender, transforms){\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], processedPos, modifier, currentTransform;\r\n    var ownTransforms = [].concat(transforms);\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._shouldRender = shouldRender;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st'|| arr[i].ty == 'gf'|| arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            \r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, shouldRender, ownTransforms);\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                currentTransform = this.createTransformElement(arr[i]);\r\n                itemsData[i] = currentTransform;\r\n            }\r\n            ownTransforms.push(itemsData[i]);\r\n            this.addTransformToStyleList(itemsData[i]);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i]);\r\n            }\r\n            \r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        } else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                shouldRender = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    this.removeTransformFromStyleList();\r\n    this.closeStyles(ownStyles);\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderInnerContent = function() {\r\n    this.transformHelper.opacity = 1;\r\n    this.transformHelper._opMdf = false;\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n};\r\n\r\nCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n    var props, groupMatrix;\r\n    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n        groupTransform.opacity = parentTransform.opacity;\r\n        groupTransform.opacity *= groupTransform.op.v;\r\n        groupTransform._opMdf = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.drawLayer = function() {\r\n    var i, len = this.stylesList.length;\r\n    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n    for(i=0;i<len;i+=1){\r\n        currentStyle = this.stylesList[i];\r\n        type = currentStyle.type;\r\n\r\n        //Skipping style when\r\n        //Stroke width equals 0\r\n        //style should not be rendered (extra unused repeaters)\r\n        //current opacity equals 0\r\n        //global opacity equals 0\r\n        if(((type === 'st' || type === 'gs') && currentStyle.wi === 0) || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0){\r\n            continue;\r\n        }\r\n        renderer.save();\r\n        elems = currentStyle.elements;\r\n        if(type === 'st' || type === 'gs'){\r\n            ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\r\n            ctx.lineWidth = currentStyle.wi;\r\n            ctx.lineCap = currentStyle.lc;\r\n            ctx.lineJoin = currentStyle.lj;\r\n            ctx.miterLimit = currentStyle.ml || 0;\r\n        } else {\r\n            ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\r\n        }\r\n        renderer.ctxOpacity(currentStyle.coOp);\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.beginPath();\r\n        }\r\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\r\n        jLen = elems.length;\r\n        for(j=0;j<jLen;j+=1){\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.beginPath();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(currentStyle.da);\r\n                    ctx.lineDashOffset = currentStyle.do;\r\n                }\r\n            }\r\n            nodes = elems[j].trNodes;\r\n            kLen = nodes.length;\r\n\r\n            for(k=0;k<kLen;k+=1){\r\n                if(nodes[k].t == 'm'){\r\n                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n                }else if(nodes[k].t == 'c'){\r\n                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n                }else{\r\n                    ctx.closePath();\r\n                }\r\n            }\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.stroke();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(this.dashResetter);\r\n                }\r\n            }\r\n        }\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.fill(currentStyle.r);\r\n        }\r\n        renderer.restore();\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n    var i, len = items.length - 1;\r\n    var groupTransform;\r\n    groupTransform = parentTransform;\r\n    for(i=len;i>=0;i-=1){\r\n        if(items[i].ty == 'tr'){\r\n            groupTransform = data[i].transform;\r\n            this.renderShapeTransform(parentTransform, groupTransform);\r\n        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(items[i].ty == 'fl'){\r\n            this.renderFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'st'){\r\n            this.renderStroke(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gf' || items[i].ty == 'gs'){\r\n            this.renderGradientFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gr'){\r\n            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n        }else if(items[i].ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n    if(isMain){\r\n        this.drawLayer();\r\n    }\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStyledShape = function(styledShape, shape){\r\n    if(this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\r\n        var shapeNodes = styledShape.trNodes;\r\n        var paths = shape.paths;\r\n        var i, len, j, jLen = paths._length;\r\n        shapeNodes.length = 0;\r\n        var groupTransformMat = styledShape.transforms.finalTransform;\r\n        for (j = 0; j < jLen; j += 1) {\r\n            var pathNodes = paths.shapes[j];\r\n            if(pathNodes && pathNodes.v){\r\n                len = pathNodes._length;\r\n                for (i = 1; i < len; i += 1) {\r\n                    if (i === 1) {\r\n                        shapeNodes.push({\r\n                            t: 'm',\r\n                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                        });\r\n                    }\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n                    });\r\n                }\r\n                if (len === 1) {\r\n                    shapeNodes.push({\r\n                        t: 'm',\r\n                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                    });\r\n                }\r\n                if (pathNodes.c && len) {\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n                    });\r\n                    shapeNodes.push({\r\n                        t: 'z'\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        styledShape.trNodes = shapeNodes;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    if(pathData.hd !== true && pathData._shouldRender) {\r\n        var i, len = itemData.styledShapes.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\r\n        }\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n\r\n    if (itemData.c._mdf || this._isFirstFrame) {\r\n        styleElem.co = 'rgb(' \r\n        + bm_floor(itemData.c.v[0]) + ',' \r\n        + bm_floor(itemData.c.v[1]) + ',' \r\n        + bm_floor(itemData.c.v[2]) + ')';\r\n    }\r\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\r\n        styleElem.coOp = itemData.o.v * groupTransform.opacity;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderGradientFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    if(!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))) {\r\n        var ctx = this.globalData.canvasContext;\r\n        var grd;\r\n        var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n        if (styleData.t === 1) {\r\n            grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\r\n        } else {\r\n            var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\r\n        }\r\n\r\n        var i, len = styleData.g.p;\r\n        var cValues = itemData.g.c;\r\n        var opacity = 1;\r\n\r\n        for (i = 0; i < len; i += 1){\r\n            if(itemData.g._hasOpacity && itemData.g._collapsable) {\r\n                opacity = itemData.g.o[i*2 + 1];\r\n            }\r\n            grd.addColorStop(cValues[i * 4] / 100,'rgba('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ',' + opacity + ')');\r\n        }\r\n        styleElem.grd = grd;\r\n    }\r\n    styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if(d && (d._mdf  || this._isFirstFrame)){\r\n        styleElem.da = d.dashArray;\r\n        styleElem.do = d.dashoffset[0];\r\n    }\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.wi = itemData.w.v;\r\n    }\r\n};\r\n\r\n\r\nCVShapeElement.prototype.destroy = function(){\r\n    this.shapesData = null;\r\n    this.globalData = null;\r\n    this.canvasContext = null;\r\n    this.stylesList.length = 0;\r\n    this.itemsData.length = 0;\r\n};\r\n\r\n\r\nfunction CVSolidElement(data, globalData, comp) {\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\r\nCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVSolidElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.fillStyle = this.data.sc;\r\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n    //\r\n};\r\nfunction CVTextElement(data, globalData, comp){\r\n    this.textSpans = [];\r\n    this.yOffset = 0;\r\n    this.fillColorAnim = false;\r\n    this.strokeColorAnim = false;\r\n    this.strokeWidthAnim = false;\r\n    this.stroke = false;\r\n    this.fill = false;\r\n    this.justifyOffset = 0;\r\n    this.currentRender = null;\r\n    this.renderType = 'canvas';\r\n    this.values = {\r\n        fill: 'rgba(0,0,0,0)',\r\n        stroke: 'rgba(0,0,0,0)',\r\n        sWidth: 0,\r\n        fValue: ''\r\n    };\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\r\nCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\r\nCVTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\r\n    var hasFill = false;\r\n    if(documentData.fc) {\r\n        hasFill = true;\r\n        this.values.fill = this.buildColor(documentData.fc);\r\n    }else{\r\n        this.values.fill = 'rgba(0,0,0,0)';\r\n    }\r\n    this.fill = hasFill;\r\n    var hasStroke = false;\r\n    if(documentData.sc){\r\n        hasStroke = true;\r\n        this.values.stroke = this.buildColor(documentData.sc);\r\n        this.values.sWidth = documentData.sw;\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    var matrixHelper = this.mHelper;\r\n    this.stroke = hasStroke;\r\n    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n    len = documentData.finalText.length;\r\n    //this.tHelper.font = this.values.fValue;\r\n    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var cnt = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = charData && charData.data || {};\r\n        matrixHelper.reset();\r\n        if(singleShape && letters[i].n) {\r\n            xPos = -trackingOffset;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            firstLine = false;\r\n        }\r\n\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        jLen = shapes.length;\r\n        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n        if(singleShape){\r\n            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        }\r\n        commands = createSizedArray(jLen);\r\n        for(j=0;j<jLen;j+=1){\r\n            kLen = shapes[j].ks.k.i.length;\r\n            pathNodes = shapes[j].ks.k;\r\n            pathArr = [];\r\n            for(k=1;k<kLen;k+=1){\r\n                if(k==1){\r\n                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n                }\r\n                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n            }\r\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n            commands[j] = pathArr;\r\n        }\r\n        if(singleShape){\r\n            xPos += letters[i].l;\r\n            xPos += trackingOffset;\r\n        }\r\n        if(this.textSpans[cnt]){\r\n            this.textSpans[cnt].elem = commands;\r\n        } else {\r\n            this.textSpans[cnt] = {elem: commands};\r\n        }\r\n        cnt +=1;\r\n    }\r\n};\r\n\r\nCVTextElement.prototype.renderInnerContent = function(){\r\n    var ctx = this.canvasContext;\r\n    var finalMat = this.finalTransform.mat.props;\r\n    ctx.font = this.values.fValue;\r\n    ctx.lineCap = 'butt';\r\n    ctx.lineJoin = 'miter';\r\n    ctx.miterLimit = 4;\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    }\r\n\r\n    var  i,len, j, jLen, k, kLen;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter;\r\n    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            continue;\r\n        }\r\n        renderedLetter = renderedLetters[i];\r\n        if(renderedLetter){\r\n            this.globalData.renderer.save();\r\n            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n        }\r\n        if(this.fill){\r\n            if(renderedLetter && renderedLetter.fc){\r\n                if(lastFill !== renderedLetter.fc){\r\n                    lastFill = renderedLetter.fc;\r\n                    ctx.fillStyle = renderedLetter.fc;\r\n                }\r\n            }else if(lastFill !== this.values.fill){\r\n                lastFill = this.values.fill;\r\n                ctx.fillStyle = this.values.fill;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.fill();\r\n            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n        }\r\n        if(this.stroke){\r\n            if(renderedLetter && renderedLetter.sw){\r\n                if(lastStrokeW !== renderedLetter.sw){\r\n                    lastStrokeW = renderedLetter.sw;\r\n                    ctx.lineWidth = renderedLetter.sw;\r\n                }\r\n            }else if(lastStrokeW !== this.values.sWidth){\r\n                lastStrokeW = this.values.sWidth;\r\n                ctx.lineWidth = this.values.sWidth;\r\n            }\r\n            if(renderedLetter && renderedLetter.sc){\r\n                if(lastStroke !== renderedLetter.sc){\r\n                    lastStroke = renderedLetter.sc;\r\n                    ctx.strokeStyle = renderedLetter.sc;\r\n                }\r\n            }else if(lastStroke !== this.values.stroke){\r\n                lastStroke = this.values.stroke;\r\n                ctx.strokeStyle = this.values.stroke;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.stroke();\r\n            ///ctx.strokeText(letters[i].val,0,0);\r\n        }\r\n        if(renderedLetter) {\r\n            this.globalData.renderer.restore();\r\n        }\r\n    }\r\n};\r\nfunction CVEffects() {\r\n\r\n}\r\nCVEffects.prototype.renderFrame = function(){};\r\nfunction HBaseElement(data,globalData,comp){}\r\nHBaseElement.prototype = {\r\n    checkBlendMode: function(){},\r\n    initRendererElement: function(){\r\n        this.baseElement = createTag(this.data.tg || 'div');\r\n        if(this.data.hasMask) {\r\n            this.svgElement = createNS('svg');\r\n            this.layerElement = createNS('g');\r\n            this.maskedElement = this.layerElement;\r\n            this.svgElement.appendChild(this.layerElement);\r\n            this.baseElement.appendChild(this.svgElement);\r\n        } else {\r\n            this.layerElement = this.baseElement;\r\n        }\r\n        styleDiv(this.baseElement);\r\n    },\r\n    createContainerElements: function(){\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n        this.transformedElement = this.baseElement;\r\n        this.maskedElement = this.layerElement;\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n    },\r\n    renderElement: function() {\r\n        if(this.finalTransform._matMdf){\r\n            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n        }\r\n        if(this.finalTransform._opMdf){\r\n            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        //If it is exported as hidden (data.hd === true) no need to render\r\n        //If it is not visible no need to render\r\n        if (this.data.hd || this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.renderElement();\r\n        this.renderInnerContent();\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.layerElement = null;\r\n        this.transformedElement = null;\r\n        if(this.matteElement) {\r\n            this.matteElement = null;\r\n        }\r\n        if(this.maskManager) {\r\n            this.maskManager.destroy();\r\n            this.maskManager = null;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    addEffects: function(){\r\n    },\r\n    setMatte: function(){}\r\n};\r\nHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\nHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\nHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\r\nfunction HSolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\r\nHSolidElement.prototype.createContent = function(){\r\n    var rect;\r\n    if(this.data.hasMask){\r\n        rect = createNS('rect');\r\n        rect.setAttribute('width',this.data.sw);\r\n        rect.setAttribute('height',this.data.sh);\r\n        rect.setAttribute('fill',this.data.sc);\r\n        this.svgElement.setAttribute('width',this.data.sw);\r\n        this.svgElement.setAttribute('height',this.data.sh);\r\n    } else {\r\n        rect = createTag('div');\r\n        rect.style.width = this.data.sw + 'px';\r\n        rect.style.height = this.data.sh + 'px';\r\n        rect.style.backgroundColor = this.data.sc;\r\n    }\r\n    this.layerElement.appendChild(rect);\r\n};\r\n\r\nfunction HCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = !data.hasMask;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\nHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\r\nHCompElement.prototype.createContainerElements = function(){\r\n    this._createBaseContainerElements();\r\n    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n    if(this.data.hasMask){\r\n        this.svgElement.setAttribute('width',this.data.w);\r\n        this.svgElement.setAttribute('height',this.data.h);\r\n        this.transformedElement = this.baseElement;\r\n    } else {\r\n        this.transformedElement = this.layerElement;\r\n    }\r\n};\r\n\r\nHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n    var j = 0;\r\n    var nextElement;\r\n    while(j<pos){\r\n        if(this.elements[j] && this.elements[j].getBaseElement){\r\n            nextElement = this.elements[j].getBaseElement();\r\n        }\r\n        j += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(elem, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(elem);\r\n    }\r\n}\r\n\r\nfunction HShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.shapesContainer = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n}\r\nextendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\nHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\r\nHShapeElement.prototype.createContent = function(){\r\n    var cont;\r\n    this.baseElement.style.fontSize = 0;\r\n    if (this.data.hasMask) {\r\n        this.layerElement.appendChild(this.shapesContainer);\r\n        cont = this.svgElement;\r\n    } else {\r\n        cont = createNS('svg');\r\n        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n        cont.setAttribute('width',size.w);\r\n        cont.setAttribute('height',size.h);\r\n        cont.appendChild(this.shapesContainer);\r\n        this.layerElement.appendChild(cont);\r\n    }\r\n\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n    this.filterUniqueShapes();\r\n    this.shapeCont = cont;\r\n};\r\n\r\nHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n    var i, len = transformers.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n    }\r\n    return point;\r\n}\r\n\r\nHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n    var shape = item.sh.v;\r\n    var transformers = item.transformers;\r\n    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n    if (len <= 1) {\r\n        return;\r\n    }\r\n    for (i = 0; i < len - 1; i += 1) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n    if(shape.c) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n    var bounds = this.shapeBoundingBox;\r\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n}\r\n\r\nHShapeElement.prototype.shapeBoundingBox = {\r\n    left:0,\r\n    right:0,\r\n    top:0,\r\n    bottom:0,\r\n}\r\n\r\nHShapeElement.prototype.tempBoundingBox = {\r\n    x:0,\r\n    xMax:0,\r\n    y:0,\r\n    yMax:0,\r\n    width:0,\r\n    height:0\r\n}\r\n\r\nHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\r\n    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\r\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\r\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n      c = 3 * p1[i] - 3 * p0[i];\r\n\r\n      b = b | 0;\r\n      a = a | 0;\r\n      c = c | 0;\r\n\r\n      if (a === 0) {\r\n\r\n        if (b === 0) {\r\n          continue;\r\n        }\r\n\r\n        t = -c / b;\r\n\r\n        if (0 < t && t < 1) {\r\n          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n        }\r\n        continue;\r\n      }\r\n\r\n      b2ac = b * b - 4 * c * a;\r\n\r\n      if (b2ac < 0) {\r\n        continue;\r\n      }\r\n\r\n      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\r\n      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\r\n    }\r\n\r\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n  };\r\n\r\n  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n    return bm_pow(1-t, 3) * p0[i]\r\n        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n        + bm_pow(t, 3) * p3[i];\r\n  }\r\n\r\nHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n    var i, len = itemsData.length, path;\r\n    for(i = 0; i < len; i += 1) {\r\n        if(itemsData[i] && itemsData[i].sh) {\r\n            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n        } else if(itemsData[i] && itemsData[i].it) {\r\n            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n        }\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.currentBoxContains = function(box) {\r\n    return this.currentBBox.x <= box.x \r\n    && this.currentBBox.y <= box.y \r\n    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width\r\n    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height\r\n}\r\n\r\nHShapeElement.prototype.renderInnerContent = function() {\r\n    this._renderShapeFrame();\r\n\r\n    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n        var tempBoundingBox = this.tempBoundingBox;\r\n        var max = 999999;\r\n        tempBoundingBox.x = max;\r\n        tempBoundingBox.xMax = -max;\r\n        tempBoundingBox.y = max;\r\n        tempBoundingBox.yMax = -max;\r\n        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n        //var tempBoundingBox = this.shapeCont.getBBox();\r\n        if(this.currentBoxContains(tempBoundingBox)) {\r\n            return;\r\n        }\r\n        var changed = false;\r\n        if(this.currentBBox.w !== tempBoundingBox.width){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n            changed = true;\r\n        }\r\n        if(this.currentBBox.h !== tempBoundingBox.height){\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n            changed = true;\r\n        }\r\n        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.currentBBox.x = tempBoundingBox.x;\r\n            this.currentBBox.y = tempBoundingBox.y;\r\n\r\n            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n\r\n};\r\nfunction HTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.textPaths = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n    this.renderType = 'svg';\r\n    this.isMasked = false;\r\n    this.initElement(data,globalData,comp);\r\n\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\r\nHTextElement.prototype.createContent = function(){\r\n    this.isMasked = this.checkMasks();\r\n    if(this.isMasked){\r\n        this.renderType = 'svg';\r\n        this.compW = this.comp.data.w;\r\n        this.compH = this.comp.data.h;\r\n        this.svgElement.setAttribute('width',this.compW);\r\n        this.svgElement.setAttribute('height',this.compH);\r\n        var g = createNS('g');\r\n        this.maskedElement.appendChild(g);\r\n        this.innerElem = g;\r\n    } else {\r\n        this.renderType = 'html';\r\n        this.innerElem = this.layerElement;\r\n    }\r\n\r\n    this.checkParenting();\r\n\r\n};\r\n\r\nHTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n    var innerElemStyle = this.innerElem.style;\r\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n    if(documentData.sc){\r\n        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(!this.globalData.fontManager.chars){\r\n        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n        if(fontData.fClass){\r\n            this.innerElem.className = fontData.fClass;\r\n        } else {\r\n            innerElemStyle.fontFamily = fontData.fFamily;\r\n            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n            innerElemStyle.fontStyle = fStyle;\r\n            innerElemStyle.fontWeight = fWeight;\r\n        }\r\n    }\r\n    var i, len;\r\n\r\n    var letters = documentData.l;\r\n    len = letters.length;\r\n    var tSpan,tParent,tCont;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '';\r\n    var cnt = 0;\r\n    for (i = 0;i < len ;i += 1) {\r\n        if(this.globalData.fontManager.chars){\r\n            if(!this.textPaths[cnt]){\r\n                tSpan = createNS('path');\r\n                tSpan.setAttribute('stroke-linecap', 'butt');\r\n                tSpan.setAttribute('stroke-linejoin','round');\r\n                tSpan.setAttribute('stroke-miterlimit','4');\r\n            } else {\r\n                tSpan = this.textPaths[cnt];\r\n            }\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tCont = tParent.children[0];\r\n                } else {\r\n\r\n                    tParent = createTag('div');\r\n                    tCont = createNS('svg');\r\n                    tCont.appendChild(tSpan);\r\n                    styleDiv(tParent);\r\n                }\r\n            }\r\n        }else{\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tSpan = this.textPaths[cnt];\r\n                } else {\r\n                    tParent = createTag('span');\r\n                    styleDiv(tParent);\r\n                    tSpan = createTag('span');\r\n                    styleDiv(tSpan);\r\n                    tParent.appendChild(tSpan);\r\n                }\r\n            } else {\r\n                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n            }\r\n        }\r\n        //tSpan.setAttribute('visibility', 'hidden');\r\n        if(this.globalData.fontManager.chars){\r\n            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n            var shapeData;\r\n            if(charData){\r\n                shapeData = charData.data;\r\n            } else {\r\n                shapeData = null;\r\n            }\r\n            matrixHelper.reset();\r\n            if(shapeData && shapeData.shapes){\r\n                shapes = shapeData.shapes[0].it;\r\n                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n                tSpan.setAttribute('d',shapeStr);\r\n            }\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                if(shapeData && shapeData.shapes){\r\n\r\n                    //document.body.appendChild is needed to get exact measure of shape\r\n                    document.body.appendChild(tCont);\r\n                    var boundingBox = tCont.getBBox();\r\n                    tCont.setAttribute('width',boundingBox.width + 2);\r\n                    tCont.setAttribute('height',boundingBox.height + 2);\r\n                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\r\n                    letters[i].yOffset = boundingBox.y-1;\r\n\r\n                } else{\r\n                    tCont.setAttribute('width',1);\r\n                    tCont.setAttribute('height',1);\r\n                }\r\n                    tParent.appendChild(tCont);\r\n            }else{\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }else{\r\n            tSpan.textContent = letters[i].val;\r\n            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                //\r\n                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n            } else {\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }\r\n        //\r\n        if(!this.isMasked){\r\n            this.textSpans[cnt] = tParent;\r\n        }else{\r\n            this.textSpans[cnt] = tSpan;\r\n        }\r\n        this.textSpans[cnt].style.display = 'block';\r\n        this.textPaths[cnt] = tSpan;\r\n        cnt += 1;\r\n    }\r\n    while(cnt < this.textSpans.length){\r\n        this.textSpans[cnt].style.display = 'none';\r\n        cnt += 1;\r\n    }\r\n};\r\n\r\nHTextElement.prototype.renderInnerContent = function() {\r\n\r\n    if(this.data.singleShape){\r\n        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n            return;\r\n        } else {\r\n            // Todo Benchmark if using this is better than getBBox\r\n             if(this.isMasked && this.finalTransform._matMdf){\r\n                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n             }\r\n        }\r\n    }\r\n\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n        return;\r\n    }\r\n    var  i,len, count = 0;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter, textSpan, textPath;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            count += 1;\r\n            continue;\r\n        }\r\n        textSpan = this.textSpans[i];\r\n        textPath = this.textPaths[i];\r\n        renderedLetter = renderedLetters[count];\r\n        count += 1;\r\n        if(renderedLetter._mdf.m) {\r\n            if(!this.isMasked){\r\n                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n            }else{\r\n                textSpan.setAttribute('transform',renderedLetter.m);\r\n            }\r\n        }\r\n        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n        textSpan.style.opacity = renderedLetter.o;\r\n        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n        }\r\n        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n            textPath.setAttribute('stroke',renderedLetter.sc);\r\n        }\r\n        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n            textPath.setAttribute('fill',renderedLetter.fc);\r\n            textPath.style.color = renderedLetter.fc;\r\n        }\r\n    }\r\n\r\n    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n        var boundingBox = this.innerElem.getBBox();\r\n\r\n        if(this.currentBBox.w !== boundingBox.width){\r\n            this.currentBBox.w = boundingBox.width;\r\n            this.svgElement.setAttribute('width',boundingBox.width);\r\n        }\r\n        if(this.currentBBox.h !== boundingBox.height){\r\n            this.currentBBox.h = boundingBox.height;\r\n            this.svgElement.setAttribute('height',boundingBox.height);\r\n        }\r\n\r\n        var margin = 1;\r\n        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n            this.currentBBox.w = boundingBox.width + margin*2;\r\n            this.currentBBox.h = boundingBox.height + margin*2;\r\n            this.currentBBox.x = boundingBox.x - margin;\r\n            this.currentBBox.y = boundingBox.y - margin;\r\n\r\n            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n};\r\nfunction HImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\r\n\r\nHImageElement.prototype.createContent = function(){\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    var img = new Image();\r\n\r\n    if(this.data.hasMask){\r\n        this.imageElem = createNS('image');\r\n        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n        this.layerElement.appendChild(this.imageElem);\r\n        this.baseElement.setAttribute('width',this.assetData.w);\r\n        this.baseElement.setAttribute('height',this.assetData.h);\r\n    } else {\r\n        this.layerElement.appendChild(img);\r\n    }\r\n    img.src = assetPath;\r\n    if(this.data.ln){\r\n        this.baseElement.setAttribute('id',this.data.ln);\r\n    }\r\n};\r\nfunction HCameraElement(data,globalData,comp){\r\n    this.initFrame();\r\n    this.initBaseData(data,globalData,comp);\r\n    this.initHierarchy();\r\n    var getProp = PropertyFactory.getProp;\r\n    this.pe = getProp(this,data.pe,0,0,this);\r\n    if(data.ks.p.s){\r\n        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n    }else{\r\n        this.p = getProp(this,data.ks.p,1,0,this);\r\n    }\r\n    if(data.ks.a){\r\n        this.a = getProp(this,data.ks.a,1,0,this);\r\n    }\r\n    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n        var i,len = data.ks.or.k.length;\r\n        for(i=0;i<len;i+=1){\r\n            data.ks.or.k[i].to = null;\r\n            data.ks.or.k[i].ti = null;\r\n        }\r\n    }\r\n    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n    this.or.sh = true;\r\n    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n    this.mat = new Matrix();\r\n    this._prevMat = new Matrix();\r\n    this._isFirstFrame = true;\r\n    \r\n    // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\r\n    this.finalTransform = {\r\n        mProp: this\r\n    };\r\n}\r\nextendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\r\nHCameraElement.prototype.setup = function() {\r\n    var i, len = this.comp.threeDElements.length, comp;\r\n    for(i=0;i<len;i+=1){\r\n        //[perspectiveElem,container]\r\n        comp = this.comp.threeDElements[i];\r\n        if(comp.type === '3d') {\r\n            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n        }\r\n    }\r\n};\r\n\r\nHCameraElement.prototype.createElements = function(){\r\n};\r\n\r\nHCameraElement.prototype.hide = function(){\r\n};\r\n\r\nHCameraElement.prototype.renderFrame = function(){\r\n    var _mdf = this._isFirstFrame;\r\n    var i, len;\r\n    if(this.hierarchy){\r\n        len = this.hierarchy.length;\r\n        for(i=0;i<len;i+=1){\r\n            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n        }\r\n    }\r\n    if(_mdf || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n        this.mat.reset();\r\n\r\n        if(this.hierarchy){\r\n            var mat;\r\n            len = this.hierarchy.length - 1;\r\n            for (i = len; i >= 0; i -= 1) {\r\n                /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                console.log(mat)\r\n                this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n                console.log(this.mat.props)*/\r\n                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n                this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\r\n                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n            }\r\n        }\r\n\r\n        if(this.p){\r\n            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n        }else{\r\n            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n        }\r\n        if(this.a){\r\n            var diffVector = [this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]];\r\n            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\r\n        }\r\n        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n        this.mat.translate(0,0,this.pe.v);\r\n\r\n\r\n        \r\n\r\n        var hasMatrixChanged = !this._prevMat.equals(this.mat);\r\n        if((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\r\n            len = this.comp.threeDElements.length;\r\n            var comp;\r\n            for(i=0;i<len;i+=1){\r\n                comp = this.comp.threeDElements[i];\r\n                if(comp.type === '3d') {\r\n                    if(hasMatrixChanged) {\r\n                        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n                    }\r\n                    if(this.pe._mdf) {\r\n                        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n                    }\r\n                }\r\n            }\r\n            this.mat.clone(this._prevMat);\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nHCameraElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nHCameraElement.prototype.destroy = function(){\r\n};\r\nHCameraElement.prototype.getBaseElement = function(){return null;};\r\nfunction HEffects() {\r\n}\r\nHEffects.prototype.renderFrame = function(){};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n    var _isFrozen = false;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function getRegisteredAnimations() {\r\n        var i, len = registeredAnimations.length;\r\n        var animations = [];\r\n        for(i = 0; i < len; i += 1) {\r\n            animations.push(registeredAnimations[i].animation);\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(playingAnimationsNum && !_isFrozen) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function activate(){\r\n        if(!_isFrozen && playingAnimationsNum){\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function freeze() {\r\n        _isFrozen = true;\r\n    }\r\n\r\n    function unfreeze() {\r\n        _isFrozen = false;\r\n        activate();\r\n    }\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    moduleOb.freeze = freeze;\r\n    moduleOb.unfreeze = unfreeze;\r\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = createElementID();\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this._completedLoop = false;\r\n    this.projectInterface = ProjectInterface();\r\n    this.imagePreloader = new ImagePreloader();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    this.assetsPath = params.assetsPath;\r\n    if(params.animationData){\r\n        this.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n\r\n        assetLoader.load(params.path, this.configAnimation.bind(this), function() {\r\n            this.trigger('data_failed');\r\n        }.bind(this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.totalFrames;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    assetLoader.load(segmentPath, this.includeLayers.bind(this), function() {\r\n        this.trigger('data_failed');\r\n    }.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.totalFrames;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.imagesLoaded = function() {\r\n    this.trigger('loaded_images');\r\n    this.checkLoaded()\r\n}\r\n\r\nAnimationItem.prototype.preloadImages = function() {\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\r\n}\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    if(!this.renderer){\r\n        return;\r\n    }\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.preloadImages();\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    this.waitForFontsLoaded();\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = function(){\r\n    if(!this.renderer) {\r\n        return;\r\n    }\r\n    if(this.renderer.globalData.fontManager.loaded()){\r\n        this.checkLoaded();\r\n    }else{\r\n        setTimeout(this.waitForFontsLoaded.bind(this),20);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {\r\n        this.isLoaded = true;\r\n        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function() {\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this), 0);\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this._completedLoop = false;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue >  this.totalFrames ? nextValue % this.totalFrames : 0)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this._completedLoop = true;\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                if(!this._completedLoop) {\r\n                    this._completedLoop = true;\r\n                } else {\r\n                    this.trigger('loopComplete');\r\n                }\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr, forceFlag) {\r\n    if (forceFlag) {\r\n        this.segments.length = 0;\r\n    }\r\n    if (typeof arr[0] === 'object') {\r\n        var i, len = arr.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.segments.push(arr[i]);\r\n        }\r\n    } else {\r\n        this.segments.push(arr);\r\n    }\r\n    if (this.segments.length && forceFlag) {\r\n        this.adjustSegment(this.segments.shift(), 0);\r\n    }\r\n    if (this.isPaused) {\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if (forceFlag) {\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset) {\r\n    if (this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if ((name && this.name != name) || !this.renderer) {\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.imagePreloader.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(assetData.e) {\r\n        path = assetData.p;\r\n    } else if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nvar Expressions = (function(){\r\n    var ob = {};\r\n    ob.initExpressions = initExpressions;\r\n\r\n\r\n    function initExpressions(animation){\r\n\r\n    \tvar stackCount = 0;\r\n    \tvar registers = [];\r\n\r\n    \tfunction pushExpression() {\r\n\t\t\tstackCount += 1;\r\n    \t}\r\n\r\n    \tfunction popExpression() {\r\n\t\t\tstackCount -= 1;\r\n\t\t\tif (stackCount === 0) {\r\n\t\t\t\treleaseInstances();\r\n\t\t\t}\r\n    \t}\r\n\r\n    \tfunction registerExpressionProperty(expression) {\r\n    \t\tif (registers.indexOf(expression) === -1) {\r\n\t\t\t\tregisters.push(expression)\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction releaseInstances() {\r\n    \t\tvar i, len = registers.length;\r\n    \t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\t\tregisters[i].release();\r\n    \t\t}\r\n    \t\tregisters.length = 0;\r\n    \t}\r\n\r\n        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n        animation.renderer.globalData.pushExpression = pushExpression;\r\n        animation.renderer.globalData.popExpression = popExpression;\r\n        animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\r\n    }\r\n   return ob;\r\n}());\r\n\r\nexpressionsPlugin = Expressions;\r\n\r\nvar ExpressionManager = (function(){\r\n    'use strict';\r\n    var ob = {};\r\n    var Math = BMMath;\r\n    var window = null;\r\n    var document = null;\r\n\r\n    function $bm_isInstanceOfArray(arr) {\r\n        return arr.constructor === Array || arr.constructor === Float32Array;\r\n    }\r\n\r\n    function isNumerable(tOfV, v) {\r\n        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\r\n    }\r\n\r\n    function $bm_neg(a){\r\n        var tOfA = typeof a;\r\n        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n            return -a;\r\n        }\r\n        if($bm_isInstanceOfArray(a)){\r\n            var i, lenA = a.length;\r\n            var retArr = [];\r\n            for(i=0;i<lenA;i+=1){\r\n                retArr[i] = -a[i];\r\n            }\r\n            return retArr;\r\n        }\r\n        if (a.propType) {\r\n            return a.v;\r\n        }\r\n    }\r\n\r\n    var easeInBez = BezierFactory.getBezierEasing(0.333,0,.833,.833, 'easeIn').get;\r\n    var easeOutBez = BezierFactory.getBezierEasing(0.167,0.167,.667,1, 'easeOut').get;\r\n    var easeInOutBez = BezierFactory.getBezierEasing(.33,0,.667,1, 'easeInOut').get;\r\n\r\n    function sum(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(tOfA === 'string' || tOfB === 'string'){\r\n            return a + b;\r\n        }\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a + b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] + b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a + b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            \r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] + b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n    var add = sum;\r\n\r\n    function sub(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            if(tOfA === 'string') {\r\n                a = parseInt(a);\r\n            }\r\n            if(tOfB === 'string') {\r\n                b = parseInt(b);\r\n            }\r\n            return a - b;\r\n        }\r\n        if( $bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] - b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) &&  $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a - b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] - b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function mul(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a * b;\r\n        }\r\n\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] * b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a * b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function div(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a / b;\r\n        }\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] / b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a / b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n    function mod(a,b) {\r\n        if(typeof a === 'string') {\r\n            a = parseInt(a);\r\n        }\r\n        if(typeof b === 'string') {\r\n            b = parseInt(b);\r\n        }\r\n        return a % b;\r\n    }\r\n    var $bm_sum = sum;\r\n    var $bm_sub = sub;\r\n    var $bm_mul = mul;\r\n    var $bm_div = div;\r\n    var $bm_mod = mod;\r\n\r\n    function clamp(num, min, max) {\r\n        if(min > max){\r\n            var mm = max;\r\n            max = min;\r\n            min = mm;\r\n        }\r\n        return Math.min(Math.max(num, min), max);\r\n    }\r\n\r\n    function radiansToDegrees(val) {\r\n        return val/degToRads;\r\n    }\r\n    var radians_to_degrees = radiansToDegrees;\r\n\r\n    function degreesToRadians(val) {\r\n        return val*degToRads;\r\n    }\r\n    var degrees_to_radians = radiansToDegrees;\r\n\r\n    var helperLengthArray = [0,0,0,0,0,0];\r\n\r\n    function length(arr1, arr2) {\r\n        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n            arr2 = arr2 || 0;\r\n            return Math.abs(arr1 - arr2);\r\n        }\r\n        if(!arr2) {\r\n            arr2 = helperLengthArray;\r\n        }\r\n        var i, len = Math.min(arr1.length, arr2.length);\r\n        var addedLength = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n        }\r\n        return Math.sqrt(addedLength);\r\n    }\r\n\r\n    function normalize(vec) {\r\n        return div(vec, length(vec));\r\n    }\r\n\r\n    function rgbToHsl(val) {\r\n        var r = val[0]; var g = val[1]; var b = val[2];\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min){\r\n            h = s = 0; // achromatic\r\n        }else{\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max){\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l,val[3]];\r\n    }\r\n\r\n    function hue2rgb(p, q, t){\r\n        if(t < 0) t += 1;\r\n        if(t > 1) t -= 1;\r\n        if(t < 1/6) return p + (q - p) * 6 * t;\r\n        if(t < 1/2) return q;\r\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    }\r\n\r\n    function hslToRgb(val){\r\n        var h = val[0];\r\n        var s = val[1];\r\n        var l = val[2];\r\n\r\n        var r, g, b;\r\n\r\n        if(s === 0){\r\n            r = g = b = l; // achromatic\r\n        }else{\r\n\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return [r, g , b, val[3]];\r\n    }\r\n\r\n    function linear(t, tMin, tMax, value1, value2){\r\n        if(value1 === undefined || value2 === undefined){\r\n            value1 = tMin;\r\n            value2 = tMax;\r\n            tMin = 0;\r\n            tMax = 1;\r\n        }\r\n        if(tMax < tMin) {\r\n            var _tMin = tMax;\r\n            tMax = tMin;\r\n            tMin = _tMin;\r\n        }\r\n        if(t <= tMin) {\r\n            return value1;\r\n        }else if(t >= tMax){\r\n            return value2;\r\n        }\r\n        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n        if(!value1.length){\r\n            return value1 + (value2-value1)*perc;\r\n        }\r\n        var i, len = value1.length;\r\n        var arr = createTypedArray('float32', len);\r\n        for(i=0;i<len;i+=1){\r\n            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n        }\r\n        return arr;\r\n    }\r\n    function random(min,max){\r\n        if(max === undefined){\r\n            if(min === undefined){\r\n                min = 0;\r\n                max = 1;\r\n            } else {\r\n                max = min;\r\n                min = undefined;\r\n            }\r\n        }\r\n        if(max.length){\r\n            var i, len = max.length;\r\n            if(!min){\r\n                min = createTypedArray('float32', len);\r\n            }\r\n            var arr = createTypedArray('float32', len);\r\n            var rnd = BMMath.random();\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n            }\r\n            return arr;\r\n        }\r\n        if(min === undefined){\r\n            min = 0;\r\n        }\r\n        var rndm = BMMath.random();\r\n        return min + rndm*(max-min);\r\n    }\r\n\r\n    function createPath(points, inTangents, outTangents, closed) {\r\n        var i, len = points.length;\r\n        var path = shape_pool.newElement();\r\n        path.setPathData(!!closed, len);\r\n        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n        for(i = 0; i < len; i += 1) {\r\n            inVertexPoint = (inTangents && inTangents[i]) ? inTangents[i] : arrPlaceholder;\r\n            outVertexPoint = (outTangents && outTangents[i]) ? outTangents[i] : arrPlaceholder;\r\n            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function initiateExpression(elem,data,property){\r\n        var val = data.x;\r\n        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n        var _needsRandom = val.indexOf('random') !== -1;\r\n        var elemType = elem.data.ty;\r\n        var transform,$bm_transform,content,effect;\r\n        var thisProperty = property;\r\n        thisProperty.valueAtTime = thisProperty.getValueAtTime;\r\n        Object.defineProperty(thisProperty, 'value', {\r\n            get: function() {\r\n                return thisProperty.v\r\n            }\r\n        })\r\n        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n        elem.comp.displayStartTime = 0;\r\n        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        var width = elem.data.sw ? elem.data.sw : 0;\r\n        var height = elem.data.sh ? elem.data.sh : 0;\r\n        var name = elem.data.nm;\r\n        var loopIn, loop_in, loopOut, loop_out, smooth;\r\n        var toWorld,fromWorld,fromComp,toComp,fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer,thisComp,mask,valueAtTime,velocityAtTime;\r\n        var __expression_functions = [];\r\n        if(data.xf) {\r\n            var i, len = data.xf.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\r\n            }\r\n        }\r\n\r\n        var scoped_bm_rt;\r\n        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n        var numKeys = property.kf ? data.k.length : 0;\r\n\r\n        var active = !this.data || this.data.hd !== true;\r\n\r\n        var wiggle = function wiggle(freq,amp){\r\n            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n            var addedAmps = createTypedArray('float32', len);\r\n            freq = 5;\r\n            var iterations = Math.floor(time*freq);\r\n            i = 0;\r\n            j = 0;\r\n            while(i<iterations){\r\n                //var rnd = BMMath.random();\r\n                for(j=0;j<len;j+=1){\r\n                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n                    //addedAmps[j] += -amp + amp*2*rnd;\r\n                }\r\n                i += 1;\r\n            }\r\n            //var rnd2 = BMMath.random();\r\n            var periods = time*freq;\r\n            var perc = periods - Math.floor(periods);\r\n            var arr = createTypedArray('float32', len);\r\n            if(len>1){\r\n                for(j=0;j<len;j+=1){\r\n                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n                }\r\n                return arr;\r\n            } else {\r\n                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n            }\r\n        }.bind(this);\r\n\r\n        if(thisProperty.loopIn) {\r\n            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n            loop_in = loopIn;\r\n        }\r\n\r\n        if(thisProperty.loopOut) {\r\n            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n            loop_out = loopOut;\r\n        }\r\n\r\n        if(thisProperty.smooth) {\r\n            smooth = thisProperty.smooth.bind(thisProperty);\r\n        }\r\n\r\n        function loopInDuration(type,duration){\r\n            return loopIn(type,duration,true);\r\n        }\r\n\r\n        function loopOutDuration(type,duration){\r\n            return loopOut(type,duration,true);\r\n        }\r\n\r\n        if(this.getValueAtTime) {\r\n            valueAtTime = this.getValueAtTime.bind(this);\r\n        }\r\n\r\n        if(this.getVelocityAtTime) {\r\n            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n        }\r\n\r\n        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\r\n        function lookAt(elem1,elem2){\r\n            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n            return [yaw,pitch,0];\r\n        }\r\n\r\n        function easeOut(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function easeIn(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function ease(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function applyEase(fn, t, tMin, tMax, val1, val2) {\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n            var mult = fn(t);\r\n            if($bm_isInstanceOfArray(val1)) {\r\n                var i, len = val1.length;\r\n                var arr = createTypedArray('float32', len);\r\n                for (i = 0; i < len; i += 1) {\r\n                    arr[i] = (val2[i] - val1[i]) * mult + val1[i];\r\n                }\r\n                return arr;\r\n            } else {\r\n                return (val2 - val1) * mult + val1;\r\n            }\r\n        }\r\n\r\n        function nearestKey(time){\r\n            var i, len = data.k.length,index,keyTime;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                index = 0;\r\n                keyTime = 0;\r\n            } else {\r\n                index = -1;\r\n                time *= elem.comp.globalData.frameRate;\r\n                if (time < data.k[0].t) {\r\n                    index = 1;\r\n                    keyTime = data.k[0].t;\r\n                } else {\r\n                    for(i=0;i<len-1;i+=1){\r\n                        if(time === data.k[i].t){\r\n                            index = i + 1;\r\n                            keyTime = data.k[i].t;\r\n                            break;\r\n                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n                                index = i + 2;\r\n                                keyTime = data.k[i+1].t;\r\n                            } else {\r\n                                index = i + 1;\r\n                                keyTime = data.k[i].t;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(index === -1){\r\n                        index = i + 1;\r\n                        keyTime = data.k[i].t;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            var ob = {};\r\n            ob.index = index;\r\n            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n            return ob;\r\n        }\r\n\r\n        function key(ind){\r\n            var ob, i, len;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                throw new Error('The property has no keyframe at index ' + ind);\r\n            }\r\n            ind -= 1;\r\n            ob = {\r\n                time: data.k[ind].t/elem.comp.globalData.frameRate,\r\n                value: []\r\n            };\r\n            var arr;\r\n            if(ind === data.k.length - 1 && !data.k[ind].h){\r\n                arr = (data.k[ind].s || data.k[ind].s === 0) ? data.k[ind-1].s : data.k[ind].e;\r\n            }else{\r\n                arr = data.k[ind].s;\r\n            }\r\n            len = arr.length;\r\n            for(i=0;i<len;i+=1){\r\n                ob[i] = arr[i];\r\n                ob.value[i] = arr[i]\r\n            }\r\n            return ob;\r\n        }\r\n\r\n        function framesToTime(frames, fps) { \r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return frames / fps;\r\n        }\r\n\r\n        function timeToFrames(t, fps) {\r\n            if (!t && t !== 0) {\r\n                t = time;\r\n            }\r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return t * fps;\r\n        }\r\n\r\n        function seedRandom(seed){\r\n            BMMath.seedrandom(randSeed + seed);\r\n        }\r\n\r\n        function sourceRectAtTime() {\r\n            return elem.sourceRectAtTime();\r\n        }\r\n\r\n        function substring(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substring(init)\r\n                }\r\n                return value.substring(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        function substr(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substr(init)\r\n                }\r\n                return value.substr(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        var time, velocity, value, text, textIndex, textTotal, selectorValue;\r\n        var index = elem.data.ind;\r\n        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n        var parent;\r\n        var randSeed = Math.floor(Math.random()*1000000);\r\n        var globalData = elem.globalData;\r\n        function executeExpression(_value) {\r\n            // globalData.pushExpression();\r\n            value = _value;\r\n            if (_needsRandom) {\r\n                seedRandom(randSeed);\r\n            }\r\n            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n                return value;\r\n            }\r\n            if(this.propType === 'textSelector'){\r\n                textIndex = this.textIndex;\r\n                textTotal = this.textTotal;\r\n                selectorValue = this.selectorValue;\r\n            }\r\n            if (!thisLayer) {\r\n                text = elem.layerInterface.text;\r\n                thisLayer = elem.layerInterface;\r\n                thisComp = elem.comp.compInterface;\r\n                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n                toComp = thisLayer.toComp.bind(thisLayer);\r\n                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n                fromCompToSurface = fromComp;\r\n            }\r\n            if (!transform) {\r\n                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n                $bm_transform = transform;\r\n                if(transform) {\r\n                    anchorPoint = transform.anchorPoint;\r\n                    /*position = transform.position;\r\n                    rotation = transform.rotation;\r\n                    scale = transform.scale;*/\r\n                }\r\n            }\r\n            \r\n            if (elemType === 4 && !content) {\r\n                content = thisLayer(\"ADBE Root Vectors Group\");\r\n            }\r\n            if (!effect) {\r\n                effect = thisLayer(4);\r\n            }\r\n            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n            if (hasParent && !parent) {\r\n                parent = elem.hierarchy[0].layerInterface;\r\n            }\r\n            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n            if (needsVelocity) {\r\n                velocity = velocityAtTime(time);\r\n            }\r\n            expression_function();\r\n            this.frameExpressionId = elem.globalData.frameId;\r\n\r\n\r\n            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n            if (scoped_bm_rt.propType === \"shape\") {\r\n                scoped_bm_rt = scoped_bm_rt.v;\r\n            }\r\n            // globalData.popExpression();\r\n            return scoped_bm_rt;\r\n        }\r\n        return executeExpression;\r\n    }\r\n\r\n    ob.initiateExpression = initiateExpression;\r\n    return ob;\r\n}());\r\nvar expressionHelpers = (function(){\r\n\r\n    function searchExpressions(elem,data,prop){\r\n        if(data.x){\r\n            prop.k = true;\r\n            prop.x = true;\r\n            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n        }\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getSpeedAtTime(frameNum) {\r\n        var delta = -0.01;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var speed = 0;\r\n        if(v1.length){\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                speed += Math.pow(v2[i] - v1[i], 2);\r\n            }\r\n            speed = Math.sqrt(speed) * 100;\r\n        } else {\r\n            speed = 0;\r\n        }\r\n        return speed;\r\n    }\r\n\r\n    function getVelocityAtTime(frameNum) {\r\n        if(this.vel !== undefined){\r\n            return this.vel;\r\n        }\r\n        var delta = -0.001;\r\n        //frameNum += this.elem.data.st;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var velocity;\r\n        if(v1.length){\r\n            velocity = createTypedArray('float32', v1.length);\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                //removing frameRate\r\n                //if needed, don't add it here\r\n                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n                velocity[i] = (v2[i] - v1[i])/delta;\r\n            }\r\n        } else {\r\n            velocity = (v2 - v1)/delta;\r\n        }\r\n        return velocity;\r\n    }\r\n\r\n    function getStaticValueAtTime() {\r\n        return this.pv;\r\n    }\r\n\r\n    function setGroupProperty(propertyGroup){\r\n        this.propertyGroup = propertyGroup;\r\n    }\r\n\r\n\treturn {\r\n\t\tsearchExpressions: searchExpressions,\r\n\t\tgetSpeedAtTime: getSpeedAtTime,\r\n\t\tgetVelocityAtTime: getVelocityAtTime,\r\n\t\tgetValueAtTime: getValueAtTime,\r\n\t\tgetStaticValueAtTime: getStaticValueAtTime,\r\n\t\tsetGroupProperty: setGroupProperty,\r\n\t}\r\n}());\r\n(function addPropertyDecorator() {\r\n\r\n    function loopOut(type,duration,durationFlag){\r\n        if(!this.k || !this.keyframes){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n        if(currentFrame<=lastKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, firstKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n                } else {\r\n                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n                }\r\n                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(iterations % 2 !== 0){\r\n                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n                    }\r\n                    return ret;\r\n                }\r\n                return (endV-initV)*repeats + current;\r\n            } else if(type === 'continue'){\r\n                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(lastValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n            }\r\n            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function loopIn(type,duration, durationFlag) {\r\n        if(!this.k){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var firstKeyFrame = keyframes[0].t;\r\n        if(currentFrame>=firstKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, lastKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                lastKeyFrame = keyframes[duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n                } else {\r\n                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n                }\r\n                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n                if(iterations % 2 === 0){\r\n                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return current-(endV-initV)*repeats;\r\n            } else if(type === 'continue'){\r\n                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(firstValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n            }\r\n            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function smooth(width, samples) {\r\n        if (!this.k){\r\n            return this.pv;\r\n        }\r\n        width = (width || 0.4) * 0.5;\r\n        samples = Math.floor(samples || 5);\r\n        if (samples <= 1) {\r\n            return this.pv;\r\n        }\r\n        var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\r\n        var initFrame = currentTime - width;\r\n        var endFrame = currentTime + width;\r\n        var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\r\n        var i = 0, j = 0;\r\n        var value;\r\n        if (this.pv.length) {\r\n            value = createTypedArray('float32', this.pv.length);\r\n        } else {\r\n            value = 0;\r\n        }\r\n        var sampleValue;\r\n        while (i < samples) {\r\n            sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\r\n            if(this.pv.length) {\r\n                for (j = 0; j < this.pv.length; j += 1) {\r\n                    value[j] += sampleValue[j];\r\n                }\r\n            } else {\r\n                value += sampleValue;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(this.pv.length) {\r\n            for (j = 0; j < this.pv.length; j += 1) {\r\n                value[j] /= samples;\r\n            }\r\n        } else {\r\n            value /= samples;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getTransformValueAtTime(time) {\r\n        console.warn('Transform at time not supported');\r\n    }\r\n\r\n    function getTransformStaticValueAtTime(time) {\r\n\r\n    }\r\n\r\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n        var prop = getTransformProperty(elem, data, container);\r\n        if(prop.dynamicProperties.length) {\r\n            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetProp = PropertyFactory.getProp;\r\n    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n        var prop = propertyGetProp(elem,data,type, mult, container);\r\n        //prop.getVelocityAtTime = getVelocityAtTime;\r\n        //prop.loopOut = loopOut;\r\n        //prop.loopIn = loopIn;\r\n        if(prop.kf){\r\n            prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        prop.loopOut = loopOut;\r\n        prop.loopIn = loopIn;\r\n        prop.smooth = smooth;\r\n        prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\r\n        prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\r\n        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n        prop.propertyIndex = data.ix;\r\n        var value = 0;\r\n        if(type !== 0) {\r\n            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n        }\r\n        prop._cachingAtTime = {\r\n            lastFrame: initialDefaultFrame,\r\n            lastIndex: 0,\r\n            value: value\r\n        };\r\n        expressionHelpers.searchExpressions(elem,data,prop);\r\n        if(prop.k){\r\n            container.addDynamicProperty(prop);\r\n        }\r\n\r\n        return prop;\r\n    };\r\n\r\n    function getShapeValueAtTime(frameNum) {\r\n        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n        if (!this._cachingAtTime) {\r\n            this._cachingAtTime = {\r\n                shapeValue: shape_pool.clone(this.pv),\r\n                lastIndex: 0,\r\n                lastTime: initialDefaultFrame\r\n            };\r\n        }\r\n        \r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastTime) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\r\n            this._cachingAtTime.lastTime = frameNum;\r\n            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n        }\r\n        return this._cachingAtTime.shapeValue;\r\n    }\r\n\r\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\r\n    function ShapeExpressions(){}\r\n    ShapeExpressions.prototype = {\r\n        vertices: function(prop, time){\r\n            if (this.k) {\r\n                this.getValue();\r\n            }\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            var i, len = shapePath._length;\r\n            var vertices = shapePath[prop];\r\n            var points = shapePath.v;\r\n            var arr = createSizedArray(len);\r\n            for(i = 0; i < len; i += 1) {\r\n                if(prop === 'i' || prop === 'o') {\r\n                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n                } else {\r\n                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n                }\r\n                \r\n            }\r\n            return arr;\r\n        },\r\n        points: function(time){\r\n            return this.vertices('v', time);\r\n        },\r\n        inTangents: function(time){\r\n            return this.vertices('i', time);\r\n        },\r\n        outTangents: function(time){\r\n            return this.vertices('o', time);\r\n        },\r\n        isClosed: function(){\r\n            return this.v.c;\r\n        },\r\n        pointOnPath: function(perc, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            if(!this._segmentsLength) {\r\n                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n            }\r\n\r\n            var segmentsLength = this._segmentsLength;\r\n            var lengths = segmentsLength.lengths;\r\n            var lengthPos = segmentsLength.totalLength * perc;\r\n            var i = 0, len = lengths.length;\r\n            var j = 0, jLen;\r\n            var accumulatedLength = 0, pt;\r\n            while(i < len) {\r\n                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n                    var initIndex = i;\r\n                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n                    break;\r\n                } else {\r\n                    accumulatedLength += lengths[i].addedLength;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(!pt){\r\n                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n            }\r\n            return pt;\r\n        },\r\n        vectorOnPath: function(perc, time, vectorType){\r\n            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n            var pt1 = this.pointOnPath(perc, time);\r\n            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n            var xLength = pt2[0] - pt1[0];\r\n            var yLength = pt2[1] - pt1[1];\r\n            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n            return unitVector;\r\n        },\r\n        tangentOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'tangent');\r\n        },\r\n        normalOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'normal');\r\n        },\r\n        setGroupProperty: expressionHelpers.setGroupProperty,\r\n        getValueAtTime: expressionHelpers.getStaticValueAtTime\r\n    };\r\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\r\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n        prop.propertyIndex = data.ix;\r\n        prop.lock = false;\r\n        if(type === 3){\r\n            expressionHelpers.searchExpressions(elem,data.pt,prop);\r\n        } else if(type === 4){\r\n            expressionHelpers.searchExpressions(elem,data.ks,prop);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    };\r\n}());\r\n(function addDecorator() {\r\n\r\n    function searchExpressions(){\r\n        if(this.data.d.x){\r\n            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n            this.addEffect(this.getExpressionValue.bind(this));\r\n            return true;\r\n        }\r\n    }\r\n\r\n    TextProperty.prototype.getExpressionValue = function(currentValue, text) {\r\n        var newValue = this.calculateExpression(text);\r\n        if(currentValue.t !== newValue) {\r\n            var newData = {};\r\n            this.copyData(newData, currentValue);\r\n            newData.t = newValue.toString();\r\n            newData.__complete = false;\r\n            return newData;\r\n        }\r\n        return currentValue;\r\n    }\r\n\r\n    TextProperty.prototype.searchProperty = function(){\r\n\r\n        var isKeyframed = this.searchKeyframes();\r\n        var hasExpressions = this.searchExpressions();\r\n        this.kf = isKeyframed || hasExpressions;\r\n        return this.kf;\r\n    };\r\n\r\n    TextProperty.prototype.searchExpressions = searchExpressions;\r\n    \r\n}());\r\nvar ShapeExpressionInterface = (function(){\r\n\r\n    function iterateElements(shapes,view, propertyGroup){\r\n        var arr = [];\r\n        var i, len = shapes ? shapes.length : 0;\r\n        for(i=0;i<len;i+=1){\r\n            if(shapes[i].ty == 'gr'){\r\n                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'fl'){\r\n                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'st'){\r\n                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tm'){\r\n                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tr'){\r\n                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'el'){\r\n                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'sr'){\r\n                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'sh'){\r\n                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rc'){\r\n                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rd'){\r\n                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rp'){\r\n                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n       var interfaces;\r\n       var interfaceFunction = function _interfaceFunction(value){\r\n           var i = 0, len = interfaces.length;\r\n            while(i<len){\r\n                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n                   return interfaces[i];\r\n                }\r\n                i+=1;\r\n            }\r\n            if(typeof value === 'number'){\r\n               return interfaces[value-1];\r\n            }\r\n       };\r\n       interfaceFunction.propertyGroup = function(val){\r\n           if(val === 1){\r\n               return interfaceFunction;\r\n           } else{\r\n               return propertyGroup(val-1);\r\n           }\r\n       };\r\n       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n       interfaceFunction.numProperties = interfaces.length;\r\n       interfaceFunction.propertyIndex = shape.cix;\r\n       interfaceFunction._name = shape.nm;\r\n\r\n       return interfaceFunction;\r\n   }\r\n\r\n    function groupInterfaceFactory(shape,view, propertyGroup){\r\n        var interfaceFunction = function _interfaceFunction(value){\r\n            switch(value){\r\n                case 'ADBE Vectors Group':\r\n                case 'Contents':\r\n                case 2:\r\n                    return interfaceFunction.content;\r\n                //Not necessary for now. Keeping them here in case a new case appears\r\n                //case 'ADBE Vector Transform Group':\r\n                //case 3:\r\n                default:\r\n                    return interfaceFunction.transform;\r\n            }\r\n        };\r\n        interfaceFunction.propertyGroup = function(val){\r\n            if(val === 1){\r\n                return interfaceFunction;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        };\r\n        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n        interfaceFunction.content = content;\r\n        interfaceFunction.transform = transformInterface;\r\n        Object.defineProperty(interfaceFunction, '_name', {\r\n            get: function(){\r\n                return shape.nm;\r\n            }\r\n        });\r\n        //interfaceFunction.content = interfaceFunction;\r\n        interfaceFunction.numProperties = shape.np;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.nm = shape.nm;\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function fillInterfaceFactory(shape,view,propertyGroup){\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(propertyGroup);\r\n        view.o.setGroupProperty(propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val === 1){\r\n                return ob;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        }\r\n        function _dashPropertyGroup(val){\r\n            if(val === 1){\r\n                return dashOb;\r\n            } else{\r\n                return _propertyGroup(val-1);\r\n            }\r\n        }\r\n        function addPropertyToDashOb(i) {\r\n            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n                get: ExpressionPropertyInterface(view.d.dataProps[i].p)\r\n            });\r\n        }\r\n        var i, len = shape.d ? shape.d.length : 0;\r\n        var dashOb = {};\r\n        for (i = 0; i < len; i += 1) {\r\n            addPropertyToDashOb(i);\r\n            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n                return interfaceFunction.strokeWidth;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            'strokeWidth': {\r\n                get: ExpressionPropertyInterface(view.w)\r\n            },\r\n            'dash': {\r\n                get: function() {\r\n                    return dashOb;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n        view.w.setGroupProperty(_propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function trimInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        view.s.setGroupProperty(_propertyGroup);\r\n        view.e.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n                return interfaceFunction.end;\r\n            }\r\n            if(val === shape.s.ix){\r\n                return interfaceFunction.start;\r\n            }\r\n            if(val === shape.o.ix){\r\n                return interfaceFunction.offset;\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'start': {\r\n                get: ExpressionPropertyInterface(view.s)\r\n            },\r\n            'end': {\r\n                get: ExpressionPropertyInterface(view.e)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function transformInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n        if(view.transform.mProps.sk){\r\n            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n        }\r\n        view.transform.op.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.a.ix === value || value === 'Anchor Point'){\r\n                return interfaceFunction.anchorPoint;\r\n            }\r\n            if(shape.o.ix === value || value === 'Opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n            if(shape.p.ix === value || value === 'Position'){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.s.ix === value || value === 'Scale'){\r\n                return interfaceFunction.scale;\r\n            }\r\n            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n                return interfaceFunction.skew;\r\n            }\r\n            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n                return interfaceFunction.skewAxis;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.o)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.p)\r\n            },\r\n            'anchorPoint': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.a)\r\n            },\r\n            'scale': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.s)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.r)\r\n            },\r\n            'skew': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sk)\r\n            },\r\n            'skewAxis': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sa)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.ty = 'tr';\r\n        interfaceFunction.mn = shape.mn;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.s.ix === value){\r\n                return interfaceFunction.size;\r\n            }\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function starInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.or.setGroupProperty(_propertyGroup);\r\n        prop.os.setGroupProperty(_propertyGroup);\r\n        prop.pt.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n        if(shape.ir){\r\n            prop.ir.setGroupProperty(_propertyGroup);\r\n            prop.is.setGroupProperty(_propertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.pt.ix === value){\r\n                return interfaceFunction.points;\r\n            }\r\n            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n                return interfaceFunction.outerRadius;\r\n            }\r\n            if(shape.os.ix === value){\r\n                return interfaceFunction.outerRoundness;\r\n            }\r\n            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n                return interfaceFunction.innerRadius;\r\n            }\r\n            if(shape.is && shape.is.ix === value){\r\n                return interfaceFunction.innerRoundness;\r\n            }\r\n\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'points': {\r\n                get: ExpressionPropertyInterface(prop.pt)\r\n            },\r\n            'outerRadius': {\r\n                get: ExpressionPropertyInterface(prop.or)\r\n            },\r\n            'outerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.os)\r\n            },\r\n            'innerRadius': {\r\n                get: ExpressionPropertyInterface(prop.ir)\r\n            },\r\n            'innerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.is)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function rectInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.roundness;\r\n            }\r\n            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n                return interfaceFunction.size;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'roundness': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.rd.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n                return interfaceFunction.radius;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'radius': {\r\n                get: ExpressionPropertyInterface(prop.rd)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.c.setGroupProperty(_propertyGroup);\r\n        prop.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.c.ix === value || 'Copies' === value){\r\n                return interfaceFunction.copies;\r\n            } else if(shape.o.ix === value || 'Offset' === value){\r\n                return interfaceFunction.offset;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'copies': {\r\n                get: ExpressionPropertyInterface(prop.c)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(prop.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function pathInterfaceFactory(shape,view,propertyGroup){\r\n        var prop = view.sh;\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        prop.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n                return interfaceFunction.path;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'path': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            'shape': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'ix': { value: shape.ix },\r\n            'mn': { value: shape.mn }\r\n        });\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return function(shapes,view,propertyGroup) {\r\n        var interfaces;\r\n        function _interfaceFunction(value){\r\n            if(typeof value === 'number'){\r\n                return interfaces[value-1];\r\n            } else {\r\n                var i = 0, len = interfaces.length;\r\n                while(i<len){\r\n                    if(interfaces[i]._name === value){\r\n                        return interfaces[i];\r\n                    }\r\n                    i+=1;\r\n                }\r\n            }\r\n        }\r\n        _interfaceFunction.propertyGroup = propertyGroup;\r\n        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n        _interfaceFunction.numProperties = interfaces.length;\r\n        return _interfaceFunction;\r\n    };\r\n}());\r\n\r\nvar TextExpressionInterface = (function(){\r\n\treturn function(elem){\r\n        var _prevValue, _sourceText;\r\n        function _thisLayerFunction(){\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n            get: function(){\r\n                elem.textProperty.getValue()\r\n                var stringValue = elem.textProperty.currentData.t;\r\n                if(stringValue !== _prevValue) {\r\n                    elem.textProperty.currentData.t = _prevValue;\r\n                    _sourceText = new String(stringValue);\r\n                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n                }\r\n                return _sourceText;\r\n            }\r\n        });\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar LayerExpressionInterface = (function (){\r\n    function toWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n        }\r\n        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n    }\r\n    function fromWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n    function fromComp(arr){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n\r\n    function sampleImage() {\r\n        return [1,1,1,1];\r\n    }\r\n\r\n\r\n    return function(elem){\r\n\r\n        var transformInterface;\r\n\r\n        function _registerMaskInterface(maskManager){\r\n            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n        }\r\n        function _registerEffectsInterface(effects){\r\n            _thisLayerFunction.effect = effects;\r\n        }\r\n\r\n        function _thisLayerFunction(name){\r\n            switch(name){\r\n                case \"ADBE Root Vectors Group\":\r\n                case \"Contents\":\r\n                case 2:\r\n                    return _thisLayerFunction.shapeInterface;\r\n                case 1:\r\n                case 6:\r\n                case \"Transform\":\r\n                case \"transform\":\r\n                case \"ADBE Transform Group\":\r\n                    return transformInterface;\r\n                case 4:\r\n                case \"ADBE Effect Parade\":\r\n                case \"effects\":\r\n                case \"Effects\":\r\n                    return _thisLayerFunction.effect;\r\n            }\r\n        }\r\n        _thisLayerFunction.toWorld = toWorld;\r\n        _thisLayerFunction.fromWorld = fromWorld;\r\n        _thisLayerFunction.toComp = toWorld;\r\n        _thisLayerFunction.fromComp = fromComp;\r\n        _thisLayerFunction.sampleImage = sampleImage;\r\n        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n        _thisLayerFunction._elem = elem;\r\n        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n        Object.defineProperties(_thisLayerFunction,{\r\n            hasParent: {\r\n                get: function(){\r\n                    return elem.hierarchy.length;\r\n                }\r\n            },\r\n            parent: {\r\n                get: function(){\r\n                    return elem.hierarchy[0].layerInterface;\r\n                }\r\n            },\r\n            rotation: getDescriptor(transformInterface, 'rotation'),\r\n            scale: getDescriptor(transformInterface, 'scale'),\r\n            position: getDescriptor(transformInterface, 'position'),\r\n            opacity: getDescriptor(transformInterface, 'opacity'),\r\n            anchorPoint: anchorPointDescriptor,\r\n            anchor_point: anchorPointDescriptor,\r\n            transform: {\r\n                get: function () {\r\n                    return transformInterface;\r\n                }\r\n            },\r\n            active: {\r\n                get: function(){\r\n                    return elem.isInRange;\r\n                }\r\n            }\r\n        });\r\n\r\n        _thisLayerFunction.startTime = elem.data.st;\r\n        _thisLayerFunction.index = elem.data.ind;\r\n        _thisLayerFunction.source = elem.data.refId;\r\n        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n        _thisLayerFunction.inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction.outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction._name = elem.data.nm;\r\n\r\n        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\n\r\nvar CompExpressionInterface = (function (){\r\n    return function(comp){\r\n        function _thisLayerFunction(name){\r\n            var i=0, len = comp.layers.length;\r\n            while(i<len){\r\n                if(comp.layers[i].nm === name || comp.layers[i].ind === name){\r\n                    return comp.elements[i].layerInterface;\r\n                }\r\n                i += 1;\r\n            }\r\n            return null;\r\n            //return {active:false};\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"_name\", { value:comp.data.nm });\r\n        _thisLayerFunction.layer = _thisLayerFunction;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\r\n        _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.frameDuration = 1/comp.globalData.frameRate;\r\n        _thisLayerFunction.displayStartTime = 0;\r\n        _thisLayerFunction.numLayers = comp.layers.length;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar TransformExpressionInterface = (function (){\r\n    return function(transform){\r\n        function _thisFunction(name){\r\n            switch(name){\r\n                case \"scale\":\r\n                case \"Scale\":\r\n                case \"ADBE Scale\":\r\n                case 6:\r\n                    return _thisFunction.scale;\r\n                case \"rotation\":\r\n                case \"Rotation\":\r\n                case \"ADBE Rotation\":\r\n                case \"ADBE Rotate Z\":\r\n                case 10:\r\n                    return _thisFunction.rotation;\r\n                case \"ADBE Rotate X\":\r\n                    return _thisFunction.xRotation;\r\n                case \"ADBE Rotate Y\":\r\n                    return _thisFunction.yRotation;\r\n                case \"position\":\r\n                case \"Position\":\r\n                case \"ADBE Position\":\r\n                case 2:\r\n                    return _thisFunction.position;\r\n                case 'ADBE Position_0':\r\n                    return _thisFunction.xPosition;\r\n                case 'ADBE Position_1':\r\n                    return _thisFunction.yPosition;\r\n                case 'ADBE Position_2':\r\n                    return _thisFunction.zPosition;\r\n                case \"anchorPoint\":\r\n                case \"AnchorPoint\":\r\n                case \"Anchor Point\":\r\n                case \"ADBE AnchorPoint\":\r\n                case 1:\r\n                    return _thisFunction.anchorPoint;\r\n                case \"opacity\":\r\n                case \"Opacity\":\r\n                case 11:\r\n                    return _thisFunction.opacity;\r\n            }\r\n        }\r\n\r\n        Object.defineProperty(_thisFunction, \"rotation\", {\r\n            get: ExpressionPropertyInterface(transform.r || transform.rz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rz || transform.r)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rx)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n            get: ExpressionPropertyInterface(transform.ry)\r\n        });\r\n        Object.defineProperty(_thisFunction, \"scale\", {\r\n            get: ExpressionPropertyInterface(transform.s)\r\n        });\r\n\r\n        if(transform.p) {\r\n            var _transformFactory = ExpressionPropertyInterface(transform.p);\r\n        }\r\n        Object.defineProperty(_thisFunction, \"position\", {\r\n            get: function () {\r\n                if(transform.p) {\r\n                    return _transformFactory();\r\n                } else {\r\n                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n            get: ExpressionPropertyInterface(transform.px)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n            get: ExpressionPropertyInterface(transform.py)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n            get: ExpressionPropertyInterface(transform.pz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n            get: ExpressionPropertyInterface(transform.a)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"opacity\", {\r\n            get: ExpressionPropertyInterface(transform.o)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skew\", {\r\n            get: ExpressionPropertyInterface(transform.sk)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n            get: ExpressionPropertyInterface(transform.sa)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"orientation\", {\r\n            get: ExpressionPropertyInterface(transform.or)\r\n        });\r\n\r\n        return _thisFunction;\r\n    };\r\n}());\r\nvar ProjectInterface = (function (){\r\n\r\n    function registerComposition(comp){\r\n        this.compositions.push(comp);\r\n    }\r\n\r\n    return function(){\r\n        function _thisProjectFunction(name){\r\n            var i = 0, len = this.compositions.length;\r\n            while(i<len){\r\n                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n                    if(this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\r\n                        this.compositions[i].prepareFrame(this.currentFrame);\r\n                    }\r\n                    return this.compositions[i].compInterface;\r\n                }\r\n                i+=1;\r\n            }\r\n        }\r\n\r\n        _thisProjectFunction.compositions = [];\r\n        _thisProjectFunction.currentFrame = 0;\r\n\r\n        _thisProjectFunction.registerComposition = registerComposition;\r\n\r\n\r\n\r\n        return _thisProjectFunction;\r\n    };\r\n}());\r\nvar EffectsExpressionInterface = (function (){\r\n    var ob = {\r\n        createEffectsInterface: createEffectsInterface\r\n    };\r\n\r\n    function createEffectsInterface(elem, propertyGroup){\r\n        if(elem.effectsManager){\r\n\r\n            var effectElements = [];\r\n            var effectsData = elem.data.ef;\r\n            var i, len = elem.effectsManager.effectElements.length;\r\n            for(i=0;i<len;i+=1){\r\n                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n            }\r\n\r\n            return function(name){\r\n                var effects = elem.data.ef || [], i = 0, len = effects.length;\r\n                while(i<len) {\r\n                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                        return effectElements[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    function createGroupInterface(data,elements, propertyGroup, elem){\r\n        var effectElements = [];\r\n        var i, len = data.ef.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(data.ef[i].ty === 5){\r\n                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n            } else {\r\n                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n            }\r\n        }\r\n\r\n        function _propertyGroup(val) {\r\n            if(val === 1){\r\n               return groupInterface;\r\n            } else{\r\n               return propertyGroup(val-1);\r\n            }\r\n        }\r\n\r\n        var groupInterface = function(name){\r\n            var effects = data.ef, i = 0, len = effects.length;\r\n            while(i<len) {\r\n                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                    if(effects[i].ty === 5){\r\n                        return effectElements[i];\r\n                    } else {\r\n                        return effectElements[i]();\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return effectElements[0]();\r\n        };\r\n\r\n        groupInterface.propertyGroup = _propertyGroup;\r\n\r\n        if(data.mn === 'ADBE Color Control'){\r\n            Object.defineProperty(groupInterface, 'color', {\r\n                get: function(){\r\n                    return effectElements[0]();\r\n                }\r\n            });\r\n        }\r\n        Object.defineProperty(groupInterface, 'numProperties', {\r\n            get: function(){\r\n                return data.np;\r\n            }\r\n        });\r\n        groupInterface.active = groupInterface.enabled = data.en !== 0;\r\n        return groupInterface;\r\n    }\r\n\r\n    function createValueInterface(element, type, elem, propertyGroup){\r\n        var expressionProperty = ExpressionPropertyInterface(element.p);\r\n        function interfaceFunction(){\r\n            if(type === 10){\r\n                return elem.comp.compInterface(element.p.v);\r\n            }\r\n            return expressionProperty();\r\n        }\r\n\r\n        if(element.p.setGroupProperty) {\r\n            element.p.setGroupProperty(propertyGroup);\r\n        }\r\n\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return ob;\r\n\r\n}());\r\nvar MaskManagerInterface = (function(){\r\n\r\n\tfunction MaskInterface(mask, data){\r\n\t\tthis._mask = mask;\r\n\t\tthis._data = data;\r\n\t}\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n        get: function(){\r\n                if(this._mask.prop.k){\r\n                    this._mask.prop.getValue();\r\n                }\r\n                return this._mask.prop;\r\n            }\r\n        });\r\n\r\n\tvar MaskManager = function(maskManager, elem){\r\n\t\tvar _maskManager = maskManager;\r\n\t\tvar _elem = elem;\r\n\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\tvar i, len = maskManager.viewData.length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t}\r\n\r\n\t\tvar maskFunction = function(name){\r\n\t\t\ti = 0;\r\n\t\t    while(i<len){\r\n\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t            return _masksInterfaces[i];\r\n\t\t        }\r\n\t\t        i += 1;\r\n\t\t    }\r\n\t\t};\r\n\t\treturn maskFunction;\r\n\t};\r\n\treturn MaskManager;\r\n}());\r\n\r\nvar ExpressionPropertyInterface = (function() {\r\n\r\n    var defaultUnidimensionalValue = {pv:0, v:0, mult: 1}\r\n    var defaultMultidimensionalValue = {pv:[0,0,0], v:[0,0,0], mult: 1}\r\n\r\n    function completeProperty(expressionValue, property, type) {\r\n        Object.defineProperty(expressionValue, 'velocity', {\r\n            get: function(){\r\n                return property.getVelocityAtTime(property.comp.currentFrame);\r\n            }\r\n        });\r\n        expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\r\n        expressionValue.key = function(pos) {\r\n            if (!expressionValue.numKeys) {\r\n                return 0;\r\n            } else {\r\n                var value = '';\r\n                if ('s' in property.keyframes[pos-1]) {\r\n                    value = property.keyframes[pos-1].s;\r\n                } else if ('e' in property.keyframes[pos-2]) {\r\n                    value = property.keyframes[pos-2].e;\r\n                } else {\r\n                    value = property.keyframes[pos-2].s;\r\n                }\r\n                var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);\r\n                valueProp.time = property.keyframes[pos-1].t / property.elem.comp.globalData.frameRate;\r\n                return valueProp;\r\n            }\r\n        };\r\n        expressionValue.valueAtTime = property.getValueAtTime;\r\n        expressionValue.speedAtTime = property.getSpeedAtTime;\r\n        expressionValue.velocityAtTime = property.getVelocityAtTime;\r\n        expressionValue.propertyGroup = property.propertyGroup;\r\n    }\r\n\r\n    function UnidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultUnidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var val = property.pv * mult;\r\n        var expressionValue = new Number(val);\r\n        expressionValue.value = val;\r\n        completeProperty(expressionValue, property, 'unidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            val = property.v * mult;\r\n            if(expressionValue.value !== val) {\r\n                expressionValue = new Number(val);\r\n                expressionValue.value = val;\r\n                completeProperty(expressionValue, property, 'unidimensional');\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    function MultidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultMultidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var len = property.pv.length;\r\n        var expressionValue = createTypedArray('float32', len);\r\n        var arrValue = createTypedArray('float32', len);\r\n        expressionValue.value = arrValue;\r\n        completeProperty(expressionValue, property, 'multidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            for (var i = 0; i < len; i += 1) {\r\n                expressionValue[i] = arrValue[i] = property.v[i] * mult;\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    //TODO: try to avoid using this getter\r\n    function defaultGetter() {\r\n        return defaultUnidimensionalValue;\r\n    }\r\n    \r\n    return function(property) {\r\n        if(!property) {\r\n            return defaultGetter;\r\n        } else if (property.propType === 'unidimensional') {\r\n            return UnidimensionalPropertyInterface(property);\r\n        } else {\r\n            return MultidimensionalPropertyInterface(property);\r\n        }\r\n    }\r\n}());\r\n\r\n(function(){\r\n\r\n    var TextExpressionSelectorProp = (function(){\r\n\r\n        function getValueProxy(index,total){\r\n            this.textIndex = index+1;\r\n            this.textTotal = total;\r\n            this.v = this.getValue() * this.mult;\r\n            return this.v;\r\n        }\r\n\r\n        return function TextExpressionSelectorProp(elem,data){\r\n            this.pv = 1;\r\n            this.comp = elem.comp;\r\n            this.elem = elem;\r\n            this.mult = 0.01;\r\n            this.propType = 'textSelector';\r\n            this.textTotal = data.totalChars;\r\n            this.selectorValue = 100;\r\n            this.lastValue = [1,1,1];\r\n            this.k = true;\r\n            this.x = true;\r\n            this.getValue = ExpressionManager.initiateExpression.bind(this)(elem,data,this);\r\n            this.getMult = getValueProxy;\r\n            this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;\r\n            if(this.kf){\r\n                this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);\r\n            } else {\r\n                this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);\r\n            }\r\n            this.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        };\r\n    }());\r\n\r\n\tvar propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n\tTextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n\t    if(data.t === 1){\r\n\t        return new TextExpressionSelectorProp(elem, data,arr);\r\n\t    } else {\r\n\t        return propertyGetTextProp(elem,data,arr);\r\n\t    }\r\n\t};\r\n}());\r\nfunction SliderEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction AngleEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction ColorEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction PointEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction LayerIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction MaskIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction CheckboxEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction NoValueEffect(){\r\n    this.p = {};\r\n}\r\nfunction EffectsManager(){}\r\nfunction EffectsManager(data,element){\r\n    var effects = data.ef || [];\r\n    this.effectElements = [];\r\n    var i,len = effects.length;\r\n    var effectItem;\r\n    for(i=0;i<len;i++) {\r\n        effectItem = new GroupEffect(effects[i],element);\r\n        this.effectElements.push(effectItem);\r\n    }\r\n}\r\n\r\nfunction GroupEffect(data,element){\r\n    this.init(data,element);\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], GroupEffect);\r\n\r\nGroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\r\n\r\nGroupEffect.prototype.init = function(data,element){\r\n    this.data = data;\r\n    this.effectElements = [];\r\n    this.initDynamicPropertyContainer(element);\r\n    var i, len = this.data.ef.length;\r\n    var eff, effects = this.data.ef;\r\n    for(i=0;i<len;i+=1){\r\n        eff = null;\r\n        switch(effects[i].ty){\r\n            case 0:\r\n                eff = new SliderEffect(effects[i],element,this);\r\n                break;\r\n            case 1:\r\n                eff = new AngleEffect(effects[i],element,this);\r\n                break;\r\n            case 2:\r\n                eff = new ColorEffect(effects[i],element,this);\r\n                break;\r\n            case 3:\r\n                eff = new PointEffect(effects[i],element,this);\r\n                break;\r\n            case 4:\r\n            case 7:\r\n                eff = new CheckboxEffect(effects[i],element,this);\r\n                break;\r\n            case 10:\r\n                eff = new LayerIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 11:\r\n                eff = new MaskIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 5:\r\n                eff = new EffectsManager(effects[i],element,this);\r\n                break;\r\n            //case 6:\r\n            default:\r\n                eff = new NoValueEffect(effects[i],element,this);\r\n                break;\r\n        }\r\n        if(eff) {\r\n            this.effectElements.push(eff);\r\n        }\r\n    }\r\n};\r\n\r\n    var lottiejs = {};\r\n\r\n    var _isFrozen = false;\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n\r\n    lottiejs.play = animationManager.play;\r\n    lottiejs.pause = animationManager.pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = animationManager.togglePause;\r\n    lottiejs.setSpeed = animationManager.setSpeed;\r\n    lottiejs.setDirection = animationManager.setDirection;\r\n    lottiejs.stop = animationManager.stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = animationManager.registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = animationManager.resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = animationManager.goToAndStop;\r\n    lottiejs.destroy = animationManager.destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.freeze = animationManager.freeze;\r\n    lottiejs.unfreeze = animationManager.unfreeze;\r\n    lottiejs.getRegisteredAnimations = animationManager.getRegisteredAnimations;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.5.2';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lottie-web/build/player/lottie.js\n// module id = 9\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"lottie\",staticClass:\"lottie\",class:_vm.className})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-c29e0614\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/VueLottieWeb/VueLottieWeb.vue\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}